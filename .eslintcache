[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js":"27"},{"size":433,"mtime":1611675300050,"results":"28","hashOfConfig":"29"},{"size":767,"mtime":1612974466244,"results":"30","hashOfConfig":"29"},{"size":583,"mtime":1611641243610,"results":"31","hashOfConfig":"29"},{"size":2370,"mtime":1612372568432,"results":"32","hashOfConfig":"29"},{"size":1159,"mtime":1612372393179,"results":"33","hashOfConfig":"29"},{"size":2674,"mtime":1611672932421,"results":"34","hashOfConfig":"29"},{"size":8782,"mtime":1612016060804,"results":"35","hashOfConfig":"29"},{"size":557,"mtime":1611802791864,"results":"36","hashOfConfig":"29"},{"size":1763,"mtime":1613548222782,"results":"37","hashOfConfig":"29"},{"size":6184,"mtime":1613020568952,"results":"38","hashOfConfig":"29"},{"size":3752,"mtime":1612448492212,"results":"39","hashOfConfig":"29"},{"size":3740,"mtime":1612437591071,"results":"40","hashOfConfig":"29"},{"size":2652,"mtime":1612444607708,"results":"41","hashOfConfig":"29"},{"size":4353,"mtime":1612372902220,"results":"42","hashOfConfig":"29"},{"size":147,"mtime":1613219802324,"results":"43","hashOfConfig":"29"},{"size":1989,"mtime":1612437207872,"results":"44","hashOfConfig":"29"},{"size":5937,"mtime":1613560319140,"results":"45","hashOfConfig":"29"},{"size":15359,"mtime":1613495207408,"results":"46","hashOfConfig":"29"},{"size":1780,"mtime":1613027735114,"results":"47","hashOfConfig":"29"},{"size":4112,"mtime":1613559877854,"results":"48","hashOfConfig":"29"},{"size":5993,"mtime":1613318809342,"results":"49","hashOfConfig":"29"},{"size":2703,"mtime":1613460230964,"results":"50","hashOfConfig":"29"},{"size":13102,"mtime":1613545521346,"results":"51","hashOfConfig":"29"},{"size":4240,"mtime":1613561161431,"results":"52","hashOfConfig":"29"},{"size":2433,"mtime":1613488883618,"results":"53","hashOfConfig":"29"},{"size":4832,"mtime":1613560807016,"results":"54","hashOfConfig":"29"},{"size":2580,"mtime":1613560190373,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"fdgu1h",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["114","115"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js",["116","117"],"import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport Proptype from 'prop-types';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\n\r\n\r\nconst CompareGraphList = ({activeSize, myProductData, productSizeData}) => {\r\n    console.log(\"Active : \", activeSize);\r\n    console.log(\"My Product Data\", myProductData);\r\n    console.log(\"Product Size Array\", productSizeData);\r\n\r\n    const analyzeData = useCallback((productSizeData) => {\r\n        if(productSizeData.constructor !== Array) return false;\r\n        \r\n        const analyzeResult = {\r\n            size : []\r\n        }\r\n        try {\r\n            // Formating 되야할 사이즈 목록 만들기\r\n            for(const [key] of Object.entries(productSizeData[0])) {\r\n                if(key !== \"name\") analyzeResult[key] = [];\r\n            }\r\n            \r\n            // Formating 된 Object에 실제 수치를 입력\r\n            for(const index in productSizeData) {\r\n                analyzeResult.size[index] = productSizeData[index].name;\r\n                for(const [key, value] of Object.entries(productSizeData[index])) {\r\n                    if(key !== \"name\") {\r\n\r\n                        if(analyzeResult[key] === undefined) throw new Error(`Analyze Error Can't match \"${key}\"`); // 상품별로 서로 맞지 않는 수치정보를 가지고있음.\\\r\n                        if(value < 0) throw new Error(`${key} value is not accept value.`);\r\n                        \r\n                        analyzeResult[key][index] = value; \r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 검증 : size 의 length 값이 각기 수치의 length 값과 같아야함.\r\n            const __length = analyzeResult.size.length;\r\n            for(const [key] of Object.entries(analyzeResult)) {\r\n                if(analyzeResult[key].length !== __length) throw new Error(`Analyze size data not complete data. plz change data.`);\r\n            }\r\n\r\n            console.log(\"\\t +Analyze Data : \", analyzeResult);\r\n            console.log(\"\\t +myProduct Data\", myProductData);\r\n            return analyzeResult;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    },[myProductData,productSizeData]);// __analyze()\r\n    const sizeData = useMemo( () => analyzeData(productSizeData), [productSizeData]);\r\n    const priority = [ \"shoulder\",\"chest\",\"sleeve\",\"arm\",\"T_length\",\"waist\",\"crotch\",\"hips\",\"thigh\",\"hem\",\"calve\",\"B_length\"];\r\n    const transition = new Transition(\"KOR\");\r\n\r\n    return (\r\n        <ul className=\"compare-frame\">\r\n            {\r\n                priority.map((sn, index) => {\r\n                    if(!sizeData[sn]) return null;\r\n                    return (\r\n                        <li key={index} className=\"compare-element\">\r\n                            {\r\n                                myProductData && myProductData[sn]\r\n                                ? \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                </div> \r\n                                : \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                    <p>나의 옷에 수치정보가 존재하지 않습니다.</p>\r\n                                </div>\r\n                            }\r\n                            \r\n                            <DrawGraphResult\r\n                                activeSize={activeSize}\r\n                                myProductData={myProductData ? myProductData[sn]: null}\r\n                                productSizeData={sizeData[sn]}\r\n                                productSizeName={sizeData.size}\r\n                                />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </ul>\r\n    );\r\n}\r\n\r\nCompareGraphList.proptype = {\r\n    activeSize : Proptype.string.isRequired,\r\n    myProductData : Proptype.object,\r\n    productSizeData : Proptype.object.isRequired\r\n}\r\n\r\nconst DrawGraphResult = React.memo(({ activeSize, myProductData, productSizeData, productSizeName}) => {\r\n    const graphFrame = useRef(null);\r\n    let activeRate = null;\r\n\r\n    if(activeSize && myProductData) {\r\n        try { activeRate = productSizeData[productSizeName.indexOf(activeSize)]; } catch(e) {}\r\n    }\r\n\r\n    //let status = myProductData ? 0 : -4;\r\n    const getGraphData = (myProductData, productSizeData) => {\r\n        const __graphData = [-9];\r\n        let myProductMarking = !myProductData;\r\n        for(let i=0; i< 2*(productSizeData.length); ++i) {\r\n            if(i%2 === 1) {\r\n                // 홀수 line\r\n                __graphData.push(-9);\r\n            } else {\r\n                // 짝수 \r\n                if(myProductData && !myProductMarking) {\r\n                    // 나의 상품 위치 표시\r\n                    const compareValue = myProductData - productSizeData[i/2];\r\n                    if(compareValue > 0) {\r\n                        // pass : mark, line, point\r\n                        __graphData.push(-1, -9, -2);\r\n                    } else if(compareValue === 0) {\r\n                        // Same : mark, line, point.myProduct\r\n                        __graphData.push(-1, -9, 2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    } else {\r\n                        // before : mark.myProduct, line, point\r\n                        __graphData.push(1, -9 , -2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    }\r\n                } else {\r\n                    __graphData.push(-1,-9,-2);\r\n                }\r\n            }\r\n        }\r\n        if(!myProductMarking && myProductData) {\r\n            // last active : line, mark.myProduct ,line\r\n            __graphData.push(1, -9);\r\n        } else {\r\n            // last active : line, mark ,line\r\n            __graphData.push(-1, -9);\r\n        }\r\n        return __graphData;\r\n    }\r\n    \r\n    const graphData = useMemo(() => getGraphData(myProductData, productSizeData, activeSize), [myProductData, productSizeData, activeSize]);\r\n    if(activeSize && myProductData) {\r\n        let pointIndex = productSizeName.indexOf(activeSize)*4+3;\r\n        if(graphData[pointIndex] === -2) graphData[pointIndex] = -3;\r\n        else if(graphData[pointIndex] === 2) graphData[pointIndex] = 0;\r\n        \r\n        let myProductIndex = graphData.indexOf(1) > 0 ? graphData.indexOf(1) : graphData.indexOf(2);\r\n        let activeIndex = graphData.indexOf(-3);\r\n        if(myProductIndex !== -1 && activeIndex !== -1) {\r\n            if(myProductIndex - activeIndex > 0) {\r\n                graphData[activeIndex+1] = -4; // left\r\n                for(let i = activeIndex+1; i < myProductIndex; ++i) {if(graphData[i] === -9) graphData[i] = -5;}\r\n            } else {\r\n                graphData[activeIndex] = 3;\r\n                graphData[activeIndex-1] = 4; // right : 현재 오른쪽 방향 화살표\r\n                \r\n                for(let i = myProductIndex+1; i < activeIndex; ++i) {if(graphData[i] === -9) graphData[i] = 5;}\r\n            } \r\n        }\r\n    }\r\n    return(\r\n        <div className=\"graph-analyze\">\r\n            <div className=\"Compare-graph\" ref={graphFrame}>\r\n                {\r\n                    graphData.map((element,index) => {\r\n                        switch(element) {\r\n                            case -9 : { // use\r\n                                return <div key={index} className=\"line\"></div>\r\n\r\n                            }\r\n                            case -5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line minus\"></div>\r\n                            }\r\n                            case -4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line minus\">\r\n                                        <i className=\"material-icons left\">chevron_left</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active minus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -2 : {\r\n                                // point\r\n                                return (\r\n                                    <div key={index} className=\"point\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -1 : {\r\n                                // Marking\r\n                                return <div key={index} className=\"mark\"></div>\r\n                            }\r\n                            case 0 : {\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct active\">\r\n                                        <div>\r\n                                            <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        </div>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 1 : {\r\n                                // Marking.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"mark myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"mark-sr\">{myProductData}</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            case 2 : {\r\n                                // point.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active plus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line plus\">\r\n                                        <i className=\"material-icons right\">chevron_right</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line plus\"></div>\r\n                            }\r\n                            default : {\r\n                                return null;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <CompareResult\r\n                activeRate={activeRate}\r\n                myRate={myProductData} />\r\n        </div>\r\n    );\r\n}); //DrawGraphResult : Component\r\nDrawGraphResult.Proptype = {\r\n    activeSize : Proptype.string,\r\n    myProductData : Proptype.number,\r\n    productSizeData : Proptype.array.isRequired,\r\n    productSizeName : Proptype.array.isRequired\r\n}\r\n\r\n\r\nconst CompareResult = React.memo(({activeRate, myRate}) => {\r\n    if(activeRate && myRate) {\r\n        const value = activeRate - myRate;\r\n        const status = value > 0 ? 1 : value === 0 ? 0 : -1;\r\n        if(status === 1 || status === -1) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <p className={status === 1 ? \"rate plus\" : status === -1 ? \"rate minus\" : \"none\"}>{value}cm</p>\r\n                </div>\r\n            );\r\n        } else if(status === 0) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <div className=\"result-span\">\r\n                        <p className=\"bold\">0</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    } else if(myRate) {\r\n        return (\r\n            <div className=\"compare-result\">\r\n                <p>-</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div className=\"compare-result blank\"></div>);\r\n    }\r\n});\r\n\r\nCompareResult.proptype = {\r\n    activeRate : Proptype.number,\r\n    myRate : Proptype.number\r\n}\r\n\r\n\r\nexport default React.memo(CompareGraphList);\r\n\r\n\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js",["118","119","120","121"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport Proptype from 'prop-types';\r\n\r\nimport ProductData from '../../contents/js/ProductData';\r\n\r\n/*\r\n    @params praw : 검색하려는 주소 - 서버에 요청을 보내려는 주소\r\n    @params setData : 상위 컴포넌트의 data state 의 setter\r\n*/\r\nlet productData = null;\r\nconst SearchResult = ({praw, setData}) => {\r\n    const [responseData, setResponseData] = useState(null);\r\n    const onLoader = useRef(true);\r\n\r\n\r\n    const resultClick = (e) => {\r\n        e.stopPropagation();\r\n        if(responseData.status === 200) setData(responseData);\r\n    }\r\n\r\n    const fetchData = useCallback( async (praw) => {\r\n        try {\r\n            if(!productData) productData = new ProductData(3);\r\n            const __responseData = await productData.get(praw);\r\n\r\n            // 데이터 검증과정 추가해야함.\r\n            \r\n            onLoader.current = false;\r\n            setResponseData(__responseData);\r\n        } catch(error) {\r\n            setResponseData(null);\r\n            console.log(\"error\", error)\r\n        }\r\n    }, [praw]);\r\n    useEffect(() => {\r\n        onLoader.current = true;\r\n    });\r\n    useEffect(() => { \r\n        if(praw !== null) fetchData(praw);\r\n    }, [praw]);\r\n\r\n\r\n    // 검색하려는 검색어(praw) 변화 감지 -> loader 활성화\r\n    \r\n\r\n    //if(false) {\r\n    if(responseData) {\r\n        switch(responseData.status) {\r\n            case 200 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame on\" onClick={(e) => resultClick(e)}>\r\n                        <p>{responseData.info.sname}</p>\r\n                        <h1>{responseData.info.pname}</h1>\r\n                        <div>\r\n                            <p>{responseData.info.ptype}</p>\r\n                            <p>/</p>\r\n                            <p>{responseData.info.subtype}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case 400 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame off\">\r\n                        정보없음\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        // 오류\r\n        return (\r\n            <div className=\"Compare-searchResult-frame loaderFrame\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSearchResult.proptype = {\r\n    praw : Proptype.string,\r\n    setData : Proptype.func.isRequired // 상위 컴포넌트의 data를 변경하는 state 함수\r\n}\r\n\r\n//export default SearchResult;\r\nexport default React.memo(SearchResult);","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js",["122"],"\r\n/*\r\n    status : \r\n    200 - 완성\r\n    401 - 임시저장된 데이터 => 계속 진행 할지 물어보고\r\n*/\r\n\r\n\r\n/* My Product Sample Data */\r\nconst _list = [\r\n    {// 0\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.mr-s.co.kr\",\r\n            type : \"product\",\r\n            code : \"39573\",\r\n            full : \"mr-s.co.kr/product/%EB%8D%94%ED%8B%B0-%EC%99%80%EC%9D%B4%EB%93%9C-%EB%8D%B0%EB%8B%98-%ED%8C%AC%EC%B8%A0/39573\"\r\n        },\r\n        info : {\r\n            sname : \"미스터 스트릿\",\r\n            pname : \"더티 와이드 데님 팬츠\",\r\n            ptype : \"bottom\",\r\n            subtype : \"긴바지\",\r\n            nick : \"어두운 와이드 청바지\"\r\n        },\r\n        size : {\r\n            name: \"L\",\r\n            T_length : 102,\r\n            waist : 41,\r\n            crotch : 34,\r\n            thigh : 34,\r\n            hem : 24\r\n        }\r\n    },\r\n    { // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"마스 롱 와이드 슬랙스\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    },\r\n    { // 2 아우터 / 무스탕\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.mens-castle.co.kr\",\r\n            type : \"product_no\",\r\n            code : \"4926\",\r\n            full : \"www.mens-castle.co.kr/product/detail.html?product_no=4926\"\r\n        },\r\n        info : {\r\n            sname : \"MENS CASTLE\",\r\n            pname : \"엔슬로우 무스탕\",\r\n            ptype : \"outer\",\r\n            subtype : \"무스탕\",\r\n            nick : \"검은색 무스탕\"\r\n        },\r\n        size : {\r\n            name : \"FREE\",\r\n            shoulder : 57,\r\n            chest : 64,\r\n            sleeve : 61,\r\n            T_length : 71\r\n        }\r\n    },\r\n    { // 3 하의 / 청바지\r\n        status: 200,\r\n        praw : {\r\n            domain : \"thesext.co.kr\",\r\n            type : \"product\",\r\n            code : \"2833\",\r\n            full : \"thesext.co.kr/product/%EB%B2%84%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EB%8B%98/2833\"\r\n        },\r\n        info : {\r\n            sname : \"The-Sext\",\r\n            pname : \"버스트 데님\",\r\n            ptype : \"bottom\",\r\n            subtype : \"청바지\",\r\n            nick : \"와이드 노멀 청바지\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 41,\r\n            crotch : 31,\r\n            thigh: 32,\r\n            hem: 20,\r\n            B_length: 99\r\n        }\r\n    },\r\n    { // 4 하의 / 청바지\r\n        status: 200,\r\n        praw : {\r\n            domain : \"thesext.co.kr\",\r\n            type : \"product\",\r\n            code : \"2799\",\r\n            full : \"thesext.co.kr/product/%ED%85%9C%ED%8C%8C%EB%B2%A0%EC%9D%B4-%EA%B8%B0%EB%AA%A8%ED%9B%84%EB%93%9C/2799\"\r\n        },\r\n        info : {\r\n            sname : \"The-Sext\",\r\n            pname : \"템파베이 기모후드\",\r\n            ptype : \"top\",\r\n            subtype : \"후드티\",\r\n            nick : \"너덜너덜 후드티\"\r\n        },\r\n        size : {\r\n            name : \"FREE\",\r\n            shoulder: 70,\r\n            chest: 72,\r\n            sleeve: 55,\r\n            T_length: 67\r\n        }\r\n    },\r\n    { // 5 하의 / 청바지\r\n        status: 401,\r\n        praw : {\r\n            domain : \"www.lookpine.com\",\r\n            type : \"product\",\r\n            code : \"4527\",\r\n            full : \"www.lookpine.com/product/basic-%EC%86%8C%ED%94%84%ED%8A%B8-%EC%8A%AC%EB%9E%8D-%EB%B0%95%EC%8A%A4%ED%8B%B0%EC%85%94%EC%B8%A0/4527\"\r\n        },\r\n        info : {\r\n            sname : \"LOOKPINE\",\r\n            pname : \"BASIC 소프트 슬랍 박스티셔츠\",\r\n            ptype : \"top\",\r\n            subtype : \"긴팔\",\r\n            nick : \"흰색 무지 긴팔\"\r\n        },\r\n        size : {\r\n \r\n        }\r\n    },\r\n    { // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"test1\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    },\r\n    { // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"test2\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    },{ // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"테스트3\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    },\r\n    { // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"테스트 : 긴상품 명을 표기합니다. 의미없는 텍스트 입력하기\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    },{ // 1 바지 / 슬랙스\r\n        status: 200,\r\n        praw : {\r\n            domain : \"www.zardins.com\",\r\n            type : \"product_no\",\r\n            code : \"5226\",\r\n            full : \"www.zardins.com/product/detail.html?product_no=5226\"\r\n        },\r\n        info : {\r\n            sname : \"자뎅\",\r\n            pname : \"mnasdf\",\r\n            ptype : \"bottom\",\r\n            subtype : \"슬랙스\",\r\n            nick : \"갈색 기장 긴 슬랙스\"\r\n        },\r\n        size : {\r\n            name : \"L\",\r\n            waist : 44,\r\n            crotch : 29,\r\n            thigh : 33,\r\n            hem : 23,\r\n            B_length : 106\r\n        }\r\n    }\r\n];\r\n\r\nclass MyProductData {\r\n    constructor() {\r\n        if(this.instance) return this.instance;\r\n\r\n        this.cname = \"my_recently\";\r\n        this.exdays = 600;\r\n        this.myProduct = null;\r\n        this.instance = this;\r\n    }\r\n    getList() {\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                console.log(\"%c Send request : My Product List...\",\"color: red\");\r\n                setTimeout(() => {\r\n                    const listData = this.__analyzeListObject(_list);\r\n                    console.log(\"%c Get Response : \",\"color: red\", listData);\r\n                    resolve(listData);\r\n                },1500);\r\n            });\r\n        } catch(error) {return null;}\r\n    }\r\n    getListArray() {\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                (async () => {\r\n                    const __responseObj = await this.getList();\r\n                    resolve(this.__analyzeListArray(__responseObj));\r\n                })();\r\n            });\r\n        } catch(error) {return null;}\r\n    }\r\n    get() { \r\n        if(this.myProduct !== null && this.myProduct.status === 200) return this.myProduct;\r\n        else {\r\n            console.log(this.__getCookieData());\r\n            return this.__getCookieData();\r\n        }\r\n    }\r\n    getPriority() {this.priority = [\"set\",\"outer\",\"top\",\"bottom\"]}\r\n    /*\r\n        @param data : \r\n        @return : cookie 에 저장한 data\r\n    */\r\n    set(data) {\r\n        if(data === undefined) {\r\n            // param 비어있는 형태로 메소드 요청 = 현재 클래스에서 지정되어있는( 최근에 불러왔던 ) 데이터를 사용하겠다는 의미\r\n            if(this.myProduct.status === 200) {\r\n                return this.__setCookieData(data);\r\n            } else {\r\n                // Error 아무것도 선택이 안된 상태에서 저장 요청을 보냄\r\n                console.error('MyProductData Class of set(data) Method parameter is invaild data and send save request! : check \"set()\" method data ');\r\n                return null;\r\n            }\r\n        } else {\r\n            if(data.status === 200) {\r\n                return this.__setCookieData(data);\r\n            } else {\r\n                // 요청한 param data 가 유효하지 않는 데이터를 보내옴.\r\n                console.error('MyProductData Class of set(data) Method parameter is invaild data and send save request! : check \"set()\" method data ');\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Private Method\r\n    __setCookieData(data, _expires) {\r\n        console.log(\"\\t\\t Cookie !! - set Data -> \",data);\r\n        if(typeof data !== \"object\" || data.status !== 200) {\r\n            console.log(\"MyProductData Class of set(data) Method parameter is invaild data\");\r\n            return false;\r\n        }\r\n        \r\n        let expires = 0;\r\n        if(_expires === undefined) {\r\n            const d = new Date();\r\n            d.setTime(d.getTime() + (this.exdays * 24 * 60 * 60 * 1000));\r\n            expires = \"expires=\"+ d.toUTCString();\r\n        } else {\r\n            expires = _expires;\r\n        }\r\n        console.log(expires);\r\n        document.cookie = this.cname + \"=\" + JSON.stringify(data) + \";\" + expires + \";path=/\";\r\n        return true;\r\n    }\r\n    __getCookieData() {\r\n        /* try {\r\n            const value = document.cookie.match('(^|;) ?' + this.cname + '=([^;]*)(;|$)');\r\n            return value ? value[2] : null; \r\n        } catch(error) {return null}; */\r\n         try {\r\n            const name = this.cname + \"=\";\r\n            const decodedCookie = decodeURIComponent(document.cookie);\r\n            const ca = decodedCookie.split(';');\r\n            for(let c of ca) {\r\n                while (c.charAt(0) === ' ') { c = c.substring(1); }\r\n                if (c.indexOf(name) === 0) {\r\n                    const cookie = c.substring(name.length, c.length);\r\n                    return JSON.parse(cookie);\r\n                }\r\n            }\r\n        } catch(error) {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n    __removeCookieData() {\r\n        this.__setCookieData(\" \",-1)\r\n    }\r\n    __analyzeListObject(listData) {\r\n        const returnObj = {};\r\n        for(const data of listData) {\r\n            if(data.status !== 200) {}\r\n            else {\r\n                const ptype = data.info.ptype;\r\n                \r\n                if(returnObj[ptype] === undefined) returnObj[ptype] = [];\r\n                returnObj[ptype].push(data);\r\n            }\r\n        }\r\n        return returnObj;\r\n    }\r\n    __analyzeListArray(listData) {\r\n        const returnArr = [\r\n            {set : []},\r\n            {outer : []},\r\n            {top : []},\r\n            {bottom : []}\r\n        ];\r\n        let i = 0;\r\n        for(const [key, arr] of Object.entries(listData)) {\r\n            switch(key) {\r\n                case \"set\" : {\r\n                    returnArr[0][\"set\"] = arr;\r\n                    break;\r\n                }\r\n                case \"outer\" : {\r\n                    returnArr[1][\"outer\"] = arr;\r\n                    break;\r\n                }\r\n                case \"top\" : {\r\n                    returnArr[2][\"top\"] = arr;\r\n                    break;\r\n                }\r\n                case \"bottom\" : {\r\n                    returnArr[3][\"bottom\"] = arr;\r\n                    break;\r\n                }\r\n                default : {break;}\r\n            }\r\n        }\r\n        return returnArr;\r\n    }\r\n}\r\nexport default new MyProductData();\r\n\r\n\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js",["123"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":49,"column":7,"nodeType":"130","endLine":49,"endColumn":38,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":50,"column":67,"nodeType":"130","endLine":50,"endColumn":84,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":41,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},{"ruleId":"128","severity":1,"message":"138","line":34,"column":8,"nodeType":"130","endLine":34,"endColumn":14,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":40,"column":8,"nodeType":"130","endLine":40,"endColumn":14,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":48,"column":9,"nodeType":"144","messageId":"145","endLine":69,"endColumn":10},{"ruleId":"134","severity":1,"message":"146","line":396,"column":13,"nodeType":"136","messageId":"137","endLine":396,"endColumn":14},{"ruleId":"134","severity":1,"message":"147","line":17,"column":11,"nodeType":"136","messageId":"137","endLine":17,"endColumn":29},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'productSizeData'. Either exclude it or remove the dependency array.","ArrayExpression",["150"],"React Hook useMemo has a missing dependency: 'analyzeData'. Either include it or remove the dependency array.",["151"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","React Hook useCallback has an unnecessary dependency: 'praw'. Either exclude it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["153"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'i' is assigned a value but never used.","'fetchMyProductData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [myProductData]",{"range":"162","text":"163"},"Update the dependencies array to be: [analyzeData, productSizeData]",{"range":"164","text":"165"},"Update the dependencies array to be: []",{"range":"166","text":"167"},"Update the dependencies array to be: [fetchData, praw]",{"range":"168","text":"169"},[2076,2107],"[myProductData]",[2191,2208],"[analyzeData, productSizeData]",[1048,1054],"[]",[1199,1205],"[fetchData, praw]"]