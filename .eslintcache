[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\UserProduct.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Login.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\LoginRouter.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\Setting.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\SettingRouter.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFoundRouter.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\WrongRouter.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Search.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchResult.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchCurrent.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Compare.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Main.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Article.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Graph.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Menu.js":"27","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Nav_MyProduct.js":"28","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\EventRouter.js":"29","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Event\\Event_List.js":"30","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Error\\NonLogin.js":"31","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\AddProduct.js":"32","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\ViewProduct.js":"33","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\StepRouter.js":"34","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step1.js":"35","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step2.js":"36","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductType.js":"37","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\PasswordChange.js":"38","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\InformaionChange.js":"39","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step3.js":"40","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step4.js":"41","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\HelpRouter.js":"42","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Help\\Help.js":"43"},{"size":433,"mtime":1611675300050,"results":"44","hashOfConfig":"45"},{"size":4165,"mtime":1617194749118,"results":"46","hashOfConfig":"45"},{"size":557,"mtime":1611802791864,"results":"47","hashOfConfig":"45"},{"size":4097,"mtime":1617193231905,"results":"48","hashOfConfig":"45"},{"size":3238,"mtime":1617083950090,"results":"49","hashOfConfig":"45"},{"size":2780,"mtime":1617091759499,"results":"50","hashOfConfig":"45"},{"size":4201,"mtime":1617180671938,"results":"51","hashOfConfig":"45"},{"size":2215,"mtime":1614609719214,"results":"52","hashOfConfig":"45"},{"size":7955,"mtime":1616834635044,"results":"53","hashOfConfig":"45"},{"size":4236,"mtime":1615474026244,"results":"54","hashOfConfig":"45"},{"size":5251,"mtime":1614608725635,"results":"55","hashOfConfig":"45"},{"size":720,"mtime":1616828815509,"results":"56","hashOfConfig":"45"},{"size":7153,"mtime":1617194764958,"results":"57","hashOfConfig":"45"},{"size":12311,"mtime":1617195874523,"results":"58","hashOfConfig":"45"},{"size":457,"mtime":1617194638171,"results":"59","hashOfConfig":"45"},{"size":2386,"mtime":1617176728963,"results":"60","hashOfConfig":"45"},{"size":696,"mtime":1617035246456,"results":"61","hashOfConfig":"45"},{"size":567,"mtime":1615123515483,"results":"62","hashOfConfig":"45"},{"size":505,"mtime":1615123543320,"results":"63","hashOfConfig":"45"},{"size":3380,"mtime":1617029237462,"results":"64","hashOfConfig":"45"},{"size":4891,"mtime":1617180828828,"results":"65","hashOfConfig":"45"},{"size":5083,"mtime":1617180482220,"results":"66","hashOfConfig":"45"},{"size":7006,"mtime":1617179538560,"results":"67","hashOfConfig":"45"},{"size":16173,"mtime":1617193757516,"results":"68","hashOfConfig":"45"},{"size":5502,"mtime":1616498332679,"results":"69","hashOfConfig":"45"},{"size":15449,"mtime":1615483170308,"results":"70","hashOfConfig":"45"},{"size":2161,"mtime":1617194815499,"results":"71","hashOfConfig":"45"},{"size":3451,"mtime":1615483379902,"results":"72","hashOfConfig":"45"},{"size":294,"mtime":1615773447677,"results":"73","hashOfConfig":"45"},{"size":5265,"mtime":1616498229030,"results":"74","hashOfConfig":"45"},{"size":580,"mtime":1617176972433,"results":"75","hashOfConfig":"45"},{"size":9520,"mtime":1617191210620,"results":"76","hashOfConfig":"45"},{"size":20131,"mtime":1617188668772,"results":"77","hashOfConfig":"45"},{"size":1785,"mtime":1617112977204,"results":"78","hashOfConfig":"45"},{"size":12457,"mtime":1617087741474,"results":"79","hashOfConfig":"45"},{"size":3441,"mtime":1617189711647,"results":"80","hashOfConfig":"45"},{"size":3119,"mtime":1617177003061,"results":"81","hashOfConfig":"45"},{"size":7357,"mtime":1617195550590,"results":"82","hashOfConfig":"45"},{"size":9127,"mtime":1617177033535,"results":"83","hashOfConfig":"45"},{"size":7687,"mtime":1617108922110,"results":"84","hashOfConfig":"45"},{"size":10423,"mtime":1617195590798,"results":"85","hashOfConfig":"45"},{"size":301,"mtime":1617194731886,"results":"86","hashOfConfig":"45"},{"size":2409,"mtime":1617199800535,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"fdgu1h",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["183","184"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",["185"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],["186","187"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js",["188"],"import { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Css\r\nimport '../contents/css/Router/AfterProduct.css';\r\n\r\n// Context \r\nimport {LoginContext} from '../App';\r\nimport {ServerContext} from '../App';\r\n\r\n\r\nconst AfterProduct = ({history}) => {\r\n    //const server = 'http://localhost:3001';\r\n    //const server = 'http://3.36.87.114:3001';\r\n    //const server = 'http://192.168.11.2:3001';\r\n\r\n    // Context\r\n    const {userInfo} = useContext(LoginContext);\r\n    console.log(\"로그인 사용자 Context : \",userInfo);\r\n    const server = useContext(ServerContext);\r\n\r\n    // State\r\n    const [loader, setLoader] = useState(true);\r\n    const [deleteOption, setDeleteOption] = useState(false);\r\n    const [afterList, setAfterList] = useState(null);\r\n\r\n    // Ref\r\n    const reomveWrapper = useRef(null);\r\n    if(!userInfo || !userInfo._id || !userInfo.name) {\r\n        history.replace(\"/wrong\");\r\n    }\r\n    const request = {\r\n        getAfterList : async () => {\r\n            const result = await axios({\r\n                method: 'get',\r\n                url : `${server}/user/after`,\r\n                withCredentials: true,\r\n                timeout : 5000\r\n            }).catch(err => console.log(err));;\r\n            \r\n            setLoader(false);\r\n            try {\r\n                if(result.data) {\r\n                    setAfterList(result.data);\r\n                } else {\r\n                    setAfterList(null);\r\n                }\r\n            } catch(error) {\r\n                alert(\"error\");\r\n                console.log(\"error\");\r\n                setAfterList(null);\r\n            }\r\n        },\r\n        removeAfterList : async (data) => {\r\n            const result = await axios({\r\n                method: 'delete',\r\n                url : `${server}/user/after`,\r\n                withCredentials: true,\r\n                data : data,\r\n                timeout : 4000\r\n            });\r\n            console.log(\"삭제 결과 : \",result);\r\n        }\r\n\r\n    }\r\n    const event = {\r\n        removeToggle : () => {\r\n            if(!deleteOption) setDeleteOption(true);\r\n            else event.removeComfirmToggle(true);\r\n        },\r\n        removeCancel : () => {\r\n            event.removeComfirmToggle(false);\r\n            setDeleteOption(false)\r\n        },\r\n        moveCompare : (element) => {\r\n            history.push({\r\n                pathname: \"/view/compare\",\r\n                search: `?shop=${element.praw.domain}&no=${element.praw.code}`\r\n            });\r\n        },\r\n        removeData : {\r\n            _id : userInfo && userInfo._id ? userInfo._id : null,\r\n            upwd : userInfo && userInfo.sili_p ? userInfo.sili_p : null,\r\n            product : [\"asdfsaf\"]\r\n        },\r\n        count : 0,\r\n        remove : (_id, e) => {\r\n            e.stopPropagation();\r\n            let target = e.target;\r\n            let i = 0;\r\n            while(!(target.classList.contains(\"After-element\")) && i < 5) {\r\n                target = target.parentElement;\r\n                i++;\r\n            }\r\n            if(i === 4 && !target.classList.contains(\"After-element\")) return;\r\n            else {\r\n                target.classList.add(\"remove\");\r\n                setTimeout(() => target.remove(),360);\r\n            }\r\n            event.removeData.product.push(_id);\r\n            event.count++;\r\n        },\r\n        removeSend : async () => {\r\n            console.log(\"삭제할 데이터 : \", event.removeData);\r\n            await request.removeAfterList(event.removeData);\r\n            event.removeComfirmToggle(false);\r\n            setDeleteOption(false);\r\n        },\r\n        removeComfirmToggle : (force) => {\r\n            if(!reomveWrapper.current) return;\r\n            if(force === undefined) force =  !reomveWrapper.current.classList.contains(\"on\");\r\n            if(force) {\r\n                if(event.count > 0) reomveWrapper.current.classList.add(\"on\");\r\n                else setDeleteOption(false);\r\n            } else if(!force) reomveWrapper.current.classList.remove(\"on\");\r\n            \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        request.getAfterList();\r\n    }, []);\r\n    return (\r\n        <section id=\"After\">\r\n            <div className=\"remove-wrapper\" ref={reomveWrapper}>\r\n                <div className=\"msg\">\r\n                    <h1 style={{color:\"#ff0000\"}}>\"삭제\"</h1>\r\n                    <h1>하시겠습니까?</h1>\r\n                </div>\r\n                <div className=\"confirm\">\r\n                    <div style={{borderRight:\"1px solid #dbdbdb\"}} onClick={() => event.removeSend()}>\r\n                        <p>삭제</p>\r\n                    </div>\r\n                    <div onClick={() => event.removeCancel()}>\r\n                        <p>취소 </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <i className=\"material-icons back\" onClick={() => history.goBack()}>arrow_back</i>\r\n            <header>\r\n                <h1>나중에 볼 상품</h1>\r\n                <p>최대 30개 저장</p>\r\n                <p>(30개 초과시 오래된 순서로 자동삭제됩니다)</p>\r\n            </header>\r\n            <article>\r\n                <div className=\"func-btn-wrapper\">\r\n                    <button className={deleteOption ? \"on\" : \"\"} onClick={() => event.removeToggle()}>{deleteOption ? \"저장\" : \"삭제\"}</button>\r\n                </div>\r\n                    {\r\n                        loader ? (\r\n                            <div className=\"loaderFrame\">\r\n                                <div className=\"loader\"></div>\r\n                            </div>\r\n                        ) : (\r\n                            (afterList && afterList[0]) ? (\r\n                                <ul>\r\n                                    {\r\n                                      afterList.map((element, index) => (\r\n                                            <li key={index} className=\"After-element\">\r\n                                                <div className=\"After-elementInfoFrame\" onClick={() => event.moveCompare(element)}>\r\n                                                    <div className=\"After-elementInfo\">\r\n                                                        <input type=\"hidden\" name=\"pcode\"/>\r\n                                                        <p>{element.info.sname}</p>\r\n                                                        <h1>{element.info.pname}</h1>\r\n                                                    </div>\r\n                                                    <p>{element.info.subtype}</p>\r\n                                                </div>\r\n                                                <a href={`http://${element.praw.full}`}><i className=\"material-icons\">open_in_new</i></a>\r\n                                                <button onClick={(e) => event.remove(element._id,e)} className={deleteOption ? \"active\" : \"\"}>\r\n                                                    <i className=\"material-icons\">remove</i>\r\n                                                </button>\r\n                                            </li>\r\n                                        ))\r\n                                }\r\n                                </ul>\r\n                            ) : (\r\n                                <div className=\"After-none\">\r\n                                    <p>나중에 볼 상품이 없습니다.</p>\r\n                                </div>       \r\n                            )\r\n                        )\r\n                    }\r\n            </article>\r\n        </section>\r\n    )\r\n}\r\n/*\r\n    Data Format\r\n    [\r\n        {\r\n            pcode : \"PAAA0001\", -- 0\r\n            sname : \"string\", -- 1\r\n            pname : \"string\", -- 2\r\n            subtype : \"string\", -- 3\r\n            praw : {\r\n                full : \"string\", -- 0\r\n                code : \"string\" -- 1\r\n            } -- 4\r\n            \r\n        }, ...\r\n    ]\r\n*/\r\nexport default AfterProduct;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js",["189","190"],"import { useEffect } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport SizelityURL from '../contents/js/URL';\r\n\r\nconst Test = ({history}) => {\r\n    const sampleCase = [\r\n        \"https://www.byslim.com/product/%EB%8B%B9%EC%9D%BC%EB%B0%9C%EC%86%A1-%EC%BD%94%EB%94%94%EB%A7%8C%EB%8A%A5-%EA%B8%B4%ED%8C%94%ED%8B%B0mu/19486/category/1/display/6/\",\r\n        \"https://byslim.com/product/%EC%BD%94%ED%8C%85-%ED%97%A4%EB%B9%84-%ED%8A%B8%EB%9F%AC%EC%BB%A4%EC%88%8F%EC%9E%AC%ED%82%B7ot/23644/category/683/display/1/\",\r\n        \"https://byslim.com/product/%ED%8A%B8%EC%9C%8C%EC%8A%A4%ED%8A%B8%EB%A6%BF-%EC%B9%B4%EA%B3%A0-%EC%A1%B0%EA%B1%B0%EB%B0%B4%EB%94%A9%EB%B0%94%EC%A7%80/23627/category/683/display/1/\",\r\n        \"https://www.hiver.co.kr/products/28508426\", // products\r\n        \"https://www.w3schools.com/cssref/css_selectors.asp\",\r\n        \"https://www.hiver.co.kr/products/28549822\", \r\n        \"https://mr-s.co.kr/product/%EA%B3%A0%ED%85%90-%ED%8A%B8%EB%A0%8C%EC%B9%98-%EB%A1%B1%EC%BD%94%ED%8A%B8/39702/category/1/display/13/\",\r\n        \"https://mr-s.co.kr/product/11-%EB%8D%B0%EC%9D%B4-%EC%99%80%EC%9D%B4%EB%93%9C-%ED%8A%B8%EB%A0%88%EC%9D%B4%EB%8B%9D-%EC%85%8B%EC%97%85/39672/category/1/display/2/\",\r\n        \"https://www.zardins.com/product/detail.html?product_no=4518&cate_no=1&display_group=4\", // product_no\r\n        \"https://www.zardins.com/product/detail.html?product_no=5212&cate_no=1&display_group=3\",\r\n        \"http://superstari.co.kr/shop/shopdetail.html?branduid=142447&xcode=044&mcode=001&scode=&special=3&GfDT=bmp8W10%3D\", // branduid\r\n        \"http://www.okkane.co.kr/shop/shopdetail.html?branduid=132910&xcode=102&mcode=000&scode=&special=1&GfDT=bml0W10%3D\",\r\n        \"http://www.okkane.co.kr/shop/shopdetail.html?branduid=129768&xcode=101&mcode=000&scode=&special=1&GfDT=Zm93UFw%3D\",\r\n        \"https://www.meosidda.com/product/%EB%88%84%EA%B5%AC%EB%82%98-%ED%8E%B8%ED%95%98%EA%B2%8C-%EC%A6%90%EA%B2%A8%EC%9E%85%EB%8A%94-%EB%AC%B4%EC%A7%80%EB%A7%A8%ED%88%AC%EB%A7%A8/30969/category/1/display/2/\", // product\r\n        \"https://www.meosidda.com/product/%EB%8D%B0%EC%9D%BC%EB%A6%AC-%EB%A9%B4%EC%8A%A4%ED%8C%90-%EC%B9%B4%EA%B3%A0-%EC%A1%B0%EA%B1%B0%ED%8C%AC%EC%B8%A0/37335/category/1/display/2/\",\r\n        \"http://lookple.com/product/%EB%A3%A9-%EB%8D%B0%EC%9D%B4%ED%94%84-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98-%EB%9D%BC%EC%9A%B4%EB%93%9C%EB%8B%88%ED%8A%B8/4452/category/1/display/3/\",\r\n        \"http://zoozoom.co.kr/shop/shopdetail.html?branduid=164011&xcode=008&mcode=001&scode=&GfDT=Z253UA%3D%3D\",\r\n        \"https://blog.naver.com/guswjd0407/222250474168\",\r\n        \"https://fn3995.tistory.com/128\",\r\n        \"https://hub.zum.com/daily/42307\",\r\n        \"https://yongmat.tistory.com/244?category=735709\",\r\n        \"https://smartstore.naver.com/cookierun/products/5346983325\",\r\n        \"https://smartstore.naver.com/kdgbook/products/5375407225?NaPm=ct%3Dklgwsn8w%7Cci%3D551c6b90ffff31118e8408efa716e5c254c71479%7Ctr%3Dslsl%7Csn%3D531617%7Chk%3D060e0352d7339f3444dab6d0d84af39f268e016e\",\r\n        \"https://m.blog.naver.com/yoorican/221281164058\",\r\n        \"https://m.blog.naver.com/PostView.nhn?blogId=star76a&logNo=220096989645&proxyReferer=https:%2F%2Fwww.google.com%2F\",\r\n        \"https://sanglae.tistory.com/m/209\",\r\n        \"https://www.loveparis.net/product/new20000%EC%9B%90%ED%95%A0%EC%9D%B8-223%ED%99%94%EB%B6%80%ED%84%B0-%EC%A0%95%EC%83%81%EA%B0%80169000%EC%9B%90%EC%9B%A8%EC%9D%B4%EB%B8%8C-%EB%B2%84%ED%8A%BC-%EB%A0%88%EB%8D%94%EC%9E%90%EC%BC%93/16011/category/1/display/3&cafe_mkt=nms_c02?NaPm=ct%3Dklgww3h4%7Cci%3Dd5d8ff715a1d19ced2a05baddbacda62b6bf0f96%7Ctr%3Dwsp%7Csn%3D19686%7Chk%3D4e2e2db88bb98ca6a327ae7ccaca813e7da6174a\"\r\n    ];\r\n    const [{test},setCookies] = useCookies([]);\r\n    \r\n    useEffect(() => {setCookies(\"test\",{test:\"테스트\"},{path:\"/\"})},[]);\r\n    const cookieTest = () => {\r\n        setCookies(\"test\",{test:\"5678\"},{path:\"/\"});\r\n    }\r\n    const url = new SizelityURL();\r\n    for(const element of sampleCase) {\r\n        console.log(url.get(element));\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={() => history.goBack()}>뒤로가기</button>\r\n            <button onClick={() => cookieTest()}>Cookie Test</button>\r\n        </>\r\n    )\r\n}\r\nexport default Test;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\UserProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Login.js",["191"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Join.js",["192","193"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\LoginRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\Setting.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\SettingRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFoundRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\WrongRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Search.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchCurrent.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Compare.js",["194","195"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Article.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Graph.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Menu.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Nav_MyProduct.js",["196"],"import React, {useContext, useEffect, useRef} from 'react';\r\nimport Proptype from 'prop-types';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\n\r\n// CSS\r\nimport '../../contents/css/MyProductNav.css';\r\n\r\n// Context\r\nimport { MediaContext } from '../../App';\r\n\r\n/*\r\n    @param myProductData : 현재 나의 옷 정보가 담긴 Object (in Cookie \"my_recently\")\r\n    @param setMyProductData : 현재 나의 옷 정보가 담긴 Object state 를 변경하는 함수\r\n*/\r\nlet transition = null;\r\nconst NavMyProduct = ({myProductData, history}) => {\r\n    // Context\r\n    const media = useContext(MediaContext);\r\n\r\n    // ref\r\n    const nav = useRef(null);\r\n    \r\n    if(!transition) transition = new Transition(\"KOR\");\r\n\r\n    const event = {\r\n        navToggle : function(force) {\r\n            if(nav.current) {\r\n                if(force === undefined) force = !(nav.current.classList.contains(\"active\"));\r\n                nav.current.classList.toggle(\"active\", force);\r\n            }\r\n        },\r\n        moveCloset : function() {\r\n            if(nav.current.classList.contains(\"active\")) {\r\n                history.push({\r\n                    pathname : \"/closet\",\r\n                    state : {\r\n                        isCompare : true\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    } // event\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => { event.navToggle(true); }, 300)\r\n    }, [myProductData]);\r\n    return (\r\n        <div id=\"myProduct-nav-wrapper\" className=\"\" ref={nav}>\r\n            {\r\n                media === \"Phone\" ?\r\n                <div className=\"navCloser\"  onTouchStart={() => event.navToggle()}></div> : \r\n                <div className=\"navCloser\"  onClick={() => event.navToggle()}></div> \r\n            }\r\n            <nav className=\"myProductNav\" onClick={() => event.navToggle(true)}>\r\n            {\r\n                myProductData ? (\r\n                    <>\r\n                        <div className=\"size\">\r\n                            <p>{myProductData.size.name}</p>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <p>{myProductData.info.sname ? myProductData.info.sname : null}</p>\r\n                            <h1>{myProductData.info.nick ? myProductData.info.nick : myProductData.info.pname ? myProductData.info.pname : null}</h1>\r\n                            <div>\r\n                                <p>{transition.getCate(myProductData.info.ptype)}</p>\r\n                                <b>/</b>\r\n                                <p>{myProductData.info.subtype ? myProductData.info.subtype : null}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"changeBtn\">\r\n                            <i className='material-icons' onClick={() => event.moveCloset(true)}>swap_horiz</i>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    \r\n                        <button onClick={() => event.moveCloset(false)}>\r\n                            <i className=\"material-icons\">add</i>\r\n                            <p>나의 옷을 골라주세요.</p>\r\n                        </button>\r\n                )\r\n            }\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavMyProduct.proptype = {\r\n    myProductData : Proptype.object,\r\n    history : Proptype.object.isRequired\r\n}\r\n\r\nexport default React.memo(NavMyProduct);","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\EventRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Event\\Event_List.js",["197"],"import axios from 'axios';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\n\r\n// CSS\r\nimport '../../contents/css/Event/Event_List.css';\r\n\r\n// Context\r\nimport {ServerContext} from '../../App';\r\n\r\nconst EventList = ({history}) => {\r\n    //const server = 'http://localhost:3001';\r\n    //const server = 'http://3.36.87.114:3001';\r\n    const server = useContext(ServerContext);\r\n    //const server = 'http://192.168.11.2:3001';\r\n\r\n    // state\r\n    const [list, setList] = useState(undefined);\r\n    \r\n    // ref\r\n    const caution = useRef(null);\r\n\r\n    const getDay = (start, end) => Math.floor((new Date(start).getTime() - new Date(end).getTime()) / (1000 * 60 * 60 * 24)) * -1;\r\n\r\n    if(list) console.log(list);\r\n\r\n    const event = {\r\n        cautionToggle : (force) => {\r\n            if(!caution.current) return;\r\n            if(force === undefined) force = !caution.current.classList.contains(\"on\");\r\n            caution.current.classList.toggle(\"on\",force);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetch = async() => {\r\n            const response = await axios({\r\n                method: \"post\",\r\n                url : `${server}/event/get`,\r\n                data : {\r\n                    cate : \"all\"\r\n                },\r\n                timeout : 3500\r\n            }).catch(err => {\r\n                window.alert(err);\r\n                console.log(\"Evnet Get Timeout : \", err);\r\n                event.cautionToggle(true);\r\n                return {data:{status:-200}}\r\n            });\r\n            if(response.data.status) {\r\n                console.log(\"Error : \", response.data.status);\r\n                setList(null);\r\n            } else {\r\n                setList(response.data);\r\n            }\r\n        }\r\n        fetch();\r\n    }, []);\r\n    return (\r\n        <section id=\"List\">\r\n            <div className=\"caution-wrapper\" ref={caution}>\r\n                <div className=\"caution-frame\">\r\n                    <p>잠시 후 시도해주세요.</p>\r\n                </div>\r\n                <div className=\"caution-closer\" onClick={() => event.cautionToggle(false)}></div>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => history.goBack()}>\r\n                    <i className=\"material-icons\">arrow_back</i>\r\n                </button>\r\n            </div>\r\n            <header>\r\n                <div>\r\n                    <h1>이벤트</h1>\r\n                    <p></p>\r\n                </div>\r\n            </header>\r\n            <article>\r\n                {\r\n                    (list && list.slizelity && list.sizelity.length > 0) ? (\r\n                        <div className=\"list-wrapper\">\r\n                            <div className=\"title-frame\">\r\n                                <h1>진행중인 이벤트</h1>\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n                <div className=\"list-wrapper\">\r\n                    <div className=\"title-frame\">\r\n                        <h1>프로모션</h1>\r\n                    </div>\r\n                    {\r\n                        (list && list.shop && list.shop.length > 0) ? (\r\n                            <ul> {\r\n                                list.shop.map((element, index) => (\r\n                                    <li key={index}>\r\n                                        <a href={element.link}>\r\n                                            <div className=\"list-title\">\r\n                                                <h1>{element.sname}</h1>\r\n                                                <div className=\"list-d\">\r\n                                                    <h2>{getDay(element.expires.start, element.expires.end)}</h2>\r\n                                                    <p>일 남음</p>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"list-img\">\r\n\r\n                                            </div>\r\n                                            <div className=\"list-tag-frame\">\r\n                                                {element.tag.map((tagName, index) => (\r\n                                                    <p key={index}>#{tagName}</p>\r\n                                                ))}\r\n                                            </div>\r\n                                        </a>\r\n                                    </li>\r\n                                ))\r\n                            }</ul>\r\n                        ) : list === null ? (\r\n                            <div className=\"list-none\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <p>진행중인 프로모션이 없습니다.</p>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"list-none\">\r\n                                <div className=\"loader\"></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </article>\r\n            <footer>\r\n\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\nexport default EventList;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Error\\NonLogin.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\AddProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\ViewProduct.js",["198"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\StepRouter.js",["199"],"\r\n// CSS\r\nimport '../../contents/css/UserProduct/Step.css';\r\n\r\n// Component \r\nimport Step1 from './Step/Step1';\r\nimport Step2 from './Step/Step2';\r\nimport Step3 from './Step/Step3';\r\nimport Step4 from './Step/Step4';\r\n\r\nconst Step = ({data, setData, step, setStep, alertToggle, save}) => {\r\n    switch(step) {\r\n        case 1 : {\r\n            return (\r\n                <div className=\"step-wrapper step1\">\r\n                    <Step1 \r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 2 : {\r\n            return (\r\n                <div className=\"step-wrapper step2\">\r\n                    <Step2\r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 3 : {\r\n            return (\r\n                <div className=\"step-wrapper step3\">\r\n                    <Step3\r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 4 : {\r\n            return (\r\n                <div className=\"step-wrapper step3 step4\">\r\n                    <Step4\r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}\r\n                        save={save}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Step;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step1.js",["200","201"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport URLModule from '../../../contents/js/URL';\r\n\r\n// CSS\r\nimport '../../../contents/css/UserProduct/Step1.css';\r\n\r\n// Context\r\nimport {ServerContext} from '../../../App';\r\n\r\nlet urlModule = null;\r\n//const server = 'http://localhost:3001';\r\n//const server = 'http://3.36.87.114:3001';\r\n//const server = 'http://192.168.11.2:3001';\r\n\r\nconst Step1 = ({data, setData, setStep, alertToggle}) => {\r\n    // state\r\n    const [product, setProduct] = useState(null);\r\n\r\n    // Context\r\n    const server = useContext(ServerContext);\r\n\r\n    // ref\r\n    const productInputWrapper = useRef(null);\r\n    const productInput = useRef(null); // product url input frame\r\n    const sizeListFrame = useRef(null);\r\n    const applyBtn = useRef(null);\r\n    const select = useRef({\r\n        option : {\r\n            value : undefined,\r\n            frame : undefined\r\n        },\r\n        size : {\r\n            value : undefined,\r\n            frame : undefined,\r\n            index : undefined\r\n        }\r\n    });\r\n\r\n    console.log(\"검색 결과 : \",product);\r\n    \r\n    \r\n    const event = {\r\n        onSelect : (e) => {\r\n            if(e) e.stopPropagation();\r\n            else return;\r\n            if(select.current.option.frame) {\r\n                select.current.option.frame.classList.remove(\"on\");\r\n            }\r\n            select.current.option.frame = e.target;\r\n            for(let i=0; i < 3; ++i) {\r\n                if(select.current.option.frame.classList.contains(\"selectOption\")) {\r\n                    select.current.option.frame.classList.add(\"on\");\r\n                    break;\r\n                }\r\n                select.current.option.frame = select.current.option.frame.parentElement;\r\n            }\r\n            select.current.option.value = select.current.option.frame.querySelector(\"input[type=hidden]\").value;\r\n            event.applyToggle();\r\n        },\r\n        productSearch : async () => {\r\n            if(!urlModule) urlModule = new URLModule();\r\n            if(productInput.current.value < 10) return; \r\n            let inputURL = productInput.current.value;\r\n            try {\r\n                inputURL = ((inputURL.indexOf(\"http\") === 0) ? inputURL : \"http://\" + inputURL);\r\n                const isURL = ((value) => {\r\n                    return (/^(file|gopher|news|nntp|telnet|https?|ftps?|sftp):\\/\\/([a-z0-9-]+\\.)+[a-z0-9]{2,4}.*$/).test(value);\r\n                })(inputURL);\r\n                if(isURL) {\r\n                    const analyze = urlModule.get(inputURL);\r\n                    if(analyze) {\r\n                        if(product && product.praw && product.praw.code === analyze.code) return; // 중복된 데이터 검색\r\n                        const response = await axios({\r\n                            method: 'get',\r\n                            url: `${server}/product/${analyze.domain}/${analyze.code}`,\r\n                            timeout: 3500\r\n                        }).catch((err) => {\r\n                            alertToggle(true, \"네트워크 오류\");\r\n                            return {data:{status:-200}}\r\n                        });\r\n                        if(response.data._id || response.data.status) setProduct(response.data);\r\n                        else {\r\n                            alertToggle(true, \"잠시 후 다시 시도해주세요.\");\r\n                            setProduct({status:-200});\r\n                        }\r\n                    } else {\r\n                        alertToggle(true, \"검색 할 수 없는 주소입니다.\");    \r\n                    }\r\n                } else {\r\n                    alertToggle(true, \"상품의 주소값이 형식에 맞지 않습니다.\");\r\n                }\r\n            } catch(err) {\r\n                alertToggle(true, \"잠시 후 다시 시도해주세요.\");\r\n            }\r\n        },\r\n        // 검색된 상품의 사이즈 선택\r\n        onSize : function(size, index, e) {\r\n            if(e) e.stopPropagation();\r\n            else return;\r\n            if(select.current.size.value === size) {\r\n                // 같은거 두번쨰 누름 -> 사이즈 선택 취소\r\n                select.current.size.frame.classList.remove(\"on\");\r\n                select.current.size.value = undefined;\r\n            } else {\r\n                let frame = e.target;\r\n                for(let i=0; i<3; ++i) {\r\n                    if(frame.classList.contains(\"size-element\")) break;\r\n                    frame = frame.parentElement;\r\n                }\r\n                if(select.current.size.frame) select.current.size.frame.classList.remove(\"on\");\r\n                else {\r\n                    \r\n                }\r\n                frame.classList.add(\"on\");\r\n                select.current.size.frame = frame;\r\n                select.current.size.value = size;\r\n                select.current.size.index = index;\r\n            }\r\n            event.applyToggle();\r\n        },\r\n        applyToggle : () => {\r\n            if(!applyBtn.current) return;\r\n            const data = select.current;\r\n            const toggle = (() => {\r\n                if(data.option.value === \"false\") {\r\n                    return true;\r\n                } else if (data.option.value === \"true\"){\r\n                    if(data.size.value !== undefined) {\r\n                        return true;\r\n                    } else return false;\r\n                } else {\r\n                    // option.value === undefined\r\n                    return false;\r\n                }\r\n            })();\r\n            applyBtn.current.classList.toggle(\"off\", !toggle);\r\n            return toggle;\r\n        },\r\n        apply : () => {\r\n            if(event.applyToggle()) {\r\n                if(select.current.option.value === \"false\") {\r\n                    // 아니요, 모르겠어요.\r\n                    setData({info:{},size:{}});\r\n                    setStep(2);\r\n                } else if(select.current.option.value === \"true\") {\r\n                    if(select.current.size.value !== undefined) {\r\n                        if(product && product.praw) {\r\n                            const __data = JSON.parse(JSON.stringify(data));\r\n                            __data.praw = product.praw;\r\n                            __data.info = product.info;\r\n                            __data.size = product.size[select.current.size.index];\r\n                            console.log(\"저장 데이터 : \",data);\r\n                            setData(__data);\r\n                            setStep(3);\r\n                        }       \r\n                    } else {\r\n                        // 오류 -> '네, 알고있어요.' 선택 후 사이즈 선택 안하고 다음단계 이벤트 활성화\r\n                    }\r\n                } else {\r\n                    // 둘중 아무것도 선택하지 않고 다음단계 활성화\r\n                }\r\n            }\r\n        }\r\n    }\r\n    console.log(select);\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            if(data && data.praw && data.praw.full) await event.productSearch();\r\n        }\r\n        fetch();\r\n    }, []);\r\n    useEffect(() => {\r\n        if(sizeListFrame.current) {\r\n            try {\r\n                if(product.praw.full === data.praw.full) {\r\n                    const frame = sizeListFrame.current.querySelectorAll(`input[type='hidden']`);\r\n                    \r\n                    if(frame) {\r\n                        const size = data.size.name;\r\n                        for(const index in frame) {\r\n                            if(frame[index].value === size) {\r\n                                select.current.size.value = size;\r\n                                select.current.size.frame = frame[index].parentElement;\r\n                                select.current.size.index = index;\r\n\r\n                                frame[index].parentElement.classList.add(\"on\");\r\n\r\n                                select.current.option.value=\"true\";\r\n                                select.current.option.frame = productInputWrapper.current ? productInputWrapper.current : null;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    const frame = sizeListFrame.current.querySelector(`.size-element.on`);\r\n                    console.log(\"ON Frame : \", frame);\r\n                    if(frame) frame.classList.remove(\"on\");\r\n                }\r\n            } catch{}\r\n            \r\n        }\r\n    }, [product]);\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>상품 주소를 아시나요?</h1>\r\n                <p>상품의 인터넷 주소를 복사/붙여넣기</p>\r\n                <p>보다 쉽게 \"나의 상품\"을 채워보세요.</p>\r\n            </header>\r\n            <ul className=\"help-wrapper\">\r\n                <li>\r\n                    <i className=\"material-icons\">help_outline</i>\r\n                    <div>\r\n                        <p>내 옷의 치수를 직접 제어보세요.</p>\r\n                        <p>귀찮음은 잠깐, 편리함은 계속!</p>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <main>\r\n                <div className={`selectOption ${(data && data.praw) ? \"on\" : null}`} ref={productInputWrapper}>\r\n                    <input type=\"hidden\" value=\"true\" />\r\n                    <p onClick={(e) => event.onSelect(e)}>네, 알고있어요.</p>\r\n                    <div>\r\n                        <div className=\"select-column-wrapper\">\r\n                            <div className=\"row-input-frame\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    ref={productInput}\r\n                                    onKeyPress={(e) => e.key === \"Enter\" ? event.productSearch() : null}\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"http://\"\r\n                                    defaultValue={(data && data.praw && data.praw.full) ? `${data.praw.full}` : ''}\r\n                                />\r\n                                <i className=\"material-icons\" onClick={() => event.productSearch()}>search</i>\r\n                            </div>\r\n                            {\r\n                                (product && product.size) ? (\r\n                                    <>\r\n                                        <p>상품의 사이즈를 선택해주세요.</p>\r\n                                        <div className=\"shop-info-frame\">\r\n                                            <p>{product.info.sname}</p>\r\n                                            <h1>{product.info.pname}</h1>\r\n                                        </div>\r\n                                        <ul ref={sizeListFrame}>\r\n                                            {product.size.map((element,index) => (\r\n                                                <li key={index} className=\"size-element\" onClick={(e) => event.onSize(element.name, index, e)}>\r\n                                                    <p>{element.name}</p>\r\n                                                    <input type=\"hidden\" value={element.name}></input>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </>\r\n                                ) : (product && product.status === 404) ? (\r\n                                    <div className=\"no-data\">\r\n                                        <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                        <p>입력하신 상품 정보가 아직 없어요.</p>\r\n                                    </div>\r\n                                ) : null\r\n                            }   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"selectOption\">\r\n                    <input type=\"hidden\" value=\"false\" />\r\n                    <p onClick={(e) => event.onSelect(e)}>아니요, 모르겠어요.</p>\r\n                </div>\r\n                <div className=\"apply\" >\r\n                    <h1 ref={applyBtn} onClick={() => event.apply()}>다음단계</h1>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Step1;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step2.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductType.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\PasswordChange.js",["202"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\InformaionChange.js",["203"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step3.js",["204","205"],"import Proptype from 'prop-types'\r\nimport { ptype } from '../../../contents/js/ProductType';\r\nimport { useEffect, useRef } from 'react';\r\n\r\n// CSS\r\nimport '../../../contents/css/UserProduct/Step3.css';\r\n\r\nconst Step3 = ({data, setData, setStep, alertToggle}) => {\r\n\r\n    const __data = JSON.parse(JSON.stringify(data));\r\n\r\n    const applyBtn = useRef(null);\r\n    const listWrapper = useRef(null);\r\n    const subInputWrapper = useRef(null);\r\n    const subInput = useRef(null);\r\n    const subTextFrame = useRef(null);\r\n\r\n    const option = useRef({\r\n        type : undefined,\r\n        typeFrame : undefined,\r\n        subtype : undefined\r\n    });\r\n    const event = {\r\n        onType : (type, e) => {\r\n            if(listWrapper.current.classList.contains(\"close\")) {\r\n                event.listToggle(false);\r\n                event.subInputToggle(true);\r\n            } else {\r\n                if(e) e.stopPropagation();\r\n                else return;\r\n                let frame = e.target;\r\n                for(let i=0; i < 3; ++i) {\r\n                    if(frame.classList.contains(\"size-element\")) break;\r\n                    frame = frame.parentElement;\r\n                }\r\n                if(frame.classList.contains(\"size-element\")) {\r\n                    if(frame === option.current.typeFrame) {\r\n                        event.listToggle(true);\r\n                        event.subInputToggle(false);\r\n                    } else {\r\n                        if(option.current.typeFrame) {\r\n                            option.current.typeFrame.classList.remove(\"on\");\r\n                        }\r\n                        frame.classList.add(\"on\");\r\n    \r\n                        option.current.type = type;\r\n                        option.current.typeFrame = frame;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        listToggle : (force) => {\r\n            if(!listWrapper.current) return;\r\n            else {\r\n                listWrapper.current.classList.toggle(\"close\", force);\r\n                if(!force) applyBtn.current.innerHTML = \"적용\";\r\n            }\r\n        },\r\n        subInputToggle : (force) => {\r\n            if(!subInputWrapper.current) return;\r\n            else {\r\n                subInputWrapper.current.classList.toggle(\"close\",force);\r\n                if(!force) applyBtn.current.innerHTML = \"적용\";\r\n            }\r\n        },\r\n        subTextToggle : (force) => {\r\n            if(!subTextFrame.current) return;\r\n            else {\r\n                subTextFrame.current.classList.toggle(\"close\",force);\r\n            }\r\n        },\r\n        apply : () => {\r\n            if(!listWrapper.current.classList.contains(\"close\")) {\r\n                if(option.current.type) {\r\n                    event.listToggle(true);\r\n                    event.subInputToggle(false);\r\n                }\r\n                else alertToggle(true,\"종류를 선택해주세요.\");\r\n            } else {\r\n                if(!subInputWrapper.current.classList.contains(\"close\")) {\r\n                    const sub = subInput.current.value;\r\n                    if(sub.length === 0 || (sub.length > 1 && sub.length < 9 )) {\r\n                        subTextFrame.current.querySelector(\"h1\").innerHTML = sub;\r\n                        sub.length === 0 ? option.current.subtype = undefined : option.current.subtype = sub;\r\n                        event.subInputToggle(true);\r\n                        sub.length === 0 ? event.subTextToggle(true) : event.subTextToggle(false);\r\n                        applyBtn.current.innerHTML = \"다음단계\";\r\n                    } else {\r\n                        option.current.subtype = undefined;\r\n                        event.subTextToggle(true);\r\n                        alertToggle(true,\"세부 종류는 생략 또는 2~8 글자 입력이 가능합니다.\");\r\n                    }\r\n                } else {\r\n                    // 다음 단계\r\n                    console.log(\"저장하려는 데이터 : \", option.current);\r\n                    \r\n                    __data.info.ptype = option.current.type;\r\n                    __data.info.subtype = option.current.subtype;\r\n                    setData(__data);\r\n                    setStep(4);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // 기본 설정\r\n        if(__data.info.ptype) {\r\n            if(listWrapper.current) {\r\n                let frame = listWrapper.current.querySelector(`input[type='hidden'][value='${__data.info.ptype}']`);\r\n                if(frame) {\r\n                    frame = frame.parentElement;\r\n                    frame.classList.add(\"on\");\r\n                    option.current.type = __data.info.ptype;\r\n                    option.current.typeFrame = frame;\r\n                    if(__data.info.subtype) option.current.subtype = __data.info.subtype;\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>어떤 종류인가요?</h1>\r\n                <p>어떤 종류의 옷인가요?</p>\r\n                <p>종류별로 정리되어 저장됩니다.</p>\r\n            </header>\r\n            <main>\r\n                <div className=\"ptype-list-frame\">\r\n                    <ul ref={listWrapper} className={__data.info.ptype ? \"close\" : null}>\r\n                        {\r\n                            ptype.map((element, index) => {\r\n                                return (\r\n                                    <li key={index} className=\"size-element\" onClick={(e) => event.onType(element.value, e)}>\r\n                                        <h1>{element.name}</h1>\r\n                                        <div className=\"dot\"></div>\r\n                                        <input type=\"hidden\" value={element.value} />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <div className=\"out close\" ref={subTextFrame} onClick={() => {event.subInputToggle(false); event.listToggle(true);}}>\r\n                        <h1></h1>\r\n                        <div className=\"dot\"></div>\r\n                    </div>\r\n                    <div className={`in ${__data.info.ptype ? null : \"close\"}`} ref={subInputWrapper}>\r\n                        <div className=\"sub-input-wrapper\">\r\n                            <div className=\"title\">\r\n                                <h1>세부 종류 입력</h1>\r\n                                <p>추후 쉽게 구별하기 위해</p>\r\n                                <p>입력하는 것을 추천합니다</p>\r\n                            </div>\r\n                            <div className=\"sub-input-frame\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"ex) 긴바지, 반팔\"\r\n                                    defaultValue={__data.info.subtype? __data.info.subtype : null}\r\n                                    ref={subInput}/>\r\n                                <p>생략 또는 2 ~ 8글자</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"apply\" >\r\n                    <h1 ref={applyBtn} onClick={() => event.apply()}>적용</h1>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nStep3.proptype = {\r\n    data : Proptype.object.isRequired,\r\n    setData : Proptype.func.isRequired,\r\n    setStep : Proptype.func.isRequired,\r\n    alertToggle : Proptype.func.isRequired\r\n}\r\n\r\nexport default Step3;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step4.js",["206"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\HelpRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Help\\Help.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":63,"column":8,"nodeType":"214","endLine":63,"endColumn":10,"suggestions":"215"},{"ruleId":"208","replacedBy":"216"},{"ruleId":"210","replacedBy":"217"},{"ruleId":"212","severity":1,"message":"218","line":121,"column":8,"nodeType":"214","endLine":121,"endColumn":10,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":35,"column":13,"nodeType":"222","messageId":"223","endLine":35,"endColumn":17},{"ruleId":"212","severity":1,"message":"224","line":37,"column":66,"nodeType":"214","endLine":37,"endColumn":68,"suggestions":"225"},{"ruleId":"212","severity":1,"message":"226","line":27,"column":8,"nodeType":"214","endLine":27,"endColumn":10,"suggestions":"227"},{"ruleId":"212","severity":1,"message":"228","line":165,"column":30,"nodeType":"229","endLine":165,"endColumn":93},{"ruleId":"212","severity":1,"message":"230","line":166,"column":32,"nodeType":"229","endLine":166,"endColumn":100},{"ruleId":"220","severity":1,"message":"231","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":20},{"ruleId":"212","severity":1,"message":"232","line":106,"column":8,"nodeType":"214","endLine":106,"endColumn":10,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"234","line":46,"column":8,"nodeType":"214","endLine":46,"endColumn":23,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"236","line":57,"column":8,"nodeType":"214","endLine":57,"endColumn":10,"suggestions":"237"},{"ruleId":"212","severity":1,"message":"238","line":272,"column":8,"nodeType":"214","endLine":272,"endColumn":31,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":12,"column":5,"nodeType":"242","messageId":"243","endLine":58,"endColumn":6},{"ruleId":"212","severity":1,"message":"244","line":172,"column":8,"nodeType":"214","endLine":172,"endColumn":10,"suggestions":"245"},{"ruleId":"212","severity":1,"message":"246","line":203,"column":8,"nodeType":"214","endLine":203,"endColumn":17,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":128,"column":21,"nodeType":"250","endLine":128,"endColumn":51},{"ruleId":"248","severity":1,"message":"249","line":162,"column":21,"nodeType":"250","endLine":162,"endColumn":51},{"ruleId":"212","severity":1,"message":"251","line":119,"column":8,"nodeType":"214","endLine":119,"endColumn":10,"suggestions":"252"},{"ruleId":"248","severity":1,"message":"249","line":143,"column":25,"nodeType":"250","endLine":143,"endColumn":29},{"ruleId":"212","severity":1,"message":"253","line":162,"column":8,"nodeType":"214","endLine":162,"endColumn":10,"suggestions":"254"},{"ruleId":"248","severity":1,"message":"249","line":24,"column":21,"nodeType":"250","endLine":24,"endColumn":51},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["257"],["255"],["256"],"React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["258"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setCookies'. Either include it or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["260"],"Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'privacy' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useCookies' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'location.search', 'referrer', and 'server'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'event' and 'server'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'alert' and 'server'. Either include them or remove the dependency array.",["264"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'data' and 'event'. Either include them or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'data.praw.full' and 'data.size.name'. Either include them or remove the dependency array.",["266"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: '__data.info.ptype' and '__data.info.subtype'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: '__data.size'. Either include it or remove the dependency array.",["268"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [userInfo]",{"range":"293","text":"294"},"Update the dependencies array to be: [request]",{"range":"295","text":"296"},"Update the dependencies array to be: [setCookies]",{"range":"297","text":"298"},"Update the dependencies array to be: [history, userInfo]",{"range":"299","text":"300"},"Update the dependencies array to be: [data, location.search, referrer, server]",{"range":"301","text":"302"},"Update the dependencies array to be: [event, myProductData]",{"range":"303","text":"304"},"Update the dependencies array to be: [event, server]",{"range":"305","text":"306"},"Update the dependencies array to be: [alert, productData, server, userInfo]",{"range":"307","text":"308"},"Update the dependencies array to be: [data, event]",{"range":"309","text":"310"},"Update the dependencies array to be: [data.praw.full, data.size.name, product]",{"range":"311","text":"312"},"Update the dependencies array to be: [__data.info.ptype, __data.info.subtype]",{"range":"313","text":"314"},"Update the dependencies array to be: [__data.size]",{"range":"315","text":"316"},[2059,2061],"[userInfo]",[4098,4100],"[request]",[3792,3794],"[setCookies]",[713,715],"[history, userInfo]",[4056,4058],"[data, location.search, referrer, server]",[1375,1390],"[event, myProductData]",[1776,1778],"[event, server]",[10773,10796],"[alert, productData, server, userInfo]",[6826,6828],"[data, event]",[8232,8241],"[data.praw.full, data.size.name, product]",[4780,4782],"[__data.info.ptype, __data.info.subtype]",[6699,6701],"[__data.size]"]