[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js":"27","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Search.js":"28","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js":"29"},{"size":433,"mtime":1611675300050,"results":"30","hashOfConfig":"31"},{"size":1688,"mtime":1613656503201,"results":"32","hashOfConfig":"31"},{"size":583,"mtime":1611641243610,"results":"33","hashOfConfig":"31"},{"size":2370,"mtime":1612372568432,"results":"34","hashOfConfig":"31"},{"size":1159,"mtime":1612372393179,"results":"35","hashOfConfig":"31"},{"size":2674,"mtime":1611672932421,"results":"36","hashOfConfig":"31"},{"size":8782,"mtime":1612016060804,"results":"37","hashOfConfig":"31"},{"size":557,"mtime":1611802791864,"results":"38","hashOfConfig":"31"},{"size":1523,"mtime":1613630883037,"results":"39","hashOfConfig":"31"},{"size":6176,"mtime":1613636299647,"results":"40","hashOfConfig":"31"},{"size":3752,"mtime":1612448492212,"results":"41","hashOfConfig":"31"},{"size":3906,"mtime":1613634210854,"results":"42","hashOfConfig":"31"},{"size":2652,"mtime":1613630144885,"results":"43","hashOfConfig":"31"},{"size":4902,"mtime":1613634223642,"results":"44","hashOfConfig":"31"},{"size":147,"mtime":1613219802324,"results":"45","hashOfConfig":"31"},{"size":1989,"mtime":1612437207872,"results":"46","hashOfConfig":"31"},{"size":5556,"mtime":1613637299035,"results":"47","hashOfConfig":"31"},{"size":15368,"mtime":1613636252476,"results":"48","hashOfConfig":"31"},{"size":1892,"mtime":1613636218221,"results":"49","hashOfConfig":"31"},{"size":6476,"mtime":1613656751480,"results":"50","hashOfConfig":"31"},{"size":6212,"mtime":1613665874547,"results":"51","hashOfConfig":"31"},{"size":13419,"mtime":1613665873029,"results":"52","hashOfConfig":"31"},{"size":5401,"mtime":1613659355628,"results":"53","hashOfConfig":"31"},{"size":2433,"mtime":1613488883618,"results":"54","hashOfConfig":"31"},{"size":4832,"mtime":1613573077420,"results":"55","hashOfConfig":"31"},{"size":3795,"mtime":1613635136001,"results":"56","hashOfConfig":"31"},{"size":626,"mtime":1613627099517,"results":"57","hashOfConfig":"31"},{"size":5645,"mtime":1613670892060,"results":"58","hashOfConfig":"31"},{"size":2973,"mtime":1613664062904,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fdgu1h",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["126","127"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",["128"],"// Module\nimport React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n// Style\nimport './contents/css/App.css';\nimport './contents/fonts/Montserrat_use.css';\nimport './contents/fonts/NotoSans.css';\n\n// Component\nimport Home from './router/Home';\nimport View from './router/View';\nimport Compare from './router/View_Compare';\nimport NotFound from './router/NotFound';\nimport Login from './components/View/View_Login';\nimport Join from './components/View/View_Join';\nimport Search from './components/View/View_Search';\n\n\n\n\nexport const MediaContext = React.createContext(\"Phone\");\nexport const LoginContext = React.createContext(null);\nfunction App() {\n  const loginInfo1 = {\n    code : \"UA0001\",\n    name : \"string\",\n    id : \"hoonni2709@naver.com\"\n  }\n  const loginInfo2 = null;\n  const user = (() => {\n      return window.screen.width > 1024 ? \"Desktops\" : \"Phone\";\n  })();\n  return (\n    <LoginContext.Provider value={loginInfo2}>\n      <MediaContext.Provider value={user}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={\"/\"} component={Home}/>\n            <Route path={\"/home\"} component={Home}/>\n            <Route exact path={\"/view\"} component={View}/>\n            <Route path=\"/view/compare\" component={Compare} />\n            <Route exact path=\"/view/search\" component={Search} />\n            <Route exact path=\"/view/login\" component={Login} />\n            <Route exact path=\"/view/join\" component={Join} />\n            <Route path=\"/\" component={NotFound}/>\n          </Switch>\n          <div id=\"ad\"></div>\n        </BrowserRouter>\n      </MediaContext.Provider>\n    </LoginContext.Provider>\n  );\n}\n\nexport default App;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js",["129","130"],"import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport Proptype from 'prop-types';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\n\r\n\r\nconst CompareGraphList = ({activeSize, myProductData, productSizeData}) => {\r\n    console.log(\"Active : \", activeSize);\r\n    console.log(\"My Product Data\", myProductData);\r\n    console.log(\"Product Size Array\", productSizeData);\r\n\r\n    const analyzeData = useCallback((productSizeData) => {\r\n        if(productSizeData.constructor !== Array) return false;\r\n        \r\n        const analyzeResult = {\r\n            size : []\r\n        }\r\n        try {\r\n            // Formating 되야할 사이즈 목록 만들기\r\n            for(const [key] of Object.entries(productSizeData[0])) {\r\n                if(key !== \"name\") analyzeResult[key] = [];\r\n            }\r\n            \r\n            // Formating 된 Object에 실제 수치를 입력\r\n            for(const index in productSizeData) {\r\n                analyzeResult.size[index] = productSizeData[index].name;\r\n                for(const [key, value] of Object.entries(productSizeData[index])) {\r\n                    if(key !== \"name\") {\r\n\r\n                        if(analyzeResult[key] === undefined) throw new Error(`Analyze Error Can't match \"${key}\"`); // 상품별로 서로 맞지 않는 수치정보를 가지고있음.\\\r\n                        if(value < 0) throw new Error(`${key} value is not accept value.`);\r\n                        \r\n                        analyzeResult[key][index] = value; \r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 검증 : size 의 length 값이 각기 수치의 length 값과 같아야함.\r\n            const __length = analyzeResult.size.length;\r\n            for(const [key] of Object.entries(analyzeResult)) {\r\n                if(analyzeResult[key].length !== __length) throw new Error(`Analyze size data not complete data. plz change data.`);\r\n            }\r\n\r\n            console.log(\"\\t +Analyze Data : \", analyzeResult);\r\n            console.log(\"\\t +myProduct Data\", myProductData);\r\n            return analyzeResult;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    },[myProductData,productSizeData]);// __analyze()\r\n    const sizeData = useMemo( () => analyzeData(productSizeData), [productSizeData]);\r\n    const priority = [ \"shoulder\",\"chest\",\"sleeve\",\"arm\",\"T_length\",\"waist\",\"crotch\",\"hips\",\"thigh\",\"hem\",\"calve\",\"B_length\",\"length\"];\r\n    const transition = new Transition(\"KOR\");\r\n\r\n    return (\r\n        <ul className=\"compare-frame\">\r\n            {\r\n                priority.map((sn, index) => {\r\n                    if(!sizeData[sn]) return null;\r\n                    return (\r\n                        <li key={index} className=\"compare-element\">\r\n                            {\r\n                                myProductData && myProductData[sn]\r\n                                ? \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                </div> \r\n                                : \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                    <p>나의 옷에 수치정보가 존재하지 않습니다.</p>\r\n                                </div>\r\n                            }\r\n                            \r\n                            <DrawGraphResult\r\n                                activeSize={activeSize}\r\n                                myProductData={myProductData ? myProductData[sn]: null}\r\n                                productSizeData={sizeData[sn]}\r\n                                productSizeName={sizeData.size}\r\n                                />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </ul>\r\n    );\r\n}\r\n\r\nCompareGraphList.proptype = {\r\n    activeSize : Proptype.string.isRequired,\r\n    myProductData : Proptype.object,\r\n    productSizeData : Proptype.object.isRequired\r\n}\r\n\r\nconst DrawGraphResult = React.memo(({ activeSize, myProductData, productSizeData, productSizeName}) => {\r\n    const graphFrame = useRef(null);\r\n    let activeRate = null;\r\n\r\n    if(activeSize && myProductData) {\r\n        try { activeRate = productSizeData[productSizeName.indexOf(activeSize)]; } catch(e) {}\r\n    }\r\n\r\n    //let status = myProductData ? 0 : -4;\r\n    const getGraphData = (myProductData, productSizeData) => {\r\n        const __graphData = [-9];\r\n        let myProductMarking = !myProductData;\r\n        for(let i=0; i< 2*(productSizeData.length); ++i) {\r\n            if(i%2 === 1) {\r\n                // 홀수 line\r\n                __graphData.push(-9);\r\n            } else {\r\n                // 짝수 \r\n                if(myProductData && !myProductMarking) {\r\n                    // 나의 상품 위치 표시\r\n                    const compareValue = myProductData - productSizeData[i/2];\r\n                    if(compareValue > 0) {\r\n                        // pass : mark, line, point\r\n                        __graphData.push(-1, -9, -2);\r\n                    } else if(compareValue === 0) {\r\n                        // Same : mark, line, point.myProduct\r\n                        __graphData.push(-1, -9, 2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    } else {\r\n                        // before : mark.myProduct, line, point\r\n                        __graphData.push(1, -9 , -2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    }\r\n                } else {\r\n                    __graphData.push(-1,-9,-2);\r\n                }\r\n            }\r\n        }\r\n        if(!myProductMarking && myProductData) {\r\n            // last active : line, mark.myProduct ,line\r\n            __graphData.push(1, -9);\r\n        } else {\r\n            // last active : line, mark ,line\r\n            __graphData.push(-1, -9);\r\n        }\r\n        return __graphData;\r\n    }\r\n    \r\n    const graphData = useMemo(() => getGraphData(myProductData, productSizeData, activeSize), [myProductData, productSizeData, activeSize]);\r\n    if(activeSize && myProductData) {\r\n        let pointIndex = productSizeName.indexOf(activeSize)*4+3;\r\n        if(graphData[pointIndex] === -2) graphData[pointIndex] = -3;\r\n        else if(graphData[pointIndex] === 2) graphData[pointIndex] = 0;\r\n        \r\n        let myProductIndex = graphData.indexOf(1) > 0 ? graphData.indexOf(1) : graphData.indexOf(2);\r\n        let activeIndex = graphData.indexOf(-3);\r\n        if(myProductIndex !== -1 && activeIndex !== -1) {\r\n            if(myProductIndex - activeIndex > 0) {\r\n                graphData[activeIndex+1] = -4; // left\r\n                for(let i = activeIndex+1; i < myProductIndex; ++i) {if(graphData[i] === -9) graphData[i] = -5;}\r\n            } else {\r\n                graphData[activeIndex] = 3;\r\n                graphData[activeIndex-1] = 4; // right : 현재 오른쪽 방향 화살표\r\n                \r\n                for(let i = myProductIndex+1; i < activeIndex; ++i) {if(graphData[i] === -9) graphData[i] = 5;}\r\n            } \r\n        }\r\n    }\r\n    return(\r\n        <div className=\"graph-analyze\">\r\n            <div className=\"Compare-graph\" ref={graphFrame}>\r\n                {\r\n                    graphData.map((element,index) => {\r\n                        switch(element) {\r\n                            case -9 : { // use\r\n                                return <div key={index} className=\"line\"></div>\r\n\r\n                            }\r\n                            case -5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line minus\"></div>\r\n                            }\r\n                            case -4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line minus\">\r\n                                        <i className=\"material-icons left\">chevron_left</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active minus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -2 : {\r\n                                // point\r\n                                return (\r\n                                    <div key={index} className=\"point\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -1 : {\r\n                                // Marking\r\n                                return <div key={index} className=\"mark\"></div>\r\n                            }\r\n                            case 0 : {\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct active\">\r\n                                        <div>\r\n                                            <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        </div>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 1 : {\r\n                                // Marking.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"mark myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"mark-sr\">{myProductData}</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            case 2 : {\r\n                                // point.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active plus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line plus\">\r\n                                        <i className=\"material-icons right\">chevron_right</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line plus\"></div>\r\n                            }\r\n                            default : {\r\n                                return null;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <CompareResult\r\n                activeRate={activeRate}\r\n                myRate={myProductData} />\r\n        </div>\r\n    );\r\n}); //DrawGraphResult : Component\r\nDrawGraphResult.Proptype = {\r\n    activeSize : Proptype.string,\r\n    myProductData : Proptype.number,\r\n    productSizeData : Proptype.array.isRequired,\r\n    productSizeName : Proptype.array.isRequired\r\n}\r\n\r\n\r\nconst CompareResult = React.memo(({activeRate, myRate}) => {\r\n    if(activeRate && myRate) {\r\n        const value = activeRate - myRate;\r\n        const status = value > 0 ? 1 : value === 0 ? 0 : -1;\r\n        if(status === 1 || status === -1) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <p className={status === 1 ? \"rate plus\" : status === -1 ? \"rate minus\" : \"none\"}>{value}cm</p>\r\n                </div>\r\n            );\r\n        } else if(status === 0) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <div className=\"result-span\">\r\n                        <p className=\"bold\">0</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    } else if(myRate) {\r\n        return (\r\n            <div className=\"compare-result\">\r\n                <p>-</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div className=\"compare-result blank\"></div>);\r\n    }\r\n});\r\n\r\nCompareResult.proptype = {\r\n    activeRate : Proptype.number,\r\n    myRate : Proptype.number\r\n}\r\n\r\n\r\nexport default React.memo(CompareGraphList);\r\n\r\n\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],["131","132"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js",["133"],"import { useCallback, useContext, useRef, useState } from 'react';\r\n\r\n// CSS\r\nimport '../contents/css/View/View_Compare_Main.css';\r\n\r\n// Component\r\nimport Compare from '../components/View/View_Compare';\r\nimport MyProduct from '../contents/js/MyProductData';\r\nimport NavMyProduct from '../components/View/View_Nav_MyProduct';\r\nimport Menu from '../components/View/View_Menu';\r\n\r\n// Context\r\nimport { MediaContext } from '../App';\r\nimport {LoginContext} from '../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ViewCompare = (props) => {\r\n    const media = useContext(MediaContext);\r\n    const userInfo = useContext(LoginContext);\r\n\r\n    const searchResultWrapper = useRef(null);\r\n    const menuFrame = useRef(null);\r\n    const favWrapper = useRef(null);\r\n\r\n    const [myData, setMyData] = useState(MyProduct.get());\r\n    const [data, setData] = useState(props.location.state.data);\r\n    if(!data) {\r\n        // data state null = wrong access.\r\n    }\r\n\r\n    // send component function\r\n    const changeStateData = useCallback((productData) => {\r\n        if(productData.constructor === Object && productData.status === 200) {\r\n            console.log(\"View_Compare : 데이터를 설정합니다.\", productData);\r\n            toggleSearchResult(false);\r\n            setData(productData);\r\n        }\r\n    }, []);\r\n    // Result frame function\r\n    const toggleSearchResult = (toggle) => {\r\n        if(!searchResultWrapper.current) return;\r\n        if(toggle === undefined) searchResultWrapper.current.classList.toggle(\"active\");\r\n        else {\r\n            if(toggle.constructor !== Boolean) throw new Error(\"'toggleSearchResult' function parameter must Boolean dataformat.\");\r\n            searchResultWrapper.current.classList.toggle(\"active\", toggle);\r\n        }\r\n    }\r\n    \r\n    const toggleMenuFrame = (e,toggle) => {\r\n        if(e) e.stopPropagation();\r\n        if(!menuFrame) return;\r\n        if(toggle === undefined) {\r\n            menuFrame.current.classList.toggle(\"active\");\r\n        } else {\r\n            menuFrame.current.classList.toggle(\"active\", toggle);\r\n        }\r\n    }\r\n    const searchFrameClick = () => {\r\n        console.log(\"ada\");\r\n    }\r\n    const toggleFavWrapper = (force) => {\r\n        if(!favWrapper) return;\r\n        if(force === undefined) {\r\n            favWrapper.current.classList.toggle(\"active\");\r\n            setTimeout(() => {favWrapper.current.querySelector(\"article\").classList.toggle(\"active\");},50);\r\n\r\n        } else {\r\n            if(force) {\r\n                favWrapper.current.classList.add(\"active\");\r\n                setTimeout(() => {favWrapper.current.querySelector(\"article\").classList.add(\"active\");},50);\r\n            } else {\r\n                \r\n                favWrapper.current.querySelector(\"article\").classList.remove(\"active\");\r\n                favWrapper.current.classList.remove(\"active\");\r\n            }\r\n            \r\n        }\r\n    }\r\n    const fav = {\r\n        myWardrobe: function() {\r\n            const activeSize = document.querySelector(\"input[type='radio'][name='select-size']:checked\");\r\n            if(activeSize) {\r\n                // 사이즈 선택됨\r\n            } else {\r\n                // 사이즈 선택안됨\r\n            }\r\n            console.log(activeSize);\r\n        },\r\n        afterProduct: function() {\r\n\r\n        },\r\n        getAccept : function() {\r\n\r\n        },\r\n        getLoader : function() {\r\n\r\n        },\r\n        getError : function() {\r\n\r\n        },\r\n        closeWrapper : function() {\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"View\">\r\n            <nav id=\"Compare-nav\">\r\n                <div id=\"Compare-top\">\r\n                    <Link to=\"/view/search\" id=\"search-frame\" className=\"nav-element\" >\r\n                        <i className=\"material-icons\" onClick={() => {searchFrameClick()}} >search</i>\r\n                    </Link>\r\n                    <div className=\"nav-element\">\r\n                        <i className=\"material-icons\" onClick={() => toggleFavWrapper(true)}>star_border</i>\r\n                    </div>\r\n                    <div className=\"nav-element\" onClick={() => menuFrame.current.classList.add(\"active\")}>\r\n                        <i className=\"material-icons\">menu</i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Compare-result-wrapper\" ref={searchResultWrapper} onClick={() => {toggleSearchResult()}} >\r\n                    \r\n                </div>\r\n            </nav>\r\n            <section id=\"fav-select-wrapper\" ref={favWrapper}>\r\n                <article>\r\n                    {\r\n                        userInfo ? (\r\n                            <>\r\n                                <h1>\r\n                                    <b>어디</b>에 추가할까요?\r\n                                </h1>\r\n                                <div className=\"fav-select-btn\">\r\n                                    <button style={{borderRight:\"1px solid #dbdbdb\"}} onClick={() => fav.myWardrobe()}>나의 옷장</button>\r\n                                    <button>나중에 볼 상품</button>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <i className=\"material-icons\">lock</i>\r\n                                <h1>\r\n                                    <b>로그인</b>이 필요해요.\r\n                                </h1>\r\n                                <div className=\"fav-select-login\">\r\n                                    <Link to=\"/view/login\">로그인</Link>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    \r\n                </article>\r\n                {\r\n                    (media === \"Phone\") ?  \r\n                    (<div className=\"_blank\" onTouchStart={() => toggleFavWrapper(false)}></div>) :\r\n                    (<div className=\"_blank\" onClick={() => toggleFavWrapper(false)}></div>)\r\n                }\r\n            </section>\r\n            <section id=\"Menu\" onClick={(e) => {toggleMenuFrame(e,false)}} ref={menuFrame}>\r\n                <Menu />\r\n            </section>\r\n            <NavMyProduct\r\n                myProductData={myData}\r\n                setMyProductData={setMyData}/>\r\n            <Compare\r\n                productData={data} \r\n                myProduct={myData}/>    \r\n        </div>\r\n        \r\n\r\n    );\r\n}\r\nexport default ViewCompare;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js",["134"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js",["135","136"],"import React, { useContext } from \"react\";\r\nimport Proptype from 'prop-types';\r\n\r\n// CSS\r\nimport '../../contents/css/View/View_Menu.css';\r\n\r\n// Context \r\nimport {LoginContext}from '../../App';\r\n\r\n\r\nconst Menu = () => {\r\n    const userInfo = useContext(LoginContext);\r\n    return (\r\n        <>\r\n            <div className=\"Menu-wrapper\">\r\n                <div className=\"Menu-loginFrame\">\r\n                    <i className=\"material-icons\">lock</i>\r\n                    <p>로그인 정보가 없습니다.</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nMenu.Proptype = {\r\n\r\n}\r\nexport default Menu;\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Search.js",["137"],"import { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\n// CSS\r\nimport '../../contents/css/View/View_Search.css';\r\n\r\n// Component\r\nimport SearchResult from './View_SearchResult';\r\nconst Search = ({history}) => {\r\n    const [praw, setPraw] = useState(null);\r\n    const [deleteOption, setDeleteOption] = useState(false);\r\n\r\n    const searchInput = useRef(null);\r\n    const currentSearchData = sampleData;\r\n    const searchClickEvent = (e) => {\r\n        e.stopPropagation();\r\n        setPraw(searchInput.current.value);\r\n    }\r\n    const removeClick = (e, index) => {\r\n        e.stopPropagation();\r\n        //console.log(e.target);\r\n        let target = e.target;\r\n        let i = 0;\r\n        while(!(target.classList.contains(\"Search-currentElement\")) && i < 5) {\r\n            target = target.parentElement;\r\n            i++;\r\n        }\r\n        target.classList.add(\"remove\");\r\n        setTimeout(() => target.remove(),360);\r\n    }\r\n    useEffect(() => {\r\n        // Clean up 할때 최근 본 상품 목록 변경 점 있는지 확인 후 쿠키 정리, 저장 해야함\r\n    });\r\n    return (\r\n        <section id=\"Search\">\r\n            <div className=\"Search-inputWrapper\">\r\n                <i className=\"material-icons\" onClick={() => history.goBack()}>arrow_back</i>\r\n                <input ref={searchInput} type=\"text\" autoComplete=\"off\" placeholder=\"상품 주소를 입력해주세요.\"/>\r\n                <i className=\"material-icons\" onClick={(e) => searchClickEvent(e)}>search</i>\r\n            </div>\r\n            <div className=\"Search-inputResult\">\r\n                <SearchResult \r\n                    praw={praw}/>\r\n            </div>\r\n            <div className=\"Search-currentWrapper\">\r\n                <div className=\"Search-currentNav\">\r\n                    <h1>최근 본 상품</h1>\r\n                    <button onClick={() => setDeleteOption(!deleteOption)}>삭제</button>\r\n                </div>\r\n                <ul>\r\n                    {\r\n                        currentSearchData ? (\r\n                            sampleData.map((element, index) => (\r\n                                <li key={index} className=\"Search-currentElement\">\r\n                                    <div className=\"Search-currentInfoFrame\">\r\n                                        <div className=\"Search-currentName\">\r\n                                            <p>{element[1]}</p>\r\n                                            <h1>{element[2]}</h1>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p style={{textAlign:\"right\"}}>{element[4]}</p>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    <a href={`http://${element[5]}`} className=\"Search-currentBtnFrame\">\r\n                                        <i className=\"material-icons\">open_in_new</i>\r\n                                    </a>\r\n                                    <button onClick={(e)=>removeClick(e, index)}className={deleteOption ? \"active\" : \"\"}>\r\n                                        <i className=\"material-icons\">remove</i>\r\n                                    </button>\r\n                                </li>\r\n                            ))\r\n                        ) : (\r\n                            <li className=\"Search-currentNone\">\r\n                                <p>최근 본 상품이 없습니다.</p>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n/*\r\n    Array index info\r\n    {\r\n        pcode: \"PA000001\", \r\n        sname: \"string\", \r\n        pname:\"string\", \r\n        ptype: \"string\", \r\n        subtype:\"string\",\r\n        praw : \"string\"\r\n    }\r\n*/\r\nconst sampleData = [\r\n    [\"PA000020\",\"자댕\",\"Test Product Name\",\"top\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 0\r\n    [\"PA000021\",\"자댕\",\"Test Product Name\",\"bottom\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 1\r\n    [\"PA000022\",\"조군샵\",\"Test Product Name\",\"top\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 2\r\n    [\"PA000023\",\"무신사\",\"Test Product Name\",\"top\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 3\r\n    [\"PA000024\",\"mr-street\",\"Test Product Name\",\"set\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 4\r\n    [\"PA000025\",\"mr-street\",\"Test Product Name\",\"set\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 5\r\n    [\"PA000026\",\"조군샵\",\"Test Product Name\",\"bottom\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 6\r\n    [\"PA000027\",\"스나이퍼샵\",\"Test Product Name\",\"bottom\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 7\r\n    [\"PA000028\",\"로인\",\"Test Product Name\",\"bottom\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 8\r\n    [\"PA000029\",\"로인\",\"Test Product Name\",\"outer\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 9\r\n    [\"PA000030\",\"키작남\",\"Test Product Name\",\"top\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 10\r\n    [\"PA000031\",\"스나이퍼샵\",\"Test Product Name\",\"outer\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"], // 11\r\n    [\"PA000032\",\"키작남\",\"Test Product Name\",\"outer\",\"string\",\"www.example.com/product/%21%2%12%76%90%1/branduid=1325232\"]  // 12\r\n]\r\nexport default Search;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js",["138","139"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductData from '../../contents/js/ProductData';\r\n\r\nlet productData = null;\r\nconst SearchResult = ({praw}) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [onLoader, setOnLoader] = useState(false);\r\n    const __fetchSearchData = async () => {\r\n        if(!productData) productData = new ProductData();\r\n        try {\r\n            setOnLoader(true);\r\n            const __response = await productData.get(praw);\r\n            \r\n            setResponse(__response);\r\n            setOnLoader(false);\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(praw !== null) __fetchSearchData();\r\n    }, [praw]);\r\n    if(onLoader) {\r\n        return (\r\n            <div className=\"loader\"></div>\r\n        )\r\n    } else {\r\n        if(response === null) {\r\n            if(praw) {\r\n                return (\r\n                    <i className=\"material-icons\" style={{fontSize:\"3.0rem\"}}>signal_cellular_connected_no_internet_4_bar</i>\r\n                )\r\n            } else {\r\n                return (\r\n                    <h1 className=\"logo\">Sizelity.</h1>\r\n                )\r\n            }\r\n            \r\n        } else {\r\n            switch(response.status) {\r\n                case 200 : {\r\n                    \r\n                    return (\r\n                        <div className=\"Search-success\">\r\n                            <p>{response.info.sname}</p>\r\n                            <h1>{response.info.pname}</h1>\r\n                            <div>\r\n                                <p>{response.info.ptype}</p>\r\n                                <b>/</b>\r\n                                <p>{response.info.subtype}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                case 300 : {\r\n                    return (\r\n                        <div className=\"Search-none\">\r\n                            <i className=\"material-icons\">mood_bad</i>\r\n                            <p>상품정보에 오류가 생겨 불러올수 없어요.</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                case 400 : {\r\n                    return (\r\n                        <div className=\"Search-none\">\r\n                            <i className=\"material-icons\">mood_bad</i>\r\n                            <p>상품정보가 없어요.</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                default : {\r\n                    return (\r\n                        <>\r\n                            <i className=\"material-icons\">report_problem</i>\r\n                            <p>검색중에 오류가 발생했습니다.</p>\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default React.memo(SearchResult);",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":25,"column":9,"nodeType":"146","messageId":"147","endLine":25,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":49,"column":7,"nodeType":"150","endLine":49,"endColumn":38,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":50,"column":67,"nodeType":"150","endLine":50,"endColumn":84,"suggestions":"153"},{"ruleId":"140","replacedBy":"154"},{"ruleId":"142","replacedBy":"155"},{"ruleId":"144","severity":1,"message":"156","line":33,"column":11,"nodeType":"146","messageId":"147","endLine":33,"endColumn":26},{"ruleId":"144","severity":1,"message":"157","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":29},{"ruleId":"144","severity":1,"message":"158","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"159","line":12,"column":11,"nodeType":"146","messageId":"147","endLine":12,"endColumn":19},{"ruleId":"144","severity":1,"message":"160","line":1,"column":21,"nodeType":"146","messageId":"147","endLine":1,"endColumn":28},{"ruleId":"144","severity":1,"message":"161","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"162","line":23,"column":8,"nodeType":"150","endLine":23,"endColumn":14,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'loginInfo1' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'productSizeData'. Either exclude it or remove the dependency array.","ArrayExpression",["166"],"React Hook useMemo has a missing dependency: 'analyzeData'. Either include it or remove the dependency array.",["167"],["164"],["165"],"'changeStateData' is assigned a value but never used.","'fetchMyProductData' is assigned a value but never used.","'Proptype' is defined but never used.","'userInfo' is assigned a value but never used.","'useMemo' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: '__fetchSearchData'. Either include it or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [myProductData]",{"range":"175","text":"176"},"Update the dependencies array to be: [analyzeData, productSizeData]",{"range":"177","text":"178"},"Update the dependencies array to be: [__fetchSearchData, praw]",{"range":"179","text":"180"},[2076,2107],"[myProductData]",[2191,2208],"[analyzeData, productSizeData]",[777,783],"[__fetchSearchData, praw]"]