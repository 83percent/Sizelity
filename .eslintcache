[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js":"27","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js":"28"},{"size":433,"mtime":1611675300050,"results":"29","hashOfConfig":"30"},{"size":1308,"mtime":1613576595509,"results":"31","hashOfConfig":"30"},{"size":583,"mtime":1611641243610,"results":"32","hashOfConfig":"30"},{"size":2370,"mtime":1612372568432,"results":"33","hashOfConfig":"30"},{"size":1159,"mtime":1612372393179,"results":"34","hashOfConfig":"30"},{"size":2674,"mtime":1611672932421,"results":"35","hashOfConfig":"30"},{"size":8782,"mtime":1612016060804,"results":"36","hashOfConfig":"30"},{"size":557,"mtime":1611802791864,"results":"37","hashOfConfig":"30"},{"size":1763,"mtime":1613579698262,"results":"38","hashOfConfig":"30"},{"size":6184,"mtime":1613020568952,"results":"39","hashOfConfig":"30"},{"size":3752,"mtime":1612448492212,"results":"40","hashOfConfig":"30"},{"size":3740,"mtime":1612437591071,"results":"41","hashOfConfig":"30"},{"size":2652,"mtime":1612444607708,"results":"42","hashOfConfig":"30"},{"size":4353,"mtime":1612372902220,"results":"43","hashOfConfig":"30"},{"size":147,"mtime":1613219802324,"results":"44","hashOfConfig":"30"},{"size":1989,"mtime":1612437207872,"results":"45","hashOfConfig":"30"},{"size":5937,"mtime":1613560319140,"results":"46","hashOfConfig":"30"},{"size":15359,"mtime":1613495207408,"results":"47","hashOfConfig":"30"},{"size":1780,"mtime":1613027735114,"results":"48","hashOfConfig":"30"},{"size":4703,"mtime":1613579698609,"results":"49","hashOfConfig":"30"},{"size":5993,"mtime":1613318809342,"results":"50","hashOfConfig":"30"},{"size":2703,"mtime":1613460230964,"results":"51","hashOfConfig":"30"},{"size":13120,"mtime":1613562473746,"results":"52","hashOfConfig":"30"},{"size":5446,"mtime":1613572762690,"results":"53","hashOfConfig":"30"},{"size":2433,"mtime":1613488883618,"results":"54","hashOfConfig":"30"},{"size":4832,"mtime":1613573077420,"results":"55","hashOfConfig":"30"},{"size":2413,"mtime":1613565459381,"results":"56","hashOfConfig":"30"},{"size":625,"mtime":1613579130408,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"fdgu1h",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["117","118"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js",["119","120"],"import React, { useCallback, useMemo, useRef } from \"react\";\r\nimport Proptype from 'prop-types';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\n\r\n\r\nconst CompareGraphList = ({activeSize, myProductData, productSizeData}) => {\r\n    console.log(\"Active : \", activeSize);\r\n    console.log(\"My Product Data\", myProductData);\r\n    console.log(\"Product Size Array\", productSizeData);\r\n\r\n    const analyzeData = useCallback((productSizeData) => {\r\n        if(productSizeData.constructor !== Array) return false;\r\n        \r\n        const analyzeResult = {\r\n            size : []\r\n        }\r\n        try {\r\n            // Formating 되야할 사이즈 목록 만들기\r\n            for(const [key] of Object.entries(productSizeData[0])) {\r\n                if(key !== \"name\") analyzeResult[key] = [];\r\n            }\r\n            \r\n            // Formating 된 Object에 실제 수치를 입력\r\n            for(const index in productSizeData) {\r\n                analyzeResult.size[index] = productSizeData[index].name;\r\n                for(const [key, value] of Object.entries(productSizeData[index])) {\r\n                    if(key !== \"name\") {\r\n\r\n                        if(analyzeResult[key] === undefined) throw new Error(`Analyze Error Can't match \"${key}\"`); // 상품별로 서로 맞지 않는 수치정보를 가지고있음.\\\r\n                        if(value < 0) throw new Error(`${key} value is not accept value.`);\r\n                        \r\n                        analyzeResult[key][index] = value; \r\n                    }\r\n                }\r\n            }\r\n            \r\n            // 검증 : size 의 length 값이 각기 수치의 length 값과 같아야함.\r\n            const __length = analyzeResult.size.length;\r\n            for(const [key] of Object.entries(analyzeResult)) {\r\n                if(analyzeResult[key].length !== __length) throw new Error(`Analyze size data not complete data. plz change data.`);\r\n            }\r\n\r\n            console.log(\"\\t +Analyze Data : \", analyzeResult);\r\n            console.log(\"\\t +myProduct Data\", myProductData);\r\n            return analyzeResult;\r\n        } catch(e) {\r\n            return null;\r\n        }\r\n    },[myProductData,productSizeData]);// __analyze()\r\n    const sizeData = useMemo( () => analyzeData(productSizeData), [productSizeData]);\r\n    const priority = [ \"shoulder\",\"chest\",\"sleeve\",\"arm\",\"T_length\",\"waist\",\"crotch\",\"hips\",\"thigh\",\"hem\",\"calve\",\"B_length\"];\r\n    const transition = new Transition(\"KOR\");\r\n\r\n    return (\r\n        <ul className=\"compare-frame\">\r\n            {\r\n                priority.map((sn, index) => {\r\n                    if(!sizeData[sn]) return null;\r\n                    return (\r\n                        <li key={index} className=\"compare-element\">\r\n                            {\r\n                                myProductData && myProductData[sn]\r\n                                ? \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                </div> \r\n                                : \r\n                                <div className=\"compare-title-frame\">\r\n                                    <h1>{transition.get(sn)}</h1>\r\n                                    <i className=\"material-icons\">help_outline</i>\r\n                                    <p>나의 옷에 수치정보가 존재하지 않습니다.</p>\r\n                                </div>\r\n                            }\r\n                            \r\n                            <DrawGraphResult\r\n                                activeSize={activeSize}\r\n                                myProductData={myProductData ? myProductData[sn]: null}\r\n                                productSizeData={sizeData[sn]}\r\n                                productSizeName={sizeData.size}\r\n                                />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </ul>\r\n    );\r\n}\r\n\r\nCompareGraphList.proptype = {\r\n    activeSize : Proptype.string.isRequired,\r\n    myProductData : Proptype.object,\r\n    productSizeData : Proptype.object.isRequired\r\n}\r\n\r\nconst DrawGraphResult = React.memo(({ activeSize, myProductData, productSizeData, productSizeName}) => {\r\n    const graphFrame = useRef(null);\r\n    let activeRate = null;\r\n\r\n    if(activeSize && myProductData) {\r\n        try { activeRate = productSizeData[productSizeName.indexOf(activeSize)]; } catch(e) {}\r\n    }\r\n\r\n    //let status = myProductData ? 0 : -4;\r\n    const getGraphData = (myProductData, productSizeData) => {\r\n        const __graphData = [-9];\r\n        let myProductMarking = !myProductData;\r\n        for(let i=0; i< 2*(productSizeData.length); ++i) {\r\n            if(i%2 === 1) {\r\n                // 홀수 line\r\n                __graphData.push(-9);\r\n            } else {\r\n                // 짝수 \r\n                if(myProductData && !myProductMarking) {\r\n                    // 나의 상품 위치 표시\r\n                    const compareValue = myProductData - productSizeData[i/2];\r\n                    if(compareValue > 0) {\r\n                        // pass : mark, line, point\r\n                        __graphData.push(-1, -9, -2);\r\n                    } else if(compareValue === 0) {\r\n                        // Same : mark, line, point.myProduct\r\n                        __graphData.push(-1, -9, 2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    } else {\r\n                        // before : mark.myProduct, line, point\r\n                        __graphData.push(1, -9 , -2);\r\n                        myProductMarking = true; // 나의 상품 마킹 완료\r\n                    }\r\n                } else {\r\n                    __graphData.push(-1,-9,-2);\r\n                }\r\n            }\r\n        }\r\n        if(!myProductMarking && myProductData) {\r\n            // last active : line, mark.myProduct ,line\r\n            __graphData.push(1, -9);\r\n        } else {\r\n            // last active : line, mark ,line\r\n            __graphData.push(-1, -9);\r\n        }\r\n        return __graphData;\r\n    }\r\n    \r\n    const graphData = useMemo(() => getGraphData(myProductData, productSizeData, activeSize), [myProductData, productSizeData, activeSize]);\r\n    if(activeSize && myProductData) {\r\n        let pointIndex = productSizeName.indexOf(activeSize)*4+3;\r\n        if(graphData[pointIndex] === -2) graphData[pointIndex] = -3;\r\n        else if(graphData[pointIndex] === 2) graphData[pointIndex] = 0;\r\n        \r\n        let myProductIndex = graphData.indexOf(1) > 0 ? graphData.indexOf(1) : graphData.indexOf(2);\r\n        let activeIndex = graphData.indexOf(-3);\r\n        if(myProductIndex !== -1 && activeIndex !== -1) {\r\n            if(myProductIndex - activeIndex > 0) {\r\n                graphData[activeIndex+1] = -4; // left\r\n                for(let i = activeIndex+1; i < myProductIndex; ++i) {if(graphData[i] === -9) graphData[i] = -5;}\r\n            } else {\r\n                graphData[activeIndex] = 3;\r\n                graphData[activeIndex-1] = 4; // right : 현재 오른쪽 방향 화살표\r\n                \r\n                for(let i = myProductIndex+1; i < activeIndex; ++i) {if(graphData[i] === -9) graphData[i] = 5;}\r\n            } \r\n        }\r\n    }\r\n    return(\r\n        <div className=\"graph-analyze\">\r\n            <div className=\"Compare-graph\" ref={graphFrame}>\r\n                {\r\n                    graphData.map((element,index) => {\r\n                        switch(element) {\r\n                            case -9 : { // use\r\n                                return <div key={index} className=\"line\"></div>\r\n\r\n                            }\r\n                            case -5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line minus\"></div>\r\n                            }\r\n                            case -4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line minus\">\r\n                                        <i className=\"material-icons left\">chevron_left</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active minus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -2 : {\r\n                                // point\r\n                                return (\r\n                                    <div key={index} className=\"point\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case -1 : {\r\n                                // Marking\r\n                                return <div key={index} className=\"mark\"></div>\r\n                            }\r\n                            case 0 : {\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct active\">\r\n                                        <div>\r\n                                            <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        </div>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 1 : {\r\n                                // Marking.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"mark myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"mark-sr\">{myProductData}</p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            case 2 : {\r\n                                // point.myProduct\r\n                                return (\r\n                                    <div key={index} className=\"point myProduct\">\r\n                                        <i className=\"material-icons myProduct-mark\">account_circle</i>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 3 : {\r\n                                return (\r\n                                    <div key={index} className=\"point active plus\">\r\n                                        <p className=\"point-sn\">{productSizeName[((index+1)/4)-1]}</p>\r\n                                        <p className=\"point-sr\">{productSizeData[((index+1)/4)-1]}</p>\r\n                                        <input type=\"hidden\" name=\"Compare-size\" value={productSizeName[((index+1)/4)-1]}/>\r\n                                        <input type=\"hidden\" name=\"Compare-rate\" value={productSizeData[((index+1)/4)-1]}/>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 4 : { // use\r\n                                return (\r\n                                    <div key={index} className=\"line plus\">\r\n                                        <i className=\"material-icons right\">chevron_right</i>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            case 5 : { // use\r\n                                // Line\r\n                                return <div key={index} className=\"line plus\"></div>\r\n                            }\r\n                            default : {\r\n                                return null;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n            <CompareResult\r\n                activeRate={activeRate}\r\n                myRate={myProductData} />\r\n        </div>\r\n    );\r\n}); //DrawGraphResult : Component\r\nDrawGraphResult.Proptype = {\r\n    activeSize : Proptype.string,\r\n    myProductData : Proptype.number,\r\n    productSizeData : Proptype.array.isRequired,\r\n    productSizeName : Proptype.array.isRequired\r\n}\r\n\r\n\r\nconst CompareResult = React.memo(({activeRate, myRate}) => {\r\n    if(activeRate && myRate) {\r\n        const value = activeRate - myRate;\r\n        const status = value > 0 ? 1 : value === 0 ? 0 : -1;\r\n        if(status === 1 || status === -1) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <p className={status === 1 ? \"rate plus\" : status === -1 ? \"rate minus\" : \"none\"}>{value}cm</p>\r\n                </div>\r\n            );\r\n        } else if(status === 0) {\r\n            return (\r\n                <div className=\"compare-result\">\r\n                    <div className=\"result-span\">\r\n                        <p className=\"bold\">0</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    } else if(myRate) {\r\n        return (\r\n            <div className=\"compare-result\">\r\n                <p>-</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div className=\"compare-result blank\"></div>);\r\n    }\r\n});\r\n\r\nCompareResult.proptype = {\r\n    activeRate : Proptype.number,\r\n    myRate : Proptype.number\r\n}\r\n\r\n\r\nexport default React.memo(CompareGraphList);\r\n\r\n\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js",["121","122","123","124"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport Proptype from 'prop-types';\r\n\r\nimport ProductData from '../../contents/js/ProductData';\r\n\r\n/*\r\n    @params praw : 검색하려는 주소 - 서버에 요청을 보내려는 주소\r\n    @params setData : 상위 컴포넌트의 data state 의 setter\r\n*/\r\nlet productData = null;\r\nconst SearchResult = ({praw, setData}) => {\r\n    const [responseData, setResponseData] = useState(null);\r\n    const onLoader = useRef(true);\r\n\r\n\r\n    const resultClick = (e) => {\r\n        e.stopPropagation();\r\n        if(responseData.status === 200) setData(responseData);\r\n    }\r\n\r\n    const fetchData = useCallback( async (praw) => {\r\n        try {\r\n            if(!productData) productData = new ProductData(3);\r\n            const __responseData = await productData.get(praw);\r\n\r\n            // 데이터 검증과정 추가해야함.\r\n            \r\n            onLoader.current = false;\r\n            setResponseData(__responseData);\r\n        } catch(error) {\r\n            setResponseData(null);\r\n            console.log(\"error\", error)\r\n        }\r\n    }, [praw]);\r\n    useEffect(() => {\r\n        onLoader.current = true;\r\n    });\r\n    useEffect(() => { \r\n        if(praw !== null) fetchData(praw);\r\n    }, [praw]);\r\n\r\n\r\n    // 검색하려는 검색어(praw) 변화 감지 -> loader 활성화\r\n    \r\n\r\n    //if(false) {\r\n    if(responseData) {\r\n        switch(responseData.status) {\r\n            case 200 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame on\" onClick={(e) => resultClick(e)}>\r\n                        <p>{responseData.info.sname}</p>\r\n                        <h1>{responseData.info.pname}</h1>\r\n                        <div>\r\n                            <p>{responseData.info.ptype}</p>\r\n                            <p>/</p>\r\n                            <p>{responseData.info.subtype}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case 400 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame off\">\r\n                        정보없음\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        // 오류\r\n        return (\r\n            <div className=\"Compare-searchResult-frame loaderFrame\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSearchResult.proptype = {\r\n    praw : Proptype.string,\r\n    setData : Proptype.func.isRequired // 상위 컴포넌트의 data를 변경하는 state 함수\r\n}\r\n\r\n//export default SearchResult;\r\nexport default React.memo(SearchResult);","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js",["125"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js",["126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":49,"column":7,"nodeType":"134","endLine":49,"endColumn":38,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":50,"column":67,"nodeType":"134","endLine":50,"endColumn":84,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":41,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"142","line":34,"column":8,"nodeType":"134","endLine":34,"endColumn":14,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":40,"column":8,"nodeType":"134","endLine":40,"endColumn":14,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":48,"column":9,"nodeType":"148","messageId":"149","endLine":69,"endColumn":10},{"ruleId":"138","severity":1,"message":"150","line":17,"column":11,"nodeType":"140","messageId":"141","endLine":17,"endColumn":29},{"ruleId":"138","severity":1,"message":"151","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"152","line":12,"column":11,"nodeType":"140","messageId":"141","endLine":12,"endColumn":19},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'productSizeData'. Either exclude it or remove the dependency array.","ArrayExpression",["155"],"React Hook useMemo has a missing dependency: 'analyzeData'. Either include it or remove the dependency array.",["156"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","React Hook useCallback has an unnecessary dependency: 'praw'. Either exclude it or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["158"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'fetchMyProductData' is assigned a value but never used.","'Proptype' is defined but never used.","'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [myProductData]",{"range":"167","text":"168"},"Update the dependencies array to be: [analyzeData, productSizeData]",{"range":"169","text":"170"},"Update the dependencies array to be: []",{"range":"171","text":"172"},"Update the dependencies array to be: [fetchData, praw]",{"range":"173","text":"174"},[2076,2107],"[myProductData]",[2191,2208],"[analyzeData, productSizeData]",[1048,1054],"[]",[1199,1205],"[fetchData, praw]"]