[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Search.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js":"27","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js":"28","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js":"29","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchCurrent.js":"30","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\wrong.js":"31","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Wrong.js":"32","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_User_Menu.js":"33","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js":"34","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\AfterProductData.js":"35","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js":"36","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js":"37"},{"size":433,"mtime":1611675300050,"results":"38","hashOfConfig":"39"},{"size":2329,"mtime":1614589063530,"results":"40","hashOfConfig":"39"},{"size":583,"mtime":1611641243610,"results":"41","hashOfConfig":"39"},{"size":2370,"mtime":1612372568432,"results":"42","hashOfConfig":"39"},{"size":1159,"mtime":1612372393179,"results":"43","hashOfConfig":"39"},{"size":2682,"mtime":1614585139745,"results":"44","hashOfConfig":"39"},{"size":8782,"mtime":1612016060804,"results":"45","hashOfConfig":"39"},{"size":557,"mtime":1611802791864,"results":"46","hashOfConfig":"39"},{"size":3359,"mtime":1614605019287,"results":"47","hashOfConfig":"39"},{"size":3180,"mtime":1614603962442,"results":"48","hashOfConfig":"39"},{"size":627,"mtime":1613824909067,"results":"49","hashOfConfig":"39"},{"size":10202,"mtime":1614603746475,"results":"50","hashOfConfig":"39"},{"size":147,"mtime":1613219802324,"results":"51","hashOfConfig":"39"},{"size":5444,"mtime":1614590016978,"results":"52","hashOfConfig":"39"},{"size":5546,"mtime":1614003817058,"results":"53","hashOfConfig":"39"},{"size":15449,"mtime":1613984142189,"results":"54","hashOfConfig":"39"},{"size":1892,"mtime":1613636218221,"results":"55","hashOfConfig":"39"},{"size":8196,"mtime":1614611586300,"results":"56","hashOfConfig":"39"},{"size":5612,"mtime":1614607700882,"results":"57","hashOfConfig":"39"},{"size":12223,"mtime":1614009183931,"results":"58","hashOfConfig":"39"},{"size":5364,"mtime":1613812317986,"results":"59","hashOfConfig":"39"},{"size":2433,"mtime":1613488883618,"results":"60","hashOfConfig":"39"},{"size":4832,"mtime":1613573077420,"results":"61","hashOfConfig":"39"},{"size":3725,"mtime":1614008870434,"results":"62","hashOfConfig":"39"},{"size":643,"mtime":1613916140880,"results":"63","hashOfConfig":"39"},{"size":1600,"mtime":1614611484075,"results":"64","hashOfConfig":"39"},{"size":3625,"mtime":1614612989120,"results":"65","hashOfConfig":"39"},{"size":4039,"mtime":1614612378723,"results":"66","hashOfConfig":"39"},{"size":2215,"mtime":1614609719214,"results":"67","hashOfConfig":"39"},{"size":3666,"mtime":1614612988056,"results":"68","hashOfConfig":"39"},{"size":94,"mtime":1613914114709,"results":"69","hashOfConfig":"39"},{"size":94,"mtime":1613914114709,"results":"70","hashOfConfig":"39"},{"size":2472,"mtime":1613993904120,"results":"71","hashOfConfig":"39"},{"size":4779,"mtime":1614004491068,"results":"72","hashOfConfig":"39"},{"size":1161,"mtime":1614003667097,"results":"73","hashOfConfig":"39"},{"size":3885,"mtime":1614606828871,"results":"74","hashOfConfig":"39"},{"size":5251,"mtime":1614608725635,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"fdgu1h",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["156","157"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js",["158"],"import { Link } from 'react-router-dom';\r\nimport { useRef, useState } from 'react';\r\n\r\n// CSS\r\nimport '../contents/css/Home_Login.css';\r\n/*\r\n@params setOpenSlider() : 작동\r\n*/\r\n\r\nlet slider = null;\r\n\r\nconst Login = () => {\r\n    // 아이디 저장 State\r\n    const [saveToggle, setSaveToggle] = useState(false);\r\n    const saveCheckEvent = (e) => {\r\n        setSaveToggle(e.target.checked);\r\n    }\r\n\r\n    // 슬라이더 닫기 기능 버튼\r\n    const sliderClose = () => {\r\n        if(!slider) slider = document.getElementById(\"Home-Login\").parentElement;\r\n\r\n        let isOpen = slider.classList.contains(\"on\");\r\n        if(isOpen) slider.classList.replace(\"on\", \"off\");\r\n    }\r\n\r\n    // Input 활성화/비활성화 : 닫기 버튼이 여러개라 복잡해짐. -> state 써야하는데 그럼 또 꼬임\r\n    return (\r\n        <div id=\"Home-Login\">\r\n            <header>\r\n                <h1>LOGIN</h1>\r\n                <i className=\"material-icons\" onClick={() => sliderClose()}>keyboard_arrow_down</i>\r\n            </header>\r\n            <section>\r\n                <form method=\"post\" action=\"\">\r\n                    <div className=\"Home-userInput\">\r\n                        <label htmlFor=\"Home-username\">USER ID</label>\r\n                        <input type=\"text\" id=\"Home-username\" placeholder=\"example@xxx.com\" autoComplete=\"off\"/>\r\n                    </div>\r\n                    <div className=\"Home-userInput\">\r\n                        <label htmlFor=\"Home-userpass\">PASSWORD</label>\r\n                        <input type=\"password\" id=\"Home-userpass\" placeholder=\"...\" />\r\n                    </div>\r\n                    <input id=\"Home-submit\" type=\"submit\" value=\"Sign in\" />\r\n                    <div className=\"Home-inputSaveFrame\">\r\n                        <label htmlFor=\"Home-inputSave\" className={saveToggle ? \"on\" : \"off\"}>\r\n                            <div></div>\r\n                            <p>로그인 상태 유지</p>\r\n                        </label>\r\n                        <input type=\"checkbox\" id=\"Home-inputSave\" onChange={(e) => {saveCheckEvent(e)}}/>\r\n                    </div>\r\n                </form>\r\n                <div className=\"Home-option-frame\">\r\n                    <div>\r\n                        <i className=\"material-icons\">vpn_key</i>\r\n                        <Link to=\"/\">비밀번호를 잊으셨나요?</Link>\r\n                    </div>\r\n                    <div>\r\n                        <i className=\"material-icons\">add</i>\r\n                        <Link to=\"/home/join\">회원가입</Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",["159","160"],"import {Link, Route, Switch} from 'react-router-dom';\r\nimport { useContext, useEffect, useRef } from 'react';\r\n// Only Use Sample Login Init setting\r\nimport LoginModule from '../contents/js/Login';\r\n\r\n\r\n// CSS\r\nimport '../contents/css/View/View.css';\r\n\r\n//Component\r\nimport Main from '../components/View/View_Main';\r\nimport AcountHelp from '../components/View/View_AccountHelp';\r\n\r\n// Context\r\nimport {LoginContext} from '../App';\r\n\r\n\r\nconst View = () => {\r\n    const loginWrapper = useRef(null);\r\n    const {userInfo, setUserInfo} = useContext(LoginContext);\r\n\r\n    const toggleLoginWrapper = (force) => {\r\n        if(force === undefined) loginWrapper.current.classList.toggle(\"active\");\r\n        else {\r\n            if(loginWrapper.current) {\r\n                loginWrapper.current.classList.toggle(\"active\",force);\r\n                if(force) {\r\n                    setTimeout(() => {toggleLoginWrapper(false);},3000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(loginWrapper.current && !userInfo) toggleLoginWrapper(true);\r\n    });\r\n    useEffect(() => {\r\n        setThemeColor();\r\n    },[]);\r\n\r\n    return (\r\n        <div id=\"View\">\r\n            {\r\n                userInfo ? (\r\n                    <header>\r\n                        <i className=\"material-icons\" onClick={() => toggleLoginWrapper(true)}>account_circle</i>\r\n                        <div className=\"user-wrapper\"ref={loginWrapper}>\r\n                            <div className=\"user-title\">\r\n                                <p>{userInfo.name}</p>\r\n                                <Link to=\"/view/user\"><i className=\"material-icons\">settings</i></Link>\r\n                            </div>\r\n                            <div className=\"user-btn-frame\">\r\n                                <Link to=\"/closet\" style={{borderRight: \"1px solid #dbdbdb\"}}>나의 옷장</Link>\r\n                                <Link to=\"/after\">나중에 볼 상품</Link>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                ) : (\r\n                    <header>\r\n                        <i className=\"material-icons\" onClick={() => toggleLoginWrapper(true)}>lock</i>\r\n                        <div className=\"login-wrapper\" ref={loginWrapper}>\r\n                            <i className=\"material-icons\">lock</i>\r\n                            <p><b>자신의 계정</b>에 옷을 저장하고</p>\r\n                            <p>언제, 어디서든 꺼내어 비교하세요.</p>\r\n                            <Link to=\"/view/login\">로그인</Link>\r\n                        </div>\r\n                    </header>\r\n                )\r\n            }\r\n            \r\n            <Switch>\r\n                <Route exact path=\"/view\" component={Main}/>\r\n                <Route exact path=\"/view/accounthelp\" component={AcountHelp} />\r\n                <Route path=\"/view\" component={Main} />\r\n            </Switch>\r\n            <div className=\"logoWrapper\">\r\n                <Link to=\"/view\">Sizelity.</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default View;\r\n\r\n\r\n\r\nconst setThemeColor = () => {\r\n    const themeColor = \"#f0f2f5\";\r\n    if(document.querySelector(\"meta[name='theme-color']\").content !== themeColor) {\r\n        document.querySelector(\"meta[name='theme-color']\").content = themeColor;\r\n    }\r\n}","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js",["161","162","163"],"import { Link } from 'react-router-dom';\r\nimport { useContext, useEffect, useRef } from 'react';\r\n\r\n// JS\r\nimport LoginModule from '../../contents/js/Login';\r\n\r\n// CSS\r\nimport '../../contents/css/View/View_Login.css';\r\n\r\n// Context\r\nimport {LoginContext} from '../../App';\r\n\r\nconst ViewLogin = ({history, location}) => {\r\n    const email = useRef(null);\r\n    const pwd = useRef(null);\r\n\r\n    const {setUserInfo} = useContext(LoginContext);\r\n    const login = {\r\n        loginEvent : async (e) => {\r\n            const toggleWrong = (target, force) => target.current.classList.toggle(\"wrong\",force);\r\n            const isEmail = ((value) => {\r\n                return (/^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i).test(value);\r\n            })(email.current.value);\r\n            if(isEmail) toggleWrong(email,false);\r\n            else {\r\n                toggleWrong(email,true);\r\n                return false;\r\n            }\r\n            const isPwd = ((value) => {\r\n                return (/^(?=.*[a-zA-Z])((?=.*\\d)|(?=.*\\W)).{8,20}$/).test(value);\r\n            })(pwd.current.value);\r\n            if(isPwd) toggleWrong(pwd,false);\r\n            else {\r\n                toggleWrong(pwd,true);\r\n                return false;\r\n            }\r\n            const __id = email.current.value;\r\n            const __password = pwd.current.value;\r\n\r\n            const loginModule = new LoginModule();\r\n            const result = await loginModule.send(__id,__password);\r\n            console.log(result);\r\n            if(result.name) {\r\n                setUserInfo(result);\r\n                history.goBack();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"View-login\">\r\n            <div className=\"Login-backFrame\" onClick={() => history.goBack()}>\r\n                <i className=\"material-icons\">arrow_back</i>\r\n            </div>\r\n            <article>\r\n                <form id=\"loginForm\">\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"email\" ref={email} className=\"user-input\" id=\"user-input-id\" placeholder=\"이메일\" />\r\n                        <input type=\"password\" ref={pwd} className=\"user-input\" id=\"user-input-password\" placeholder=\"비밀번호\" />\r\n                    </div>\r\n                </form>\r\n                <div className=\"submit-wrapper\">\r\n                    <button id=\"submit-btn\" onClick={(e) => login.loginEvent(e)}>로그인</button>\r\n                </div>\r\n                <div className=\"login-option-wrapper\">\r\n                    <Link id=\"join-btn\" to=\"/view/join\">\r\n                        <h4>계정이 없으신가요?</h4>\r\n                        <h2>가입하기</h2>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"line\"><div></div></div>\r\n                <div className=\"login-option-wrapper\">\r\n                    <Link to=\"/view/accounthelp\">\r\n                        <h4>비밀번호를 잊으셨나요?</h4>\r\n                    </Link>\r\n                </div>\r\n            </article>\r\n            <footer>\r\n\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\nexport default ViewLogin;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js",["164","165","166","167"],"import axios from 'axios';\r\nimport { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../contents/css/View/View_Join.css';\r\n\r\n//const URL = \"http://localhost:3001/user/signup\";\r\nconst URL = \"http://172.30.1.31:3001/user/signup\";\r\n\r\n\r\nconst Join = ({history}) => {\r\n    const resultWrapper = useRef(null);\r\n\r\n    const email = useRef(null);\r\n    const pwd = useRef(null);\r\n    const rePwd = useRef(null);\r\n    const name = useRef(null);\r\n    let gender = null;\r\n    let genderSelect = 'not';\r\n    let privacy = null;\r\n    const event = {\r\n        submitEvent : () => {\r\n            if(!checkRule()) return false;\r\n            const account = {\r\n                uid : email.current.value,\r\n                upwd : pwd.current.value,\r\n                name : name.current.value,\r\n                gender : genderSelect,\r\n                privacy : true,\r\n                alert : privacy[2].checked\r\n            }\r\n            console.log(account);\r\n            \r\n            // SUBMIT\r\n            ( async () => {\r\n                resultWrapper.current.classList.add(\"on\");\r\n                const result = await axios({\r\n                    method : 'post',\r\n                    url : URL,\r\n                    data : account\r\n                });\r\n                console.log(\"%c Create account result : \",\"background: green, color: #fff\",result.data);\r\n                try {\r\n                    switch(result.data.status) {\r\n                        case 200 : {\r\n                            resultWrapper.current.querySelector('.result-frame').classList.add(\"on\");\r\n                            setTimeout(() => {\r\n                                history.replace('/view/login');\r\n                            }, 1500);\r\n                            break;\r\n                        }\r\n                        default : {\r\n                            resultWrapper.current.classList.remove(\"on\");\r\n                        }\r\n                    }\r\n                } catch {\r\n                    alert(\"오류가 발생했어요. 잠시뒤 다시 시도해주세요.\")\r\n                    resultWrapper.current.classList.remove(\"on\");\r\n                }\r\n                \r\n            })();\r\n\r\n        },\r\n        genderChange : () => {\r\n            if(gender) {\r\n                for(const element of gender) {\r\n                    if(element.checked) {\r\n                        element.parentElement.classList.add(\"on\");\r\n                        genderSelect = element.value;\r\n                    } else {\r\n                        element.parentElement.classList.remove(\"on\");\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        privacyEvent : (e) => {\r\n            const target = e.target;\r\n            if(target.checked) target.parentElement.classList.add(\"on\");\r\n            else target.parentElement.classList.remove(\"on\");\r\n        }\r\n    }\r\n    const checkRule = () => {\r\n        // Check\r\n        const toggleWrong = (target, force) => target.current.classList.toggle(\"wrong\",force);\r\n        const isEmail = ((value) => {\r\n            return (/^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i).test(value);\r\n        })(email.current.value);\r\n        if(isEmail) toggleWrong(email,false);\r\n        else {\r\n            toggleWrong(email,true);\r\n            return false;\r\n        }\r\n\r\n        const isPwd = ((value) => {\r\n            return (/^(?=.*[a-zA-Z])((?=.*\\d)|(?=.*\\W)).{8,20}$/).test(value);\r\n        })(pwd.current.value);\r\n        if(isPwd) toggleWrong(pwd,false);\r\n        else {\r\n            toggleWrong(pwd,true);\r\n            return false;\r\n        }\r\n        const isRePwd = (pwd.current.value === rePwd.current.value);\r\n        if(isRePwd) toggleWrong(rePwd,false);\r\n        else { \r\n            toggleWrong(rePwd,true);\r\n            return false;\r\n        }\r\n\r\n        const isName = ((value) => {\r\n            return (value.length > 1 && value.length < 25)\r\n        })(name.current.value);\r\n        if(isName) toggleWrong(name,false);\r\n        else {\r\n            toggleWrong(name,true);\r\n            return false;\r\n        }\r\n\r\n        if(privacy) {\r\n            if(privacy[0].checked && privacy[1].checked) {\r\n                return true;\r\n            } else {\r\n                alert(\"필수 약관에 동의해주세요.\");\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!gender) gender = document.querySelectorAll('input[type=\"radio\"][name=\"gender\"]');\r\n        if(!privacy) privacy = document.querySelectorAll('.privacy-wrapper input[type=\"checkbox\"]');\r\n    }, []);\r\n    return (\r\n        <section id=\"View-Join\">\r\n            <div className=\"result-wrapper\" ref={resultWrapper}>\r\n                <div className=\"loader-frame\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                <div className=\"result-frame\">\r\n                    <h1>환영합니다</h1>\r\n                </div>\r\n            </div>\r\n            <header>\r\n                <div className=\"Login-backFrame\" onClick={() => history.goBack()}>\r\n                    <i className=\"material-icons\">arrow_back</i>\r\n                </div>\r\n                <Link to=\"/view\" >Sizelity.</Link>\r\n                <h2>가입하기</h2>\r\n            </header>\r\n            <article className=\"bottom\">\r\n                <form>\r\n                    <div style={{flexGrow : 1}}>\r\n                        <ul>\r\n                            <li className=\"title-wrapper\">\r\n                                <h1>로그인 정보</h1>\r\n                            </li>\r\n                            <li className=\"input-wrapper\">\r\n                                <input type=\"email\" placeholder=\"이메일 (E-Mail)\" ref={email} autoComplete=\"off\" id=\"input-email\"/>\r\n                            </li>\r\n                            <li className=\"input-wrapper\">\r\n                                <input type=\"password\" placeholder=\"비밀번호 (Password)\" ref={pwd} id=\"input-password\" minLength=\"8\" maxLength=\"25\"/>\r\n                            </li>\r\n                            <li className=\"input-wrapper\">\r\n                                <input type=\"password\" placeholder=\"비밀번호 확인 (Re-Password)\" ref={rePwd} id=\"input-re-password\" minLength=\"8\" maxLength=\"25\"/>\r\n                            </li>\r\n                            <p>영문 대소문자, 숫자, 특수문자 포함 8~20자</p>\r\n                        </ul>\r\n                        <ul>\r\n                            <li className=\"title-wrapper\">\r\n                                <h1>개인정보</h1>\r\n                            </li>\r\n                            <li className=\"input-wrapper\">\r\n                                <input type=\"text\" placeholder=\"이름\" id=\"input-first\" ref={name} autoComplete=\"off\"/>\r\n                            </li>\r\n                            <li className=\"input-wrapper\">\r\n                                <label>\r\n                                    <p>남자</p>\r\n                                    <div className=\"dot\"></div>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" onClick={() => event.genderChange()}/>\r\n                                </label>\r\n                                <label>\r\n                                    <p>여자</p>\r\n                                    <div className=\"dot\"></div>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" onClick={() => event.genderChange()}/>\r\n                                </label>\r\n                                <label className=\"on\">\r\n                                    <p>비공개</p>\r\n                                    <div className=\"dot\"></div>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"not\" defaultChecked onClick={() => event.genderChange()}/>\r\n                                </label>\r\n                            </li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li className=\"title-wrapper\">\r\n                                <h1>약관</h1>\r\n                            </li>\r\n                            <li className=\"privacy-wrapper\">\r\n                                <label>\r\n                                    <p>사이즈리티 서비스 이용약관 (필수)</p>\r\n                                    <input type=\"checkbox\" onClick={(e) => event.privacyEvent(e)}/>\r\n                                </label>\r\n                                <button type=\"button\">\r\n                                    <i className=\"material-icons\">assignment</i>\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"privacy-wrapper\">\r\n                                <label>\r\n                                    <p>개인정보 수집 및 이용동의 (필수)</p>\r\n                                    <input type=\"checkbox\" onClick={(e) => event.privacyEvent(e)}/>\r\n                                </label>\r\n                                <button type=\"button\">\r\n                                    <i className=\"material-icons\">assignment</i>\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"privacy-wrapper\">\r\n                                <label>\r\n                                    <p>프로모션 안내 메일 수신동의 (선택)</p>\r\n                                    <input type=\"checkbox\" onClick={(e) => event.privacyEvent(e)}/>\r\n                                </label>\r\n                                <button type=\"button\">\r\n                                    <i className=\"material-icons\">assignment</i>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"submit-wrapper\">\r\n                        <button type=\"button\" onClick={() => event.submitEvent()}>가입하기</button>\r\n                    </div>\r\n                </form>\r\n            </article>\r\n        </section>\r\n    );\r\n}\r\nexport default Join;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",["168","169"],"import axios from 'axios';\r\nimport Cookie from './Cookie';\r\n\r\n//const URL = \"http://localhost:3001/user/signin\";\r\nconst URL = \"http://172.30.1.31:3001/user/signin\";\r\n\r\n\r\nexport default class Login {\r\n    constructor() {\r\n        this.cookie = new Cookie();\r\n        this.cookieName = \"sizelity_user\";\r\n    }\r\n    isLogin() { // Login 여부 확인\r\n        return !!(this.cookie.get(this.cookieName));\r\n    }\r\n    asyncGet() {\r\n\r\n    }\r\n    async get() {\r\n        const data = this.cookie.get(this.cookieName);\r\n        if(!data) return null;\r\n        const result = await axios({\r\n            method : 'post',\r\n            url : URL,\r\n            data : {\r\n                _id : data.id,\r\n                upwd : data.sili_p\r\n            }\r\n        });\r\n\r\n        return (result.data.name === data.name) ? data : null;\r\n        /* if(!data && this.__valid(data)) return null;\r\n        try {\r\n            const response = await this.__getServerLoginInfo(data.id, data.password);\r\n            return response;\r\n        } catch(error) {\r\n            return null;\r\n        } */\r\n    }\r\n    /*\r\n        set(data)\r\n        - Set Cookie in try and success login user data\r\n        @param userData : success user login data\r\n    */\r\n    set(data) {this.cookie.set(this.cookieName, data);}\r\n    // Test Case\r\n    __sample() {\r\n        //return this.cookie.userInit();\r\n        try {\r\n            return new Promise((resolve, reject) => {\r\n                (async () => {\r\n                    const data = await axios.get('http://localhost:3001/product/get');\r\n                    console.log(data);\r\n                    resolve(data.data);\r\n                })();\r\n            });\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    logout() {this.cookie.remove(this.cookieName);}\r\n    setInfo() {\r\n        this.info = {};\r\n    }\r\n    getInfo() {\r\n        return;\r\n    }\r\n    async send(id, password) {\r\n        if(!this.__checkID(id) || !this.__checkPW(password)) {\r\n            // 유효한 아이디, 비밀번호 아님. -> 서버로 전송 안할거임.\r\n            return null;\r\n        }\r\n        const {data} = await this.__getServerLoginInfo(id, password);\r\n        console.log(\"%c==== Try Login Result : \",\"background: #000, color: #fff\", data);\r\n\r\n        if(data.status) {\r\n            // 로그인 실패.\r\n            return data.status;\r\n        } else if(data.name) {\r\n            const __cookie = {\r\n                id : data._id,\r\n                name : data.name,\r\n                sili_p : data.upwd\r\n            }\r\n            this.set(__cookie);\r\n            return __cookie;\r\n        } else {\r\n            return {status : 404};\r\n        }\r\n        \r\n        /* try {\r\n            let userObj = JSON.parse(userJson);\r\n            console.log(\"User Object : \", userObj);\r\n            if(this.__value(userObj)) {\r\n                this.set(userObj);\r\n                return userObj;\r\n            } else {\r\n                return null;\r\n            }\r\n        } catch(e) {\r\n            return null;\r\n        } */\r\n    }\r\n    \r\n    __getServerLoginInfo(id, password) {\r\n        // 로그인 로직을 돌려서 로그인 결과를 저장하고 리턴함\r\n        // 로그인할 시 서버에서의 결과를 가져오는 과정을 표현하기 위해 setTimeout 을 통해 지연시킨뒤 리턴\r\n        return new Promise((resolve, reject) => {\r\n            const result = axios({\r\n                method : 'post',\r\n                url : URL,\r\n                data : {\r\n                    uid : id,\r\n                    upwd : password\r\n                }\r\n            });\r\n            resolve(result);\r\n        });\r\n    }\r\n    __checkID() {\r\n        // 정규표현식으로 ID의 패턴이 맞는지 확인\r\n        return true;\r\n    }\r\n    __checkPW() {\r\n        // 비밀번호 정규표현시긍로 확인\r\n        return true;\r\n    }\r\n    /*\r\n        __valid(data)\r\n        - check user login data\r\n    */\r\n    __valid(data) {\r\n        try {\r\n            const ucode = data.ucode;\r\n            if(ucode.constructor !== String || ucode.length !== 8) return false;\r\n            const _c = ucode.splite(\"\").map(s => s.charCodeAt(0));\r\n            if(!_c[0] === 85) return false;\r\n            if(!(_c[1] > 64 && _c[1] < 91)) return false;\r\n            if(!(_c[2] > 64 && _c[2] < 91)) return false;\r\n\r\n            let result = true;\r\n            for(let i=3; i < _c.length; ++i) {\r\n                if(!(_c[i] > 47 && _c[i] < 58)) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n            result = (data.id.length > 13 && data.password.length === 64 && data.name.length > 2);\r\n            if(!result) this.logout();\r\n            return result;\r\n        } catch(error) {\r\n            this.logout();\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/*\r\n----------- userJson -----------\r\n로그인 정보가 담김 mongoDB JSON 데이터\r\n{\r\n    code : string,\r\n    id : string, // U + A-Z + nummber 000000 (length 6)\r\n    password : string,\r\n    name : \"string\"\r\n    reg_date : string\r\n}\r\n*/\r\n// Sample Data\r\nconst sample = {\r\n    ucode : \"UAA00001\",\r\n    id : \"hoonni2709@naver.com\",\r\n    password : \"0SADF91820183%1&13%231FQ!@3qFEAFSFD!23AFasdf!asdf41Adsfa11111111\",\r\n    name : \"이재훈\",\r\n    reg_date : \"2021-02-04 18:42:00\"\r\n}\r\n\r\nconst sample1 = {\r\n    \"name\" : \"이재훈\",\r\n    \"uid\" : \"hoonni2709@naver.com\",\r\n    \"upwd\" : \"12341234\",\r\n}","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js",["170"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Menu.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Search.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js",["171","172"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchCurrent.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\wrong.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Wrong.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_User_Menu.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\AfterProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"181","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"182","line":20,"column":22,"nodeType":"179","messageId":"180","endLine":20,"endColumn":33},{"ruleId":"177","severity":1,"message":"183","line":2,"column":22,"nodeType":"179","messageId":"180","endLine":2,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":22,"column":42,"nodeType":"186","messageId":"187","endLine":22,"endColumn":43,"suggestions":"188"},{"ruleId":"184","severity":1,"message":"185","line":22,"column":75,"nodeType":"186","messageId":"187","endLine":22,"endColumn":76,"suggestions":"189"},{"ruleId":"184","severity":1,"message":"185","line":85,"column":38,"nodeType":"186","messageId":"187","endLine":85,"endColumn":39,"suggestions":"190"},{"ruleId":"184","severity":1,"message":"185","line":85,"column":71,"nodeType":"186","messageId":"187","endLine":85,"endColumn":72,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":127,"column":30,"nodeType":"194","endLine":127,"endColumn":93},{"ruleId":"192","severity":1,"message":"195","line":128,"column":32,"nodeType":"194","endLine":128,"endColumn":100},{"ruleId":"177","severity":1,"message":"196","line":169,"column":7,"nodeType":"179","messageId":"180","endLine":169,"endColumn":13},{"ruleId":"177","severity":1,"message":"197","line":177,"column":7,"nodeType":"179","messageId":"180","endLine":177,"endColumn":14},{"ruleId":"177","severity":1,"message":"198","line":17,"column":11,"nodeType":"179","messageId":"180","endLine":17,"endColumn":29},{"ruleId":"177","severity":1,"message":"199","line":120,"column":19,"nodeType":"179","messageId":"180","endLine":120,"endColumn":24},{"ruleId":"177","severity":1,"message":"200","line":121,"column":19,"nodeType":"179","messageId":"180","endLine":121,"endColumn":23},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'LoginModule' is defined but never used.","'setUserInfo' is assigned a value but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["203","204"],["205","206"],["207","208"],["209","210"],"react-hooks/exhaustive-deps","Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'privacy' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'sample' is assigned a value but never used.","'sample1' is assigned a value but never used.","'fetchMyProductData' is assigned a value but never used.","'sname' is assigned a value but never used.","'code' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"211","fix":"212","desc":"213"},{"messageId":"214","fix":"215","desc":"216"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"214","fix":"218","desc":"216"},{"messageId":"211","fix":"219","desc":"213"},{"messageId":"214","fix":"220","desc":"216"},{"messageId":"211","fix":"221","desc":"213"},{"messageId":"214","fix":"222","desc":"216"},"removeEscape",{"range":"223","text":"224"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"225","text":"226"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"227","text":"224"},{"range":"228","text":"226"},{"range":"229","text":"224"},{"range":"230","text":"226"},{"range":"231","text":"224"},{"range":"232","text":"226"},[683,684],"",[683,683],"\\",[716,717],[716,716],[3086,3087],[3086,3086],[3119,3120],[3119,3119]]