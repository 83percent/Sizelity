[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js":"26"},{"size":433,"mtime":1611675300050,"results":"27","hashOfConfig":"28"},{"size":767,"mtime":1612974466244,"results":"29","hashOfConfig":"28"},{"size":583,"mtime":1611641243610,"results":"30","hashOfConfig":"28"},{"size":2370,"mtime":1612372568432,"results":"31","hashOfConfig":"28"},{"size":1159,"mtime":1612372393179,"results":"32","hashOfConfig":"28"},{"size":2674,"mtime":1611672932421,"results":"33","hashOfConfig":"28"},{"size":8782,"mtime":1612016060804,"results":"34","hashOfConfig":"28"},{"size":557,"mtime":1611802791864,"results":"35","hashOfConfig":"28"},{"size":1797,"mtime":1612976842152,"results":"36","hashOfConfig":"28"},{"size":6184,"mtime":1613020568952,"results":"37","hashOfConfig":"28"},{"size":3752,"mtime":1612448492212,"results":"38","hashOfConfig":"28"},{"size":3740,"mtime":1612437591071,"results":"39","hashOfConfig":"28"},{"size":2652,"mtime":1612444607708,"results":"40","hashOfConfig":"28"},{"size":4353,"mtime":1612372902220,"results":"41","hashOfConfig":"28"},{"size":147,"mtime":1613219802324,"results":"42","hashOfConfig":"28"},{"size":1989,"mtime":1612437207872,"results":"43","hashOfConfig":"28"},{"size":5288,"mtime":1613322543884,"results":"44","hashOfConfig":"28"},{"size":15378,"mtime":1613451221613,"results":"45","hashOfConfig":"28"},{"size":1780,"mtime":1613027735114,"results":"46","hashOfConfig":"28"},{"size":4723,"mtime":1613452576501,"results":"47","hashOfConfig":"28"},{"size":5993,"mtime":1613318809342,"results":"48","hashOfConfig":"28"},{"size":2703,"mtime":1613309547363,"results":"49","hashOfConfig":"28"},{"size":7954,"mtime":1613453211087,"results":"50","hashOfConfig":"28"},{"size":2985,"mtime":1613454007726,"results":"51","hashOfConfig":"28"},{"size":881,"mtime":1613457939150,"results":"52","hashOfConfig":"28"},{"size":167,"mtime":1613457842731,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"fdgu1h",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["110","111"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFound.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Home.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Home_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",["112"],"import { NavLink ,Link, Route, Switch } from 'react-router-dom';\r\n\r\n// CSS\r\nimport '../contents/css/View/View.css';\r\n\r\n//Component\r\nimport Main from '../components/View/View_Main';\r\nimport Login from '../components/View/View_Login';\r\nimport Join from '../components/View/View_Join';\r\nimport AcountHelp from '../components/View/View_AccountHelp';\r\nimport Compare from '../components/View/View_Compare';\r\n\r\nconst acceptLogo = [\r\n    \"/view\",\r\n    \"/view/login\",\r\n    //\"/view/compare\"\r\n];\r\nconst View = (props) => {\r\n    \r\n    setThemeColor();\r\n\r\n    let logoToggle = false;\r\n    for(const path of acceptLogo) {\r\n        if(props.location.pathname === path) {\r\n            logoToggle = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"View\">\r\n            <nav id=\"View-Main-Nav\">\r\n                <Link to=\"/view\" className={logoToggle ? \"on\" : \"off\"}>Sizelity.</Link>\r\n                <div id=\"nav-menu\">\r\n                    <NavLink to=\"/view/login\" id=\"View-loginBtn\">\r\n                        <p>Login.</p>\r\n                    </NavLink>\r\n                </div>\r\n            </nav>\r\n            <Switch>\r\n                <Route exact path=\"/view\" component={Main}/>\r\n                <Route exact path=\"/view/login\" component={Login} />\r\n                <Route exact path=\"/view/join\" component={Join} />\r\n                <Route exact path=\"/view/accounthelp\" component={AcountHelp} />\r\n                <Route path=\"/view\" component={Main} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\nexport default View;\r\n\r\n\r\n\r\nconst setThemeColor = () => {\r\n    const themeColor = \"#f0f2f5\";\r\n    if(document.querySelector(\"meta[name='theme-color']\").content !== themeColor) {\r\n        document.querySelector(\"meta[name='theme-color']\").content = themeColor;\r\n    }\r\n}","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\SearchResultElement.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Join.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare.js",["113"],"import React, { useEffect, useState } from 'react';\r\nimport Proptype from 'prop-types';\r\n\r\n// CSS\r\nimport '../../contents/css/View/View_Compare.css';\r\n\r\n// Component\r\nimport CompareGraphList from \"./View_Compare_List\";\r\n\r\nconst Compare = ({productData, myProduct}) => {\r\n    // data에 온전하지 못한 정보가 담겨 올 것을 대비해 데이터 검증.js 를 만들어 \r\n    // 검증 후 지금의 Component를 화면에 출력 / 그렇지 못한 경우 데이터가 없다는 페이지로 이동\r\n    const [activeSize, setActiveSize] = useState(null);\r\n\r\n    const viewTypeEvent = (e) => {\r\n        // 그래프만 보기\r\n        console.log(\"click\");\r\n        const status = e.target.classList.contains(\"active\");\r\n        if(status) {\r\n            // 활성화 상태 : 그래프만 보임\r\n            \r\n            e.target.classList.remove(\"active\");\r\n            const frameArr = document.getElementsByClassName(\"compare-result\");\r\n            if(frameArr.length > 0) {\r\n                Array.from(frameArr).forEach(element => {\r\n                    element.classList.remove(\"none\");\r\n                });\r\n            }\r\n        } else {\r\n            // 비활성화 상태 : 결과도 같이 보임 -> 그래프만 보이게 display:none\r\n            \r\n            e.target.classList.add(\"active\");\r\n            const frameArr = document.getElementsByClassName(\"compare-result\");\r\n            if(frameArr.length > 0) {\r\n                Array.from(frameArr).forEach(element => {\r\n                    element.classList.add(\"none\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //const selectSize = (sizeName) => {changeActiveSize(sizeName);}\r\n    return (\r\n        <section className=\"View-Compare\">\r\n            <header>\r\n                <div className=\"title-wrapper\">\r\n                    <p className=\"sname\">{productData.info.sname}</p>\r\n                    <h1 className=\"pname\">{productData.info.pname}</h1>\r\n                    <div>\r\n                        <a className=\"praw\" href={`http://${productData.praw.full}`}>{productData.praw.full}</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"size-wrapper\">\r\n                    <HeaderSizeList \r\n                        sizeData={productData.info.size}\r\n                        activeSize={activeSize}\r\n                        selectSize={setActiveSize}/>\r\n                </div>\r\n            </header>\r\n            <article>\r\n                <div className=\"standard-wrapper\">\r\n                    <div className=\"standard-frame\">\r\n                        <p>나의 옷</p>\r\n                        <div className=\"standard-colorBar\"></div>\r\n                    </div>\r\n                    <button onClick={(e) => viewTypeEvent(e)}>\r\n                        <i className=\"material-icons\">assessment</i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"compare-wrapper\">\r\n                    <CompareGraphList\r\n                        activeSize={activeSize}\r\n                        myProductData={myProduct.size}\r\n                        productSizeData={productData.info.size} />\r\n                </div>\r\n            </article>\r\n        </section>\r\n    );\r\n}\r\n\r\nCompare.proptype = {\r\n    productData : Proptype.object.isRequired,\r\n    myProduct : Proptype.object\r\n}\r\n\r\nexport default React.memo(Compare);\r\n\r\n\r\n\r\n/*{\r\n    status : 200,\r\n    praw : {\r\n        http : \"www.mazia.kr/shop/shopdetail.html?branduid=27580\",\r\n        type : \"branduid\",\r\n        code : \"27580\",\r\n        full : \"www.mazia.kr/shop/shopdetail.html?branduid=27580\"\r\n    },\r\n    info : {\r\n        sname : \"Mazia look\",\r\n        pname : \"보스턴 핸드메이드 코트\",\r\n        ptype : \"아우터\",\r\n        subtype : \"코트\",\r\n        size : [\r\n            {\r\n                name: \"Free\",\r\n                waist : 58,\r\n                sleeve : 72,\r\n                arm : 34.5,\r\n                length : 117,\r\n                bot: 77 // the bottom of a top\r\n            }\r\n        ]\r\n    }\r\n}*/\r\n\r\n\r\n/*      header - Size list       */\r\nconst HeaderSizeList = ({ sizeData, selectSize }) => {\r\n    const elementChangeEvent = (e) => {\r\n        if(e === null) return;\r\n        const parent = e.target.parentElement.parentElement;\r\n        if(!parent.classList.contains(\"on\")) {\r\n            if(document.querySelector(\"li.size-element.on\") !== null) document.querySelector(\"li.size-element.on\").classList.remove(\"on\");\r\n            parent.classList.add(\"on\");\r\n            selectSize(e.target.value);\r\n        }\r\n    }\r\n    return (\r\n        <ul>\r\n            {\r\n                sizeData.map((size, index) => (\r\n                    <li className=\"size-element\" key={index}>\r\n                        <label>\r\n                            <p>{size.name}</p>\r\n                            <input type=\"radio\" name=\"select-size\" value={size.name} onChange={(e) => elementChangeEvent(e)}/>\r\n                        </label>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\nHeaderSizeList.proptype = {\r\n    sizeData : Proptype.array.isRequired,\r\n    activeSize : Proptype.string.isRequired,\r\n    selectSize : Proptype.func.isRequired // 어떤 사이즈를 선택했는지를 부모 컴포넌트에 리턴함\r\n}","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Compare_List.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View_Compare.js",["114"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_SearchResult.js",["115","116","117","118"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport Proptype from 'prop-types';\r\n\r\nimport ProductData from '../../contents/js/ProductData';\r\n\r\n/*\r\n    @params praw : 검색하려는 주소 - 서버에 요청을 보내려는 주소\r\n    @params setData : 상위 컴포넌트의 data state 의 setter\r\n*/\r\nlet productData = null;\r\nconst SearchResult = ({praw, setData}) => {\r\n    const [responseData, setResponseData] = useState(null);\r\n    const onLoader = useRef(true);\r\n\r\n\r\n    const resultClick = (e) => {\r\n        e.stopPropagation();\r\n        if(responseData.status === 200) setData(responseData);\r\n    }\r\n\r\n    const fetchData = useCallback( async (praw) => {\r\n        try {\r\n            if(!productData) productData = new ProductData(3);\r\n            const __responseData = await productData.get(praw);\r\n\r\n            // 데이터 검증과정 추가해야함.\r\n            \r\n            onLoader.current = false;\r\n            setResponseData(__responseData);\r\n        } catch(error) {\r\n            setResponseData(null);\r\n            console.log(\"error\", error)\r\n        }\r\n    }, [praw]);\r\n    useEffect(() => {\r\n        onLoader.current = true;\r\n    });\r\n    useEffect(() => { \r\n        if(praw !== null) fetchData(praw);\r\n    }, [praw]);\r\n\r\n\r\n    // 검색하려는 검색어(praw) 변화 감지 -> loader 활성화\r\n    \r\n\r\n    //if(false) {\r\n    if(responseData) {\r\n        switch(responseData.status) {\r\n            case 200 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame on\" onClick={(e) => resultClick(e)}>\r\n                        <p>{responseData.info.sname}</p>\r\n                        <h1>{responseData.info.pname}</h1>\r\n                        <div>\r\n                            <p>{responseData.info.ptype}</p>\r\n                            <p>/</p>\r\n                            <p>{responseData.info.subtype}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case 400 : {\r\n                return (\r\n                    <div className=\"Compare-searchResult-frame off\">\r\n                        정보없음\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        // 오류\r\n        return (\r\n            <div className=\"Compare-searchResult-frame loaderFrame\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSearchResult.proptype = {\r\n    praw : Proptype.string,\r\n    setData : Proptype.func.isRequired // 상위 컴포넌트의 data를 변경하는 state 함수\r\n}\r\n\r\n//export default SearchResult;\r\nexport default React.memo(SearchResult);","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\MyProductData.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_Nav_MyProduct.js",["119","120","121"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\VIew_MyProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\View\\View_MyProduct_List.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":8,"nodeType":"128","messageId":"129","endLine":11,"endColumn":15},{"ruleId":"126","severity":1,"message":"130","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":36,"column":8,"nodeType":"133","endLine":36,"endColumn":10,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"135","line":1,"column":41,"nodeType":"128","messageId":"129","endLine":1,"endColumn":48},{"ruleId":"131","severity":1,"message":"136","line":34,"column":8,"nodeType":"133","endLine":34,"endColumn":14,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"138","line":40,"column":8,"nodeType":"133","endLine":40,"endColumn":14,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":48,"column":9,"nodeType":"142","messageId":"143","endLine":69,"endColumn":10},{"ruleId":"126","severity":1,"message":"144","line":8,"column":12,"nodeType":"128","messageId":"129","endLine":8,"endColumn":21},{"ruleId":"126","severity":1,"message":"145","line":8,"column":23,"nodeType":"128","messageId":"129","endLine":8,"endColumn":35},{"ruleId":"131","severity":1,"message":"146","line":44,"column":8,"nodeType":"133","endLine":44,"endColumn":23,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Compare' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'toggleSearchFrame' and 'toggleSearchResult'. Either include them or remove the dependency array.","ArrayExpression",["150"],"'useMemo' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'praw'. Either exclude it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["152"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'navToggle' is assigned a value but never used.","'setNavToggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'toggleFrame'. Either include it or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [toggleSearchFrame, toggleSearchResult]",{"range":"162","text":"163"},"Update the dependencies array to be: []",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchData, praw]",{"range":"166","text":"167"},"Update the dependencies array to be: [myProductData, toggleFrame]",{"range":"168","text":"169"},[1299,1301],"[toggleSearchFrame, toggleSearchResult]",[1048,1054],"[]",[1199,1205],"[fetchData, praw]",[1651,1666],"[myProductData, toggleFrame]"]