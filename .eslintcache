[{"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js":"1","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js":"2","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js":"3","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js":"4","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js":"5","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js":"6","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js":"7","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js":"8","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js":"9","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js":"10","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js":"11","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\UserProduct.js":"12","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Login.js":"13","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Join.js":"14","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\AccountHelp.js":"15","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\LoginRouter.js":"16","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\Setting.js":"17","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\SettingRouter.js":"18","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFoundRouter.js":"19","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\WrongRouter.js":"20","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Search.js":"21","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchResult.js":"22","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchCurrent.js":"23","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Compare.js":"24","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Main.js":"25","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Article.js":"26","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Graph.js":"27","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Menu.js":"28","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Nav_MyProduct.js":"29","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\EventRouter.js":"30","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Event\\Event_List.js":"31","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Error\\NonLogin.js":"32","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\AddProduct.js":"33","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\ViewProduct.js":"34","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\StepRouter.js":"35","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step1.js":"36","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step2.js":"37","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step3.js":"38","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductType.js":"39","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\PasswordChange.js":"40","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\InformaionChange.js":"41"},{"size":433,"mtime":1611675300050,"results":"42","hashOfConfig":"43"},{"size":4033,"mtime":1617035072979,"results":"44","hashOfConfig":"43"},{"size":557,"mtime":1611802791864,"results":"45","hashOfConfig":"43"},{"size":3316,"mtime":1616471462506,"results":"46","hashOfConfig":"43"},{"size":3238,"mtime":1617083950090,"results":"47","hashOfConfig":"43"},{"size":2490,"mtime":1616077872216,"results":"48","hashOfConfig":"43"},{"size":4201,"mtime":1617024832670,"results":"49","hashOfConfig":"43"},{"size":2215,"mtime":1614609719214,"results":"50","hashOfConfig":"43"},{"size":7955,"mtime":1616834635044,"results":"51","hashOfConfig":"43"},{"size":4236,"mtime":1615474026244,"results":"52","hashOfConfig":"43"},{"size":5251,"mtime":1614608725635,"results":"53","hashOfConfig":"43"},{"size":720,"mtime":1616828815509,"results":"54","hashOfConfig":"43"},{"size":7166,"mtime":1617079725091,"results":"55","hashOfConfig":"43"},{"size":12305,"mtime":1617084522760,"results":"56","hashOfConfig":"43"},{"size":136,"mtime":1617038150615,"results":"57","hashOfConfig":"43"},{"size":595,"mtime":1615118017032,"results":"58","hashOfConfig":"43"},{"size":2403,"mtime":1617082497079,"results":"59","hashOfConfig":"43"},{"size":696,"mtime":1617035246456,"results":"60","hashOfConfig":"43"},{"size":567,"mtime":1615123515483,"results":"61","hashOfConfig":"43"},{"size":505,"mtime":1615123543320,"results":"62","hashOfConfig":"43"},{"size":3380,"mtime":1617029237462,"results":"63","hashOfConfig":"43"},{"size":5767,"mtime":1617026760276,"results":"64","hashOfConfig":"43"},{"size":6084,"mtime":1617029433411,"results":"65","hashOfConfig":"43"},{"size":6755,"mtime":1617082868151,"results":"66","hashOfConfig":"43"},{"size":15886,"mtime":1616835651586,"results":"67","hashOfConfig":"43"},{"size":5502,"mtime":1616498332679,"results":"68","hashOfConfig":"43"},{"size":15449,"mtime":1615483170308,"results":"69","hashOfConfig":"43"},{"size":2146,"mtime":1615787811884,"results":"70","hashOfConfig":"43"},{"size":3451,"mtime":1615483379902,"results":"71","hashOfConfig":"43"},{"size":294,"mtime":1615773447677,"results":"72","hashOfConfig":"43"},{"size":5265,"mtime":1616498229030,"results":"73","hashOfConfig":"43"},{"size":621,"mtime":1616828747401,"results":"74","hashOfConfig":"43"},{"size":7355,"mtime":1615993230979,"results":"75","hashOfConfig":"43"},{"size":20298,"mtime":1616835897515,"results":"76","hashOfConfig":"43"},{"size":4923,"mtime":1616434194336,"results":"77","hashOfConfig":"43"},{"size":12469,"mtime":1616497955047,"results":"78","hashOfConfig":"43"},{"size":6708,"mtime":1616078139391,"results":"79","hashOfConfig":"43"},{"size":686,"mtime":1615993478413,"results":"80","hashOfConfig":"43"},{"size":961,"mtime":1616003598835,"results":"81","hashOfConfig":"43"},{"size":7402,"mtime":1617085293470,"results":"82","hashOfConfig":"43"},{"size":9139,"mtime":1617087413751,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"fdgu1h",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\index.js",[],["178","179"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\App.js",["180"],"// Module\r\nimport {createContext, useEffect, useState } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport LoginModule from './contents/js/Login';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\n// Font\r\nimport './contents/fonts/Montserrat_use.css';\r\nimport './contents/fonts/NotoSans.css';\r\n\r\n// Component\r\nimport View from './router/View';\r\n\r\nimport Compare from './router/Compare';\r\nimport AfterProduct from './router/AfterProduct';\r\nimport UserProduct from './router/UserProduct';\r\nimport Wrong from './router/WrongRouter';\r\nimport Search from './router/Search';\r\nimport LoginRouter from './router/LoginRouter';\r\nimport SettingRouter from './router/SettingRouter';\r\nimport NotFound from './router/NotFoundRouter';\r\nimport EventRouter from './router/EventRouter';\r\n\r\nimport NonLogin from './router/Error/NonLogin';\r\n\r\n\r\nimport Test from './router/Test';\r\n\r\n// CSS \r\nimport './contents/css/Alert.css';\r\nimport './contents/css/Error.css';\r\n\r\n// Context\r\nexport const MediaContext = createContext(\"Phone\");\r\nexport const LoginContext = createContext(null);\r\nexport const ServerContext = createContext(null);\r\n\r\nconst __server = 'http://localhost:3001';\r\n//const server = 'http://3.36.87.114:3001';\r\n//const server = 'http://192.168.11.2:3001';\r\n//const __server = 'https://13.124.51.75:3001';\r\nlet loginModule = null;\r\nconst App = () => {\r\n    const [media, setMedia] = useState(\"Phone\");\r\n    const [userInfo, setUserInfo] = useState(() => {\r\n        const auth = sessionStorage.getItem(\"auth\");\r\n        if(!auth) return null;\r\n        else {\r\n            return JSON.parse(auth);\r\n        }\r\n    });\r\n    //const __userInfo = useMemo(() => {}, [sizelity_user._id]);\r\n    // autoLogin\r\n    useEffect(() => {\r\n        if(userInfo === null) {\r\n            ( async () => {\r\n                if(!loginModule) loginModule = new LoginModule();\r\n                const auth = await loginModule.autoAuth();\r\n                setUserInfo(auth);\r\n            })();\r\n        }\r\n    }, []);\r\n    /* useEffect(() => {\r\n        if(userInfo !== null) setCookie(\"sizelity_user\",userInfo,{path:\"/\",maxAge:(500 * 24 * 60 * 60)})\r\n    }, [userInfo]); */\r\n\r\n    useEffect(() => {\r\n        setMedia(window.screen.width > 1024 ? \"Desktops\" : \"Phone\");\r\n    }, []);\r\n    \r\n    return (\r\n        <CookiesProvider>\r\n            <ServerContext.Provider value={__server}>\r\n                <LoginContext.Provider value={{userInfo, setUserInfo}}>\r\n                    <MediaContext.Provider value={media}>\r\n                        <BrowserRouter>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={View} />\r\n                                <Route path=\"/compare\" component={Compare} />\r\n                                <Route exact path=\"/view/compare\" component={Compare} />\r\n                                <Route exact path=\"/search\" component={Search} />\r\n                                <Route exact path=\"/after\" component={AfterProduct} />\r\n                                <Route exact path=\"/event\" component={EventRouter} />\r\n\r\n                                <Route path=\"/closet\" component={UserProduct} />\r\n                                <Route path=\"/login\" component={LoginRouter} />\r\n                                <Route path=\"/setting\" component={SettingRouter} />\r\n                                \r\n                                <Route exact path=\"/test\" component={Test}/>\r\n                                \r\n                                \r\n                                <Route exact path=\"/notlogin\" component={NonLogin} />\r\n                                <Route exact path=\"/error\" component={Wrong} />\r\n                                <Route path=\"/\" component={NotFound}/>\r\n                            </Switch>\r\n                        </BrowserRouter>\r\n                    </MediaContext.Provider>\r\n                </LoginContext.Provider>\r\n            </ServerContext.Provider>\r\n        </CookiesProvider>\r\n    );\r\n}\r\nexport default App;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ServiceOpen.js",[],["181","182"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\View.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Login.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\TransitionSizeName.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductSearch.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\Cookie.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\AfterProduct.js",["183"],"import { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Css\r\nimport '../contents/css/Router/AfterProduct.css';\r\n\r\n// Context \r\nimport {LoginContext} from '../App';\r\nimport {ServerContext} from '../App';\r\n\r\n\r\nconst AfterProduct = ({history}) => {\r\n    //const server = 'http://localhost:3001';\r\n    //const server = 'http://3.36.87.114:3001';\r\n    //const server = 'http://192.168.11.2:3001';\r\n\r\n    // Context\r\n    const {userInfo} = useContext(LoginContext);\r\n    console.log(\"로그인 사용자 Context : \",userInfo);\r\n    const server = useContext(ServerContext);\r\n\r\n    // State\r\n    const [loader, setLoader] = useState(true);\r\n    const [deleteOption, setDeleteOption] = useState(false);\r\n    const [afterList, setAfterList] = useState(null);\r\n\r\n    // Ref\r\n    const reomveWrapper = useRef(null);\r\n    if(!userInfo || !userInfo._id || !userInfo.name) {\r\n        history.replace(\"/wrong\");\r\n    }\r\n    const request = {\r\n        getAfterList : async () => {\r\n            const result = await axios({\r\n                method: 'get',\r\n                url : `${server}/user/after`,\r\n                withCredentials: true,\r\n                timeout : 5000\r\n            }).catch(err => console.log(err));;\r\n            \r\n            setLoader(false);\r\n            try {\r\n                if(result.data) {\r\n                    setAfterList(result.data);\r\n                } else {\r\n                    setAfterList(null);\r\n                }\r\n            } catch(error) {\r\n                alert(\"error\");\r\n                console.log(\"error\");\r\n                setAfterList(null);\r\n            }\r\n        },\r\n        removeAfterList : async (data) => {\r\n            const result = await axios({\r\n                method: 'delete',\r\n                url : `${server}/user/after`,\r\n                withCredentials: true,\r\n                data : data,\r\n                timeout : 4000\r\n            });\r\n            console.log(\"삭제 결과 : \",result);\r\n        }\r\n\r\n    }\r\n    const event = {\r\n        removeToggle : () => {\r\n            if(!deleteOption) setDeleteOption(true);\r\n            else event.removeComfirmToggle(true);\r\n        },\r\n        removeCancel : () => {\r\n            event.removeComfirmToggle(false);\r\n            setDeleteOption(false)\r\n        },\r\n        moveCompare : (element) => {\r\n            history.push({\r\n                pathname: \"/view/compare\",\r\n                search: `?shop=${element.praw.domain}&no=${element.praw.code}`\r\n            });\r\n        },\r\n        removeData : {\r\n            _id : userInfo && userInfo._id ? userInfo._id : null,\r\n            upwd : userInfo && userInfo.sili_p ? userInfo.sili_p : null,\r\n            product : [\"asdfsaf\"]\r\n        },\r\n        count : 0,\r\n        remove : (_id, e) => {\r\n            e.stopPropagation();\r\n            let target = e.target;\r\n            let i = 0;\r\n            while(!(target.classList.contains(\"After-element\")) && i < 5) {\r\n                target = target.parentElement;\r\n                i++;\r\n            }\r\n            if(i === 4 && !target.classList.contains(\"After-element\")) return;\r\n            else {\r\n                target.classList.add(\"remove\");\r\n                setTimeout(() => target.remove(),360);\r\n            }\r\n            event.removeData.product.push(_id);\r\n            event.count++;\r\n        },\r\n        removeSend : async () => {\r\n            console.log(\"삭제할 데이터 : \", event.removeData);\r\n            await request.removeAfterList(event.removeData);\r\n            event.removeComfirmToggle(false);\r\n            setDeleteOption(false);\r\n        },\r\n        removeComfirmToggle : (force) => {\r\n            if(!reomveWrapper.current) return;\r\n            if(force === undefined) force =  !reomveWrapper.current.classList.contains(\"on\");\r\n            if(force) {\r\n                if(event.count > 0) reomveWrapper.current.classList.add(\"on\");\r\n                else setDeleteOption(false);\r\n            } else if(!force) reomveWrapper.current.classList.remove(\"on\");\r\n            \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        request.getAfterList();\r\n    }, []);\r\n    return (\r\n        <section id=\"After\">\r\n            <div className=\"remove-wrapper\" ref={reomveWrapper}>\r\n                <div className=\"msg\">\r\n                    <h1 style={{color:\"#ff0000\"}}>\"삭제\"</h1>\r\n                    <h1>하시겠습니까?</h1>\r\n                </div>\r\n                <div className=\"confirm\">\r\n                    <div style={{borderRight:\"1px solid #dbdbdb\"}} onClick={() => event.removeSend()}>\r\n                        <p>삭제</p>\r\n                    </div>\r\n                    <div onClick={() => event.removeCancel()}>\r\n                        <p>취소 </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <i className=\"material-icons back\" onClick={() => history.goBack()}>arrow_back</i>\r\n            <header>\r\n                <h1>나중에 볼 상품</h1>\r\n                <p>최대 30개 저장</p>\r\n                <p>(30개 초과시 오래된 순서로 자동삭제됩니다)</p>\r\n            </header>\r\n            <article>\r\n                <div className=\"func-btn-wrapper\">\r\n                    <button className={deleteOption ? \"on\" : \"\"} onClick={() => event.removeToggle()}>{deleteOption ? \"저장\" : \"삭제\"}</button>\r\n                </div>\r\n                    {\r\n                        loader ? (\r\n                            <div className=\"loaderFrame\">\r\n                                <div className=\"loader\"></div>\r\n                            </div>\r\n                        ) : (\r\n                            (afterList && afterList[0]) ? (\r\n                                <ul>\r\n                                    {\r\n                                      afterList.map((element, index) => (\r\n                                            <li key={index} className=\"After-element\">\r\n                                                <div className=\"After-elementInfoFrame\" onClick={() => event.moveCompare(element)}>\r\n                                                    <div className=\"After-elementInfo\">\r\n                                                        <input type=\"hidden\" name=\"pcode\"/>\r\n                                                        <p>{element.info.sname}</p>\r\n                                                        <h1>{element.info.pname}</h1>\r\n                                                    </div>\r\n                                                    <p>{element.info.subtype}</p>\r\n                                                </div>\r\n                                                <a href={`http://${element.praw.full}`}><i className=\"material-icons\">open_in_new</i></a>\r\n                                                <button onClick={(e) => event.remove(element._id,e)} className={deleteOption ? \"active\" : \"\"}>\r\n                                                    <i className=\"material-icons\">remove</i>\r\n                                                </button>\r\n                                            </li>\r\n                                        ))\r\n                                }\r\n                                </ul>\r\n                            ) : (\r\n                                <div className=\"After-none\">\r\n                                    <p>나중에 볼 상품이 없습니다.</p>\r\n                                </div>       \r\n                            )\r\n                        )\r\n                    }\r\n            </article>\r\n        </section>\r\n    )\r\n}\r\n/*\r\n    Data Format\r\n    [\r\n        {\r\n            pcode : \"PAAA0001\", -- 0\r\n            sname : \"string\", -- 1\r\n            pname : \"string\", -- 2\r\n            subtype : \"string\", -- 3\r\n            praw : {\r\n                full : \"string\", -- 0\r\n                code : \"string\" -- 1\r\n            } -- 4\r\n            \r\n        }, ...\r\n    ]\r\n*/\r\nexport default AfterProduct;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Test.js",["184","185"],"import { useEffect } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport SizelityURL from '../contents/js/URL';\r\n\r\nconst Test = ({history}) => {\r\n    const sampleCase = [\r\n        \"https://www.byslim.com/product/%EB%8B%B9%EC%9D%BC%EB%B0%9C%EC%86%A1-%EC%BD%94%EB%94%94%EB%A7%8C%EB%8A%A5-%EA%B8%B4%ED%8C%94%ED%8B%B0mu/19486/category/1/display/6/\",\r\n        \"https://byslim.com/product/%EC%BD%94%ED%8C%85-%ED%97%A4%EB%B9%84-%ED%8A%B8%EB%9F%AC%EC%BB%A4%EC%88%8F%EC%9E%AC%ED%82%B7ot/23644/category/683/display/1/\",\r\n        \"https://byslim.com/product/%ED%8A%B8%EC%9C%8C%EC%8A%A4%ED%8A%B8%EB%A6%BF-%EC%B9%B4%EA%B3%A0-%EC%A1%B0%EA%B1%B0%EB%B0%B4%EB%94%A9%EB%B0%94%EC%A7%80/23627/category/683/display/1/\",\r\n        \"https://www.hiver.co.kr/products/28508426\", // products\r\n        \"https://www.w3schools.com/cssref/css_selectors.asp\",\r\n        \"https://www.hiver.co.kr/products/28549822\", \r\n        \"https://mr-s.co.kr/product/%EA%B3%A0%ED%85%90-%ED%8A%B8%EB%A0%8C%EC%B9%98-%EB%A1%B1%EC%BD%94%ED%8A%B8/39702/category/1/display/13/\",\r\n        \"https://mr-s.co.kr/product/11-%EB%8D%B0%EC%9D%B4-%EC%99%80%EC%9D%B4%EB%93%9C-%ED%8A%B8%EB%A0%88%EC%9D%B4%EB%8B%9D-%EC%85%8B%EC%97%85/39672/category/1/display/2/\",\r\n        \"https://www.zardins.com/product/detail.html?product_no=4518&cate_no=1&display_group=4\", // product_no\r\n        \"https://www.zardins.com/product/detail.html?product_no=5212&cate_no=1&display_group=3\",\r\n        \"http://superstari.co.kr/shop/shopdetail.html?branduid=142447&xcode=044&mcode=001&scode=&special=3&GfDT=bmp8W10%3D\", // branduid\r\n        \"http://www.okkane.co.kr/shop/shopdetail.html?branduid=132910&xcode=102&mcode=000&scode=&special=1&GfDT=bml0W10%3D\",\r\n        \"http://www.okkane.co.kr/shop/shopdetail.html?branduid=129768&xcode=101&mcode=000&scode=&special=1&GfDT=Zm93UFw%3D\",\r\n        \"https://www.meosidda.com/product/%EB%88%84%EA%B5%AC%EB%82%98-%ED%8E%B8%ED%95%98%EA%B2%8C-%EC%A6%90%EA%B2%A8%EC%9E%85%EB%8A%94-%EB%AC%B4%EC%A7%80%EB%A7%A8%ED%88%AC%EB%A7%A8/30969/category/1/display/2/\", // product\r\n        \"https://www.meosidda.com/product/%EB%8D%B0%EC%9D%BC%EB%A6%AC-%EB%A9%B4%EC%8A%A4%ED%8C%90-%EC%B9%B4%EA%B3%A0-%EC%A1%B0%EA%B1%B0%ED%8C%AC%EC%B8%A0/37335/category/1/display/2/\",\r\n        \"http://lookple.com/product/%EB%A3%A9-%EB%8D%B0%EC%9D%B4%ED%94%84-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98-%EB%9D%BC%EC%9A%B4%EB%93%9C%EB%8B%88%ED%8A%B8/4452/category/1/display/3/\",\r\n        \"http://zoozoom.co.kr/shop/shopdetail.html?branduid=164011&xcode=008&mcode=001&scode=&GfDT=Z253UA%3D%3D\",\r\n        \"https://blog.naver.com/guswjd0407/222250474168\",\r\n        \"https://fn3995.tistory.com/128\",\r\n        \"https://hub.zum.com/daily/42307\",\r\n        \"https://yongmat.tistory.com/244?category=735709\",\r\n        \"https://smartstore.naver.com/cookierun/products/5346983325\",\r\n        \"https://smartstore.naver.com/kdgbook/products/5375407225?NaPm=ct%3Dklgwsn8w%7Cci%3D551c6b90ffff31118e8408efa716e5c254c71479%7Ctr%3Dslsl%7Csn%3D531617%7Chk%3D060e0352d7339f3444dab6d0d84af39f268e016e\",\r\n        \"https://m.blog.naver.com/yoorican/221281164058\",\r\n        \"https://m.blog.naver.com/PostView.nhn?blogId=star76a&logNo=220096989645&proxyReferer=https:%2F%2Fwww.google.com%2F\",\r\n        \"https://sanglae.tistory.com/m/209\",\r\n        \"https://www.loveparis.net/product/new20000%EC%9B%90%ED%95%A0%EC%9D%B8-223%ED%99%94%EB%B6%80%ED%84%B0-%EC%A0%95%EC%83%81%EA%B0%80169000%EC%9B%90%EC%9B%A8%EC%9D%B4%EB%B8%8C-%EB%B2%84%ED%8A%BC-%EB%A0%88%EB%8D%94%EC%9E%90%EC%BC%93/16011/category/1/display/3&cafe_mkt=nms_c02?NaPm=ct%3Dklgww3h4%7Cci%3Dd5d8ff715a1d19ced2a05baddbacda62b6bf0f96%7Ctr%3Dwsp%7Csn%3D19686%7Chk%3D4e2e2db88bb98ca6a327ae7ccaca813e7da6174a\"\r\n    ];\r\n    const [{test},setCookies] = useCookies([]);\r\n    \r\n    useEffect(() => {setCookies(\"test\",{test:\"테스트\"},{path:\"/\"})},[]);\r\n    const cookieTest = () => {\r\n        setCookies(\"test\",{test:\"5678\"},{path:\"/\"});\r\n    }\r\n    const url = new SizelityURL();\r\n    for(const element of sampleCase) {\r\n        console.log(url.get(element));\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={() => history.goBack()}>뒤로가기</button>\r\n            <button onClick={() => cookieTest()}>Cookie Test</button>\r\n        </>\r\n    )\r\n}\r\nexport default Test;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\URL.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\UserProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Login.js",["186"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\Join.js",["187","188"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Login\\AccountHelp.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\LoginRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\Setting.js",["189"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\SettingRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\NotFoundRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\WrongRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Search.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchResult.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Search\\SearchCurrent.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Compare.js",["190","191"],"import axios from 'axios';\r\nimport React, {createContext, useMemo, useEffect, useState ,useContext} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport URLModule from '../contents/js/URL';\r\n\r\n// CSS\r\nimport '../contents/css/Compare/Compare_Router.css';\r\n\r\n// Component\r\nimport Main from '../components/Compare/Compare_Main';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Context\r\nimport {ServerContext} from '../App';\r\nexport const ProductContext = createContext(null);\r\n\r\n\r\nconst Compare = ({history, location}) => {\r\n    // Cookie\r\n    const [{sizelity_currentSearchData}, setCookies] = useCookies([]);\r\n\r\n    const referrer = document.referrer;\r\n    \r\n    // State\r\n    const [data, setData] = useState(history.location?.state?.data);\r\n    const [loader, setLoader] = useState(!data);\r\n    const [status, setStatus] = useState(0);\r\n\r\n    // Context \r\n    const server = useContext(ServerContext);\r\n    \r\n\r\n    useEffect(() => { \r\n        const getProduct = async (query) => {\r\n            try {\r\n                const response = await axios({\r\n                    method: \"get\",\r\n                    url : `${server}/product/${query}`,\r\n                    timeout : 2500\r\n                }).catch(() => {\r\n                    return {data:{status:500}};\r\n                });\r\n                console.log(\"검색 결과 : \", response.data);\r\n                if(response.data?._id) {\r\n                    // 데이터 가져오기 성공.\r\n                    try {\r\n                        // 최근 검색 상품 쿠키에 넣기\r\n                        const sname = response.data.info.sname;\r\n                        const pname = response.data.info.pname;\r\n                        let isSame = false;\r\n    \r\n                        let current = sizelity_currentSearchData;\r\n                        if(current) {\r\n                            for(const element of current) {\r\n                                if(element[0] === sname && element[1] === pname) {\r\n                                    isSame = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            current = new Array([]);\r\n                        }\r\n                        if(!isSame) {\r\n                            if(current.length > 20) current.pop();\r\n                            current.unshift([ response.data.info.sname, response.data.info.pname, response.data.info.subtype, response.data.praw.full]);\r\n                            setCookies(\"sizelity_currentSearchData\",current,{path:\"/\", maxAge:(500 * 24 * 60 * 60)});\r\n                        }\r\n                    } catch{} finally {\r\n                        setData(response.data);\r\n                    }\r\n                } else {\r\n                    if(response.data.status) setStatus(response.data.status);\r\n                }\r\n            } catch(error) {setStatus({status: -200})}\r\n            setLoader(false);\r\n        }\r\n\r\n        if(!data) {\r\n            // 상품 정보 없음. -> 검색\r\n            let query = null;\r\n            if(referrer) {\r\n                const urlModule = new URLModule();\r\n                const {domain, code} = urlModule.get(referrer);\r\n                if(domain && code) query = `${domain}/${code}`;\r\n            } else if(location.search) {\r\n                //const {domain, code} = new URLSearchParams(location.search);\r\n                const params = new URLSearchParams(location.search);\r\n                const domain = params.get(\"shop\");\r\n                const code = params.get(\"no\");\r\n                if(domain && code) query = `${domain}/${code}`;\r\n            }\r\n            if(query) {\r\n                getProduct(query);\r\n            } else {\r\n                setData(null);\r\n                setLoader(false);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        loader ? (\r\n            <section id=\"Compare\">\r\n                <div className=\"loader\" style={{\r\n                    border: \"2px solid #888888\",\r\n                    borderTop:\"2px solid #00000000\",\r\n                    width:\"2rem\",\r\n                    height:\"2rem\"\r\n                }}></div>\r\n            </section>\r\n        ) : (\r\n            data ? (\r\n                <ProductContext.Provider value={data}>\r\n                    <Main \r\n                        history={history}\r\n                        productData={data}\r\n                    />\r\n                </ProductContext.Provider>\r\n            ) : (\r\n                <section id=\"Compare\">\r\n                    {\r\n                        status === 404 ? (\r\n                            <div className=\"title\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <h1>죄송합니다.</h1>\r\n                                <h1>상품 정보가 없습니다.</h1>\r\n                                <p>입력하신 상품의 사이즈 정보는</p>\r\n                                <p>영업일 기준 2일이내에 자동으로 입력됩니다.</p>\r\n                                <button onClick={() => history.replace(\"/search\")}>다른 상품 검색</button>\r\n                            </div>\r\n                        ) : status === 500 ? (\r\n                            <div className=\"title\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <h1>죄송합니다.</h1>\r\n                                <h1>서버와의 연결에 실패했습니다.</h1>\r\n                            </div>\r\n                        ) : status === -200 ? (\r\n                            <div className=\"title\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <h1>죄송합니다.</h1>\r\n                                <h1>잠시 후 다시 시도해주세요.</h1>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"title\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <h1>잘못된 접근입니다.</h1>\r\n                                <p>상품을 검색할 수 없습니다.</p>\r\n                                <button onClick={() => history.replace(\"/search\")}>다른 상품 검색</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <footer>\r\n                        <Link to=\"/\">Sizelity</Link>\r\n                    </footer>\r\n                </section>\r\n            )\r\n        )\r\n    )\r\n}\r\n\r\n//export default React.memo(Compare);\r\nexport default Compare;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Main.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Article.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Graph.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Menu.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Compare\\Compare_Nav_MyProduct.js",["192"],"import React, {useContext, useEffect, useRef} from 'react';\r\nimport Proptype from 'prop-types';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\n\r\n// CSS\r\nimport '../../contents/css/MyProductNav.css';\r\n\r\n// Context\r\nimport { MediaContext } from '../../App';\r\n\r\n/*\r\n    @param myProductData : 현재 나의 옷 정보가 담긴 Object (in Cookie \"my_recently\")\r\n    @param setMyProductData : 현재 나의 옷 정보가 담긴 Object state 를 변경하는 함수\r\n*/\r\nlet transition = null;\r\nconst NavMyProduct = ({myProductData, history}) => {\r\n    // Context\r\n    const media = useContext(MediaContext);\r\n\r\n    // ref\r\n    const nav = useRef(null);\r\n    \r\n    if(!transition) transition = new Transition(\"KOR\");\r\n\r\n    const event = {\r\n        navToggle : function(force) {\r\n            if(nav.current) {\r\n                if(force === undefined) force = !(nav.current.classList.contains(\"active\"));\r\n                nav.current.classList.toggle(\"active\", force);\r\n            }\r\n        },\r\n        moveCloset : function() {\r\n            if(nav.current.classList.contains(\"active\")) {\r\n                history.push({\r\n                    pathname : \"/closet\",\r\n                    state : {\r\n                        isCompare : true\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    } // event\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => { event.navToggle(true); }, 300)\r\n    }, [myProductData]);\r\n    return (\r\n        <div id=\"myProduct-nav-wrapper\" className=\"\" ref={nav}>\r\n            {\r\n                media === \"Phone\" ?\r\n                <div className=\"navCloser\"  onTouchStart={() => event.navToggle()}></div> : \r\n                <div className=\"navCloser\"  onClick={() => event.navToggle()}></div> \r\n            }\r\n            <nav className=\"myProductNav\" onClick={() => event.navToggle(true)}>\r\n            {\r\n                myProductData ? (\r\n                    <>\r\n                        <div className=\"size\">\r\n                            <p>{myProductData.size.name}</p>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <p>{myProductData.info.sname ? myProductData.info.sname : null}</p>\r\n                            <h1>{myProductData.info.nick ? myProductData.info.nick : myProductData.info.pname ? myProductData.info.pname : null}</h1>\r\n                            <div>\r\n                                <p>{transition.getCate(myProductData.info.ptype)}</p>\r\n                                <b>/</b>\r\n                                <p>{myProductData.info.subtype ? myProductData.info.subtype : null}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"changeBtn\">\r\n                            <i className='material-icons' onClick={() => event.moveCloset(true)}>swap_horiz</i>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    \r\n                        <button onClick={() => event.moveCloset(false)}>\r\n                            <i className=\"material-icons\">add</i>\r\n                            <p>나의 옷을 골라주세요.</p>\r\n                        </button>\r\n                )\r\n            }\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavMyProduct.proptype = {\r\n    myProductData : Proptype.object,\r\n    history : Proptype.object.isRequired\r\n}\r\n\r\nexport default React.memo(NavMyProduct);","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\EventRouter.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Event\\Event_List.js",["193"],"import axios from 'axios';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\n\r\n// CSS\r\nimport '../../contents/css/Event/Event_List.css';\r\n\r\n// Context\r\nimport {ServerContext} from '../../App';\r\n\r\nconst EventList = ({history}) => {\r\n    //const server = 'http://localhost:3001';\r\n    //const server = 'http://3.36.87.114:3001';\r\n    const server = useContext(ServerContext);\r\n    //const server = 'http://192.168.11.2:3001';\r\n\r\n    // state\r\n    const [list, setList] = useState(undefined);\r\n    \r\n    // ref\r\n    const caution = useRef(null);\r\n\r\n    const getDay = (start, end) => Math.floor((new Date(start).getTime() - new Date(end).getTime()) / (1000 * 60 * 60 * 24)) * -1;\r\n\r\n    if(list) console.log(list);\r\n\r\n    const event = {\r\n        cautionToggle : (force) => {\r\n            if(!caution.current) return;\r\n            if(force === undefined) force = !caution.current.classList.contains(\"on\");\r\n            caution.current.classList.toggle(\"on\",force);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetch = async() => {\r\n            const response = await axios({\r\n                method: \"post\",\r\n                url : `${server}/event/get`,\r\n                data : {\r\n                    cate : \"all\"\r\n                },\r\n                timeout : 3500\r\n            }).catch(err => {\r\n                window.alert(err);\r\n                console.log(\"Evnet Get Timeout : \", err);\r\n                event.cautionToggle(true);\r\n                return {data:{status:-200}}\r\n            });\r\n            if(response.data.status) {\r\n                console.log(\"Error : \", response.data.status);\r\n                setList(null);\r\n            } else {\r\n                setList(response.data);\r\n            }\r\n        }\r\n        fetch();\r\n    }, []);\r\n    return (\r\n        <section id=\"List\">\r\n            <div className=\"caution-wrapper\" ref={caution}>\r\n                <div className=\"caution-frame\">\r\n                    <p>잠시 후 시도해주세요.</p>\r\n                </div>\r\n                <div className=\"caution-closer\" onClick={() => event.cautionToggle(false)}></div>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => history.goBack()}>\r\n                    <i className=\"material-icons\">arrow_back</i>\r\n                </button>\r\n            </div>\r\n            <header>\r\n                <div>\r\n                    <h1>이벤트</h1>\r\n                    <p></p>\r\n                </div>\r\n            </header>\r\n            <article>\r\n                {\r\n                    (list && list.slizelity && list.sizelity.length > 0) ? (\r\n                        <div className=\"list-wrapper\">\r\n                            <div className=\"title-frame\">\r\n                                <h1>진행중인 이벤트</h1>\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n                <div className=\"list-wrapper\">\r\n                    <div className=\"title-frame\">\r\n                        <h1>프로모션</h1>\r\n                    </div>\r\n                    {\r\n                        (list && list.shop && list.shop.length > 0) ? (\r\n                            <ul> {\r\n                                list.shop.map((element, index) => (\r\n                                    <li key={index}>\r\n                                        <a href={element.link}>\r\n                                            <div className=\"list-title\">\r\n                                                <h1>{element.sname}</h1>\r\n                                                <div className=\"list-d\">\r\n                                                    <h2>{getDay(element.expires.start, element.expires.end)}</h2>\r\n                                                    <p>일 남음</p>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"list-img\">\r\n\r\n                                            </div>\r\n                                            <div className=\"list-tag-frame\">\r\n                                                {element.tag.map((tagName, index) => (\r\n                                                    <p key={index}>#{tagName}</p>\r\n                                                ))}\r\n                                            </div>\r\n                                        </a>\r\n                                    </li>\r\n                                ))\r\n                            }</ul>\r\n                        ) : list === null ? (\r\n                            <div className=\"list-none\">\r\n                                <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                <p>진행중인 프로모션이 없습니다.</p>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"list-none\">\r\n                                <div className=\"loader\"></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </article>\r\n            <footer>\r\n\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\nexport default EventList;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\router\\Error\\NonLogin.js",["194"],"import { Link } from \"react-router-dom\"\r\n\r\nconst NonLogin = ({history}) => {\r\n    /*\r\n        로그인 -Link 가 아닌 Replace로 이동시켜야함 : 그래야지 로그인 하고 뒤로가기가 바로 보고있던 페이지로 감\r\n    */\r\n    \r\n    return  (\r\n        <section className=\"Error\">\r\n            <div>\r\n                <i className=\"material-icons\">lock</i>\r\n                <h1>로그인이 필요합니다.</h1>\r\n                <p></p>\r\n                <button onClick={() => history.replace('/login')}>로그인</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default NonLogin;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\AddProduct.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\ViewProduct.js",["195"],"import { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\nimport Transition from '../../contents/js/TransitionSizeName';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// CSS\r\nimport '../../contents/css/UserProduct/ViewProduct.css';\r\nimport '../../contents/css/MyProductNav.css';\r\n\r\n// Context\r\nimport { MediaContext } from '../../App';\r\nimport { LoginContext } from '../../App';\r\nimport { ServerContext } from '../../App';\r\n\r\n\r\nlet transition = null;\r\nconst UserProduct = ({history}) => {\r\n    const backIsCompare = history.location.state ? history.location.state.isCompare : false;\r\n    //const comparePtype = history.location.state ? history.location.state.ptype : null; -> \r\n\r\n    // Cookie\r\n    const [{sizelity_myRecently}, setCookie] = useCookies(['sizelity_myRecently']);\r\n    const cookie = sizelity_myRecently;\r\n\r\n    // Context\r\n    const { userInfo } = useContext(LoginContext);\r\n    const media = useContext(MediaContext);\r\n    const server = useContext(ServerContext);\r\n    \r\n    // State\r\n    const [productData, setProductData] = useState(null);\r\n\r\n    // Ref\r\n    const alertWrapper = useRef(null);\r\n    const confirmWrapper = useRef(null);\r\n    const deleteBtn = useRef(null);\r\n    const modifyBtn = useRef(null);\r\n\r\n    // Field\r\n    if(!transition) transition = new Transition(\"KOR\");\r\n    const cate = [\"set\",\"outer\",\"top\",\"bottom\"]; // 지원 항목\r\n    let mode = 1; // -1 : delete mode / 0 : modify mode / 1 : cookie change mode\r\n    let removeData = {\r\n        product : null,\r\n        frame : null\r\n    };\r\n    \r\n    // Analyze ProductData\r\n    const analyzeData = ((data) => {\r\n        if(!data || data.length < 1) return null;\r\n        else {\r\n            const result = {};\r\n            for(const element of data) {\r\n                if(element.info.ptype) {\r\n                    if(!result[element.info.ptype]) result[element.info.ptype] = [];\r\n                    result[element.info.ptype].push(element);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    })(productData);\r\n    console.log(\"분석 결과 : \", analyzeData);\r\n    const event = {\r\n        listToggle : (e, force) => {\r\n            if(!e) return;\r\n            e.stopPropagation();\r\n            //const frame = e.target.parentElement.classList.conatain(\"list-frame\") ? e.target.parentElement : null;\r\n            let frame = e.target;\r\n            for(let i = 0; i<4; i++) {\r\n                frame = frame.parentElement;\r\n                if(frame.classList.contains(\"list-frame\")) break;\r\n            }\r\n            if(force === undefined) force = !frame.classList.contains(\"on\");\r\n            frame.classList.toggle(\"on\",force);\r\n            \r\n        },\r\n        elementClick : (data, e) => {\r\n            e.stopPropagation();\r\n            console.log(mode);\r\n            switch(mode) {\r\n                case 1 : {\r\n                    setCookie(\"sizelity_myRecently\",data,{path:\"/\", maxAge:(500 * 24 * 60 * 60)});\r\n                    break;\r\n                }\r\n                case 0 : {\r\n                    history.push({\r\n                        pathname: '/closet/add',\r\n                        state: data\r\n                    })\r\n                    break;\r\n                }\r\n                case -1 : {\r\n                    let frame = e.target;\r\n                    if(!frame.classList.contains(\"list\")) {\r\n                        for(let i=0; i < 5; i++) {\r\n                            frame = frame.parentElement;\r\n                            if(frame.classList.contains(\"list\")) break;\r\n                        }\r\n                    }\r\n                    if(!frame.classList.contains(\"list\")) return;\r\n                    removeData.product = data;\r\n                    removeData.frame = frame;\r\n                    alert.confirmToggle(true, data, \"error\");\r\n                    break;\r\n                }\r\n                default : {}\r\n            }\r\n        },\r\n        delete : {\r\n            mode : (force) => {\r\n                if(!deleteBtn.current) return;\r\n                if(force === undefined) force = !deleteBtn.current.classList.contains(\"on\");\r\n                if(force) {\r\n                    if(mode === 0) {\r\n                        // Delete mode 활성화 상태 -> 종료 해줘야함.\r\n                        if(!modifyBtn.current) return;\r\n                        modifyBtn.current.classList.remove(\"on\");\r\n                    }\r\n                    deleteBtn.current.classList.add(\"on\");\r\n                    alert.alertToggle(true,\"삭제모드 : 삭제하려는 상품을 선택해주세요.\",\"error\");\r\n                    mode = -1\r\n                } else {\r\n                    deleteBtn.current.classList.remove(\"on\");\r\n                    alert.alertToggle(true,\"삭제모드를 종료합니다.\",\"error\");\r\n                    mode = 1\r\n                }\r\n            }\r\n        },\r\n        deleteCancel : () => {\r\n            removeData.frame = null;\r\n            removeData.product = null;\r\n            alert.confirmToggle(false);\r\n        },\r\n        elementDelete : async () => {\r\n            alert.confirmToggle(false);\r\n            if(removeData.product) { //Confirm 오픈시 저장되는 데이터 (Field - let removeData = null;)\r\n                const response = await axios({\r\n                    method : 'delete',\r\n                    url : `${server}/user/product/${removeData.product._id}`,\r\n                    withCredentials: true,\r\n                    timeout: 3500\r\n                }).catch(() => {\r\n                    return {data : {status : -100}};\r\n                });\r\n                console.log(\"삭제 결과 : \", response);\r\n                if(!response || !response.data || !response.status) {\r\n                    alert.alertToggle(true, \"오류가 발생했습니다.\", \"error\");\r\n                }\r\n                switch(response.data.status) {\r\n                    case 200 : {\r\n                        if(removeData.frame) removeData.frame.classList.add(\"remove\");\r\n                        break;\r\n                    }\r\n                    case -1 : {\r\n                        alert.alertToggle(true,\"잘못된 접근입니다.\",\"error\");\r\n                        break;\r\n                    }\r\n                    case -100 : {\r\n                        alert.alertToggle(true, \"네트워크 오류!\", \"error\");\r\n                        break;\r\n                    }\r\n                    case -200 : {\r\n                        alert.alertToggle(true, \"잠시 후 다시 시도해주세요.\", \"error\");\r\n                        break;\r\n                    }\r\n                    default : {\r\n                        alert.alertToggle(true, \"잠시 후 다시 시도해주세요.\", \"error\");\r\n                    }\r\n                }\r\n            } else {\r\n                alert.alertToggle(true,\"실패하였습니다.\",\"error\");\r\n            }\r\n        },\r\n        modify : {\r\n            mode : (force) => {\r\n                if(!modifyBtn.current) return;\r\n                if(force === undefined) force = !modifyBtn.current.classList.contains(\"on\");\r\n                if(force) {\r\n                    if(mode === -1) {\r\n                        // Delete mode 활성화 상태 -> 종료 해줘야함.\r\n                        if(!deleteBtn.current) return;\r\n                        deleteBtn.current.classList.remove(\"on\");\r\n                    }\r\n                    modifyBtn.current.classList.add(\"on\");\r\n                    alert.alertToggle(true,\"수정모드 : 수정하려는 상품을 선택해주세요.\",\"normal\");\r\n                    mode = 0;\r\n                } else {\r\n                    modifyBtn.current.classList.remove(\"on\");\r\n                    alert.alertToggle(true,\"수정모드를 종료합니다.\",\"normal\");\r\n                    mode = 1\r\n                }\r\n            },\r\n            click : () => {\r\n                \r\n            }\r\n        }\r\n    }\r\n    const alert = {\r\n        // type : error || normal || clear\r\n        alertToggle : (force, msg, type) => {\r\n            if(!alertWrapper.current) return;\r\n            const cl = alertWrapper.current.classList;\r\n            if(force === undefined) force = !cl.contains(\"on\");\r\n            if(force === true) {\r\n                if(msg !== undefined) {\r\n                    if(type === \"error\" || type === \"normal\" || type === \"clear\") {\r\n                        const title = alertWrapper.current.querySelector(\"p\");\r\n                        if(title) {\r\n                            title.innerHTML = msg;\r\n                            title.classList.remove(\"error\", \"normal\", \"clear\");\r\n                            title.classList.add(type);\r\n                        }\r\n                    }\r\n                }\r\n                cl.add(\"on\");\r\n            } else {\r\n                cl.remove(\"on\");\r\n            }\r\n        },\r\n        confirmToggle : (force, data, type) => {\r\n            if(!confirmWrapper.current) return;\r\n            const cl = confirmWrapper.current.classList;\r\n            if(force === undefined) force = !cl.contains(\"on\");\r\n            if(force === true) {\r\n                if(data !== undefined) {\r\n                    if(type === \"error\" || type === \"normal\" || type === \"clear\") {\r\n                        const title = confirmWrapper.current.querySelector(\"q\");\r\n                        if(title) {\r\n                            title.innerHTML = data.info.nick ? data.info.nick : data.info.pname ? data.info.pname : null;\r\n                            title.classList.remove(\"error\", \"normal\", \"clear\");\r\n                            title.classList.add(type);\r\n                        }\r\n                    }\r\n                }\r\n                cl.add(\"on\");\r\n            } else {\r\n                cl.remove(\"on\");\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(!userInfo) return;\r\n        console.log(\"%c Request My Fav Product Data !!\", \"background: black; color: #fff;\");\r\n        if(productData === null) {\r\n            try {\r\n                (async () => {\r\n                    if(userInfo._id) {\r\n                        const response = await axios({\r\n                            method: 'get',\r\n                            url: `${server}/user/product`,\r\n                            withCredentials: true,\r\n                            timeout: 3500\r\n                        }).catch(() => {\r\n                            console.log(\"ERROR\");\r\n                            alert.alertToggle(true, \"잠시 후 다시 시도해주세요.\", \"error\");\r\n                            return;\r\n                        });\r\n                        if(response && response.data) {\r\n                            console.log(\"%c SERVER GET USER PRODUCT DATA : \", \"background: black; color: #fff;\", response.data);\r\n                            setProductData(response.data);\r\n                        } else return;\r\n                    } else {\r\n                        console.log(\"%c Request fail\", \"background: black; color: #fff;\");\r\n                        return null;\r\n                    }\r\n                })();\r\n            } catch {\r\n                alert.alertToggle(true, \"잠시 후 다시 시도해주세요.\", \"error\");\r\n            }\r\n        }\r\n    }, [productData, userInfo]);\r\n    return (\r\n        <section id=\"UserProduct\">\r\n            <div className=\"alertWrapper\" ref={alertWrapper}>\r\n                <div className=\"alertFrame\">\r\n                    <p></p>\r\n                </div>\r\n                {\r\n                    media === \"Desktops\" ?\r\n                    <div className=\"alertClose\" onClick={() => alert.alertToggle(false)}></div> :\r\n                    <div className=\"alertClose\" onTouchStart={() => alert.alertToggle(false)}></div>\r\n                }\r\n            </div>\r\n            <div className=\"confirmWrapper\" ref={confirmWrapper}>\r\n                <div className=\"confirmFrame\">\r\n                    <div>\r\n                        <q></q>\r\n                        <h1>삭제하시겠습니까?</h1>\r\n                    </div>\r\n                    <ul>\r\n                        <li style={{color:\"#ff0000\"}} onClick={() => event.elementDelete()}>삭제</li>\r\n                        <li onClick={() => event.deleteCancel()}>취소</li>\r\n                    </ul>\r\n                </div>\r\n                {\r\n                    media === \"Desktops\" ?\r\n                    <div className=\"alertClose\" onClick={() => alert.confirmToggle(false)}></div> :\r\n                    <div className=\"alertClose\" onTouchStart={() => alert.confirmToggle(false)}></div>\r\n                }\r\n            </div>\r\n            <i className=\"material-icons\" onClick={() => history.goBack()}>arrow_back</i>\r\n            <header>\r\n                <div className=\"title\">\r\n                    <h1 className=\"name\">{userInfo ? userInfo.name : \"XXX\"}</h1>\r\n                    <h1>님의 상품</h1>\r\n                </div>\r\n                <Link to=\"/closet/add\">\r\n                    <i className=\"material-icons\">add</i>\r\n                    <p>추가</p>\r\n                </Link>\r\n            </header>\r\n            <article>\r\n                {\r\n                    productData ? \r\n                        productData.length > 0 ? (\r\n                            <div className=\"list-wrapper\">\r\n                                <div className=\"list-nav\">\r\n                                    <div className=\"delete\" onClick={() => event.delete.mode((mode !== -1))} ref={deleteBtn}>\r\n                                        <i className=\"material-icons\">delete</i>\r\n                                    </div>\r\n                                    <div className=\"modify\" onClick={() => event.modify.mode((mode !== 0))} ref={modifyBtn}>\r\n                                        <i className=\"material-icons\">mode_edit</i>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    analyzeData ? (\r\n                                        cate.map((c, i1) => {\r\n                                            if(analyzeData[c] && analyzeData[c].length > 0) {\r\n                                                return (\r\n                                                    <div key={i1} className=\"list-frame\">\r\n                                                        <div className=\"cate-nav\" onClick={(e) => event.listToggle(e)}>\r\n                                                            <p>{transition.getCate(c)}</p>\r\n                                                            <i className=\"material-icons\">keyboard_arrow_down</i>\r\n                                                        </div>\r\n                                                        <ul>\r\n                                                            {\r\n                                                                analyzeData[c].map((element, i2) => {\r\n                                                                    return (\r\n                                                                        <li key={i2} className=\"list\" onClick={(e) => event.elementClick(element, e)}>\r\n                                                                            <div className=\"size\">\r\n                                                                                <p>{element.size.name}</p>\r\n                                                                            </div>\r\n                                                                            <div className=\"info\">\r\n                                                                                <p>{element.info.sname ? element.info.sname : \"\"}</p>\r\n                                                                                <h1>{element.info.nick ? element.info.nick : element.info.pname}</h1>\r\n                                                                                {element.info.nick ? element.info.pname ? <h2>{element.info.pname}</h2> : null : null}\r\n                                                                            </div>\r\n                                                                            <div className=\"type\">\r\n                                                                                <p>{element.info.subtype}</p>\r\n                                                                            </div>\r\n                                                                            {element.praw.full ? \r\n                                                                                <div className=\"link\">\r\n                                                                                    <a href={`http://${element.praw.full}`} onClick={(e) => e.stopPropagation()}>\r\n                                                                                        <i className=\"material-icons\">open_in_new</i>\r\n                                                                                    </a>\r\n                                                                                </div> : null}\r\n                                                                            <div className=\"btn-wrapper\">\r\n\r\n                                                                            </div>\r\n                                                                        </li>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                )\r\n                                            } else return null;\r\n                                        })\r\n                                    ) : (\r\n                                        <div></div>\r\n                                    )\r\n                                }\r\n\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"empty\">\r\n                                <i className=\"material-icons\">insert_emoticon</i>\r\n                                <p><b style={{fontWeight:\"500\"}}>{userInfo.name}님의 상품</b>을 추가해주세요.</p>\r\n                                <button onClick={() => event.add()}>추가하기</button>\r\n                            </div>\r\n                        )\r\n                     : (\r\n                        <div className=\"loaderFrame\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                    )\r\n                    }\r\n            </article>\r\n            <nav className=\"myProductNav\">\r\n                {\r\n                    cookie ? (\r\n                        <>\r\n                            <div className=\"size\">\r\n                                <p>{cookie.size.name}</p>\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <p>{cookie.info.sname ? cookie.info.sname : null}</p>\r\n                                <h1>{cookie.info.nick ? cookie.info.nick : cookie.info.pname ? cookie.info.pname : null}</h1>\r\n                                <div>\r\n                                    <p>{transition.getCate(cookie.info.ptype)}</p>\r\n                                    <b>/</b>\r\n                                    <p>{cookie.info.subtype ? cookie.info.subtype : null}</p>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                backIsCompare ? <div className=\"changeBtn active\" onClick={() => history.goBack()}>\r\n                                    <i className=\"material-icons\">close</i>\r\n                                </div> : null\r\n                            }\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"empty\">\r\n                            <p>다른 상품과 비교할 상품을 골라주세요.</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n            </nav>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UserProduct;\r\n","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\StepRouter.js",["196"],"import { useRef } from \"react\"\r\n\r\n// CSS\r\nimport '../../contents/css/UserProduct/Step.css';\r\n\r\n// Component \r\nimport Step1 from './Step/Step1';\r\nimport Step2 from './Step/Step2';\r\nimport Step3 from './Step/Step3';\r\n\r\nconst Step = ({data, setData, step, setStep, alertToggle}) => {\r\n    const __data = JSON.parse(JSON.stringify(data));\r\n    \r\n    // Ref\r\n\r\n    // 4\r\n    const nickInput = useRef(null);\r\n    const nickUnset = useRef(null);\r\n\r\n    const event = {\r\n        step4 : {\r\n            unsetToggle : () => {\r\n                if(!nickUnset.current || !nickInput.current) return;\r\n                nickInput.current.classList.toggle(\"off\",nickUnset.current.checked);\r\n                nickInput.current.disabled = nickUnset.current.checked;\r\n                const t = nickUnset.current.previousElementSibling;\r\n                t.classList.toggle(\"on\");\r\n                \r\n            },\r\n            apply : () => {\r\n                console.log(\"apply\")\r\n                // unset 일 경우 => pname 존재하야함\r\n\r\n                if(__data.praw ? (!nickUnset.current || !nickInput.current) : !nickInput.current) return;\r\n                const isUnset = (__data.praw ? nickUnset.current.checked : false);\r\n                if(isUnset) {\r\n                    if(__data.info.pname) {\r\n                        if(__data.info.nick) delete __data.info.nick;\r\n                        setData(__data);\r\n                    } else {\r\n                        // 미지정으로 지정할 수 없음.\r\n                    }\r\n                } else {\r\n                    // 지정 명칭 존재\r\n                    //data.info.nick = nickInput.current.value;\r\n                    const __nick = nickInput.current.value;\r\n                    console.log(__nick);\r\n                    if(__nick.length > 1 && __nick.length < 21) {\r\n                        __data.info.nick = __nick;\r\n                        setData(__data);\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    switch(step) {\r\n        case 1 : {\r\n            return (\r\n                <div className=\"step-wrapper step1\">\r\n                    <Step1 \r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 2 : {\r\n            return (\r\n                <div className=\"step-wrapper step2\">\r\n                    <Step2\r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 3 : {\r\n            return (\r\n                <div className=\"step-wrapper step3\">\r\n                    <Step3\r\n                        data={data}\r\n                        setData={setData}\r\n                        setStep={setStep}\r\n                        alertToggle={alertToggle}/>\r\n                </div>\r\n            )\r\n        }\r\n        case 4 : {\r\n            return (\r\n                <div className=\"step-wrapper step4\">\r\n                    <header>\r\n                        <h1>어떻게 표시할까요?</h1>\r\n                        <p>나중에 알아볼 수 있는 이름을 지어주세요.</p>\r\n                        <p>언제든지 수정 가능할 수 있어요.</p>\r\n                        <p>미지정은 상품명이 존재하는 경우만 사용할 수 있어요.</p>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"input-frame\">\r\n                            <input type=\"text\" ref={nickInput} autoComplete=\"off\" placeholder=\"이름을 만들어주세요.\" maxLength=\"20\" defaultValue={__data.info.nick ? __data.info.nick : undefined}/>\r\n                            <h2>2~20자 사용가능합니다.</h2>\r\n                            {\r\n                                __data.info.pname ? (\r\n                                    <>\r\n                                        <p className=\"line\">OR</p>\r\n                                        <label>\r\n                                            <h1>미지정</h1>\r\n                                            <input type=\"checkbox\" ref={nickUnset} style={{display:\"none\"}} onChange={() => event.step4.unsetToggle()}/>\r\n                                        </label>\r\n                                    </>\r\n                                ) : null\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className=\"apply\" >\r\n                            <h1 onClick={() => event.step4.apply()}>적용</h1>\r\n                        </div>\r\n                    </main>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Step;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step1.js",["197","198"],"import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport URLModule from '../../../contents/js/URL';\r\n\r\n// CSS\r\nimport '../../../contents/css/UserProduct/Step1.css';\r\n\r\n// Context\r\nimport {ServerContext} from '../../../App';\r\n\r\nlet urlModule = null;\r\n//const server = 'http://localhost:3001';\r\n//const server = 'http://3.36.87.114:3001';\r\n//const server = 'http://192.168.11.2:3001';\r\n\r\nconst Step1 = ({data, setData, setStep, alertToggle}) => {\r\n    // state\r\n    const [product, setProduct] = useState(null);\r\n\r\n    // Context\r\n    const server = useContext(ServerContext);\r\n\r\n    // ref\r\n    const productInputWrapper = useRef(null);\r\n    const productInput = useRef(null); // product url input frame\r\n    const sizeListFrame = useRef(null);\r\n    const applyBtn = useRef(null);\r\n    const select = useRef({\r\n        option : {\r\n            value : undefined,\r\n            frame : undefined\r\n        },\r\n        size : {\r\n            value : undefined,\r\n            frame : undefined,\r\n            index : undefined\r\n        }\r\n    });\r\n\r\n    console.log(\"검색 결과 : \",product);\r\n    \r\n    \r\n    const event = {\r\n        onSelect : (e) => {\r\n            if(e) e.stopPropagation();\r\n            else return;\r\n            if(select.current.option.frame) {\r\n                select.current.option.frame.classList.remove(\"on\");\r\n            }\r\n            select.current.option.frame = e.target;\r\n            for(let i=0; i < 3; ++i) {\r\n                if(select.current.option.frame.classList.contains(\"selectOption\")) {\r\n                    select.current.option.frame.classList.add(\"on\");\r\n                    break;\r\n                }\r\n                select.current.option.frame = select.current.option.frame.parentElement;\r\n            }\r\n            select.current.option.value = select.current.option.frame.querySelector(\"input[type=hidden]\").value;\r\n            event.applyToggle();\r\n        },\r\n        productSearch : async () => {\r\n            if(!urlModule) urlModule = new URLModule();\r\n            if(productInput.current.value < 10) return; \r\n            let inputURL = productInput.current.value;\r\n            try {\r\n                inputURL = ((inputURL.indexOf(\"http\") === 0) ? inputURL : \"http://\" + inputURL);\r\n                const isURL = ((value) => {\r\n                    return (/^(file|gopher|news|nntp|telnet|https?|ftps?|sftp):\\/\\/([a-z0-9-]+\\.)+[a-z0-9]{2,4}.*$/).test(value);\r\n                })(inputURL);\r\n                if(isURL) {\r\n                    const analyze = urlModule.get(inputURL);\r\n                    if(analyze) {\r\n                        if(product && product.praw && product.praw.code === analyze.code) return; // 중복된 데이터 검색\r\n                        const response = await axios({\r\n                            method: 'get',\r\n                            url: `${server}/product/get?shop=${analyze.domain}&no=${analyze.code}`,\r\n                            timeout: 3500\r\n                        }).catch((err) => {\r\n                            alertToggle(true, \"네트워크 오류\");\r\n                            return {data:{status:-200}}\r\n                        });\r\n                        if(response.data._id || response.data.status) setProduct(response.data);\r\n                        else {\r\n                            alertToggle(true, \"잠시 후 다시 시도해주세요.\");\r\n                            setProduct({status:-200});\r\n                        }\r\n                    } else {\r\n                        alertToggle(true, \"검색 할 수 없는 주소입니다.\");    \r\n                    }\r\n                } else {\r\n                    alertToggle(true, \"상품의 주소값이 형식에 맞지 않습니다.\");\r\n                }\r\n            } catch(err) {\r\n                alertToggle(true, \"잠시 후 다시 시도해주세요.\");\r\n            }\r\n        },\r\n        // 검색된 상품의 사이즈 선택\r\n        onSize : function(size, index, e) {\r\n            if(e) e.stopPropagation();\r\n            else return;\r\n            if(select.current.size.value === size) {\r\n                // 같은거 두번쨰 누름 -> 사이즈 선택 취소\r\n                select.current.size.frame.classList.remove(\"on\");\r\n                select.current.size.value = undefined;\r\n            } else {\r\n                let frame = e.target;\r\n                for(let i=0; i<3; ++i) {\r\n                    if(frame.classList.contains(\"size-element\")) break;\r\n                    frame = frame.parentElement;\r\n                }\r\n                if(select.current.size.frame) select.current.size.frame.classList.remove(\"on\");\r\n                else {\r\n                    \r\n                }\r\n                frame.classList.add(\"on\");\r\n                select.current.size.frame = frame;\r\n                select.current.size.value = size;\r\n                select.current.size.index = index;\r\n            }\r\n            event.applyToggle();\r\n        },\r\n        applyToggle : () => {\r\n            if(!applyBtn.current) return;\r\n            const data = select.current;\r\n            const toggle = (() => {\r\n                if(data.option.value === \"false\") {\r\n                    return true;\r\n                } else if (data.option.value === \"true\"){\r\n                    if(data.size.value !== undefined) {\r\n                        return true;\r\n                    } else return false;\r\n                } else {\r\n                    // option.value === undefined\r\n                    return false;\r\n                }\r\n            })();\r\n            applyBtn.current.classList.toggle(\"off\", !toggle);\r\n            return toggle;\r\n        },\r\n        apply : () => {\r\n            if(event.applyToggle()) {\r\n                if(select.current.option.value === \"false\") {\r\n                    // 아니요, 모르겠어요.\r\n                    setData({info:{},size:{}});\r\n                    setStep(2);\r\n                } else if(select.current.option.value === \"true\") {\r\n                    if(select.current.size.value !== undefined) {\r\n                        if(product && product.praw) {\r\n                            const __data = JSON.parse(JSON.stringify(data));\r\n                            __data.praw = product.praw;\r\n                            __data.info = product.info;\r\n                            __data.size = product.size[select.current.size.index];\r\n                            console.log(\"저장 데이터 : \",data);\r\n                            setData(__data);\r\n                            setStep(3);\r\n                        }       \r\n                    } else {\r\n                        // 오류 -> '네, 알고있어요.' 선택 후 사이즈 선택 안하고 다음단계 이벤트 활성화\r\n                    }\r\n                } else {\r\n                    // 둘중 아무것도 선택하지 않고 다음단계 활성화\r\n                }\r\n            }\r\n        }\r\n    }\r\n    console.log(select);\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            if(data && data.praw && data.praw.full) await event.productSearch();\r\n        }\r\n        fetch();\r\n    }, []);\r\n    useEffect(() => {\r\n        if(sizeListFrame.current) {\r\n            try {\r\n                if(product.praw.full === data.praw.full) {\r\n                    const frame = sizeListFrame.current.querySelectorAll(`input[type='hidden']`);\r\n                    \r\n                    if(frame) {\r\n                        const size = data.size.name;\r\n                        for(const index in frame) {\r\n                            if(frame[index].value === size) {\r\n                                select.current.size.value = size;\r\n                                select.current.size.frame = frame[index].parentElement;\r\n                                select.current.size.index = index;\r\n\r\n                                frame[index].parentElement.classList.add(\"on\");\r\n\r\n                                select.current.option.value=\"true\";\r\n                                select.current.option.frame = productInputWrapper.current ? productInputWrapper.current : null;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    const frame = sizeListFrame.current.querySelector(`.size-element.on`);\r\n                    console.log(\"ON Frame : \", frame);\r\n                    if(frame) frame.classList.remove(\"on\");\r\n                }\r\n            } catch{}\r\n            \r\n        }\r\n    }, [product]);\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>상품 주소를 아시나요?</h1>\r\n                <p>상품의 인터넷 주소를 복사/붙여넣기</p>\r\n                <p>보다 쉽게 \"나의 상품\"을 채워보세요.</p>\r\n            </header>\r\n            <ul className=\"help-wrapper\">\r\n                <li>\r\n                    <i className=\"material-icons\">help_outline</i>\r\n                    <div>\r\n                        <p>내 옷의 치수를 직접 제어보세요.</p>\r\n                        <p>귀찮음은 잠깐, 편리함은 계속!</p>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <main>\r\n                <div className={`selectOption ${(data && data.praw) ? \"on\" : null}`} ref={productInputWrapper}>\r\n                    <input type=\"hidden\" value=\"true\" />\r\n                    <p onClick={(e) => event.onSelect(e)}>네, 알고있어요.</p>\r\n                    <div>\r\n                        <div className=\"select-column-wrapper\">\r\n                            <div className=\"row-input-frame\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    ref={productInput}\r\n                                    onKeyPress={(e) => e.key === \"Enter\" ? event.productSearch() : null}\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"http://\"\r\n                                    defaultValue={(data && data.praw && data.praw.full) ? `${data.praw.full}` : ''}\r\n                                />\r\n                                <i className=\"material-icons\" onClick={() => event.productSearch()}>search</i>\r\n                            </div>\r\n                            {\r\n                                (product && product.size) ? (\r\n                                    <>\r\n                                        <p>상품의 사이즈를 선택해주세요.</p>\r\n                                        <div className=\"shop-info-frame\">\r\n                                            <p>{product.info.sname}</p>\r\n                                            <h1>{product.info.pname}</h1>\r\n                                        </div>\r\n                                        <ul ref={sizeListFrame}>\r\n                                            {product.size.map((element,index) => (\r\n                                                <li key={index} className=\"size-element\" onClick={(e) => event.onSize(element.name, index, e)}>\r\n                                                    <p>{element.name}</p>\r\n                                                    <input type=\"hidden\" value={element.name}></input>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </>\r\n                                ) : (product && product.status === 404) ? (\r\n                                    <div className=\"no-data\">\r\n                                        <i className=\"material-icons\">sentiment_very_dissatisfied</i>\r\n                                        <p>입력하신 상품 정보가 아직 없어요.</p>\r\n                                    </div>\r\n                                ) : null\r\n                            }   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"selectOption\">\r\n                    <input type=\"hidden\" value=\"false\" />\r\n                    <p onClick={(e) => event.onSelect(e)}>아니요, 모르겠어요.</p>\r\n                </div>\r\n                <div className=\"apply\" >\r\n                    <h1 ref={applyBtn} onClick={() => event.apply()}>다음단계</h1>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Step1;","C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step2.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\UserProduct\\Step\\Step3.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\contents\\js\\ProductType.js",[],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\PasswordChange.js",["199","200"],"C:\\Users\\samsung\\Desktop\\react_study\\sizelity_app\\src\\components\\Setting\\InformaionChange.js",["201","202","203","204","205"],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":62,"column":8,"nodeType":"212","endLine":62,"endColumn":10,"suggestions":"213"},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"210","severity":1,"message":"216","line":121,"column":8,"nodeType":"212","endLine":121,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":35,"column":13,"nodeType":"220","messageId":"221","endLine":35,"endColumn":17},{"ruleId":"210","severity":1,"message":"222","line":37,"column":66,"nodeType":"212","endLine":37,"endColumn":68,"suggestions":"223"},{"ruleId":"210","severity":1,"message":"224","line":27,"column":8,"nodeType":"212","endLine":27,"endColumn":10,"suggestions":"225"},{"ruleId":"210","severity":1,"message":"226","line":165,"column":30,"nodeType":"227","endLine":165,"endColumn":93},{"ruleId":"210","severity":1,"message":"228","line":166,"column":32,"nodeType":"227","endLine":166,"endColumn":100},{"ruleId":"218","severity":1,"message":"229","line":24,"column":23,"nodeType":"220","messageId":"221","endLine":24,"endColumn":31},{"ruleId":"218","severity":1,"message":"230","line":2,"column":31,"nodeType":"220","messageId":"221","endLine":2,"endColumn":38},{"ruleId":"210","severity":1,"message":"231","line":99,"column":8,"nodeType":"212","endLine":99,"endColumn":10,"suggestions":"232"},{"ruleId":"210","severity":1,"message":"233","line":46,"column":8,"nodeType":"212","endLine":46,"endColumn":23,"suggestions":"234"},{"ruleId":"210","severity":1,"message":"235","line":57,"column":8,"nodeType":"212","endLine":57,"endColumn":10,"suggestions":"236"},{"ruleId":"218","severity":1,"message":"237","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":14},{"ruleId":"210","severity":1,"message":"238","line":272,"column":8,"nodeType":"212","endLine":272,"endColumn":31,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":58,"column":5,"nodeType":"242","messageId":"243","endLine":126,"endColumn":6},{"ruleId":"210","severity":1,"message":"244","line":172,"column":8,"nodeType":"212","endLine":172,"endColumn":10,"suggestions":"245"},{"ruleId":"210","severity":1,"message":"246","line":203,"column":8,"nodeType":"212","endLine":203,"endColumn":17,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":121,"column":25,"nodeType":"250","messageId":"251","endLine":121,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":131,"column":21,"nodeType":"254","endLine":131,"endColumn":51},{"ruleId":"218","severity":1,"message":"255","line":2,"column":22,"nodeType":"220","messageId":"221","endLine":2,"endColumn":31},{"ruleId":"256","severity":1,"message":"257","line":23,"column":27,"nodeType":"220","messageId":"258","endLine":23,"endColumn":35},{"ruleId":"256","severity":1,"message":"259","line":24,"column":23,"nodeType":"220","messageId":"258","endLine":24,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":153,"column":25,"nodeType":"250","messageId":"251","endLine":153,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":162,"column":21,"nodeType":"254","endLine":162,"endColumn":51},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["262"],["260"],["261"],"React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["263"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setCookies'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["265"],"Assignments to the 'gender' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'privacy' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'response' is assigned a value but never used.","'useMemo' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'location.search', 'referrer', 'server', 'setCookies', and 'sizelity_currentSearchData'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'event' and 'server'. Either include them or remove the dependency array.",["268"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'alert' and 'server'. Either include them or remove the dependency array.",["269"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'data' and 'event'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'data.praw.full' and 'data.size.name'. Either include them or remove the dependency array.",["271"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","no-const-assign","'username' is constant.","const","'name' is constant.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [userInfo]",{"range":"292","text":"293"},"Update the dependencies array to be: [request]",{"range":"294","text":"295"},"Update the dependencies array to be: [setCookies]",{"range":"296","text":"297"},"Update the dependencies array to be: [history, userInfo]",{"range":"298","text":"299"},"Update the dependencies array to be: [data, location.search, referrer, server, setCookies, sizelity_currentSearchData]",{"range":"300","text":"301"},"Update the dependencies array to be: [event, myProductData]",{"range":"302","text":"303"},"Update the dependencies array to be: [event, server]",{"range":"304","text":"305"},"Update the dependencies array to be: [alert, productData, server, userInfo]",{"range":"306","text":"307"},"Update the dependencies array to be: [data, event]",{"range":"308","text":"309"},"Update the dependencies array to be: [data.praw.full, data.size.name, product]",{"range":"310","text":"311"},[2012,2014],"[userInfo]",[4098,4100],"[request]",[3792,3794],"[setCookies]",[713,715],"[history, userInfo]",[3805,3807],"[data, location.search, referrer, server, setCookies, sizelity_currentSearchData]",[1375,1390],"[event, myProductData]",[1776,1778],"[event, server]",[10934,10957],"[alert, productData, server, userInfo]",[6838,6840],"[data, event]",[8244,8253],"[data.praw.full, data.size.name, product]"]